prompt,code
"`scikit-learn` से एक लीनियर रिग्रेशन (Linear Regression) मॉडल बनाओ","from sklearn.linear_model import LinearRegression\nmodel = LinearRegression()"
"`scikit-learn` में एक मॉडल को ट्रेन करो (`fit`)","model.fit(X_train, y_train)"
"`scikit-learn` में एक मॉडल से प्रेडिक्शन करो (`predict`)","predictions = model.predict(X_test)"
"`train_test_split` का उपयोग करके डेटा को स्प्लिट करो","from sklearn.model_selection import train_test_split\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2)"
"एक मॉडल की एक्यूरेसी (accuracy) को मापो","from sklearn.metrics import accuracy_score\naccuracy = accuracy_score(y_test, predictions)"
"एक क्लासिफिकेशन रिपोर्ट प्रिंट करो","from sklearn.metrics import classification_report\nprint(classification_report(y_test, predictions))"
"एक कन्फ्यूजन मैट्रिक्स (Confusion Matrix) बनाओ","from sklearn.metrics import confusion_matrix\ncm = confusion_matrix(y_test, predictions)"
"एक लॉजिस्टिक रिग्रेशन (Logistic Regression) मॉडल बनाओ","from sklearn.linear_model import LogisticRegression\nmodel = LogisticRegression()"
"एक डिसीजन ट्री (Decision Tree) क्लासिफायर बनाओ","from sklearn.tree import DecisionTreeClassifier\nmodel = DecisionTreeClassifier()"
"एक रैंडम फारेस्ट (Random Forest) क्लासिफायर बनाओ","from sklearn.ensemble import RandomForestClassifier\nmodel = RandomForestClassifier(n_estimators=100)"
"एक सपोर्ट वेक्टर मशीन (SVM) क्लासिफायर बनाओ","from sklearn.svm import SVC\nmodel = SVC()"
"K-मीन्स (K-Means) क्लस्टरिंग एल्गोरिथ्म का उपयोग करो","from sklearn.cluster import KMeans\nkmeans = KMeans(n_clusters=3)\nkmeans.fit(X)"
"फीचर स्केलिंग के लिए `StandardScaler` का उपयोग करो","from sklearn.preprocessing import StandardScaler\nscaler = StandardScaler()\nX_scaled = scaler.fit_transform(X)"
"एक `scikit-learn` पाइपलाइन (Pipeline) बनाओ","from sklearn.pipeline import Pipeline\npipe = Pipeline([('scaler', StandardScaler()), ('svc', SVC())])"
"ग्रिड सर्च (Grid Search) का उपयोग करके हाइपरपैरामीटर ट्यूनिंग करो","from sklearn.model_selection import GridSearchCV\nparameters = {'kernel':('linear', 'rbf')}\nclf = GridSearchCV(SVC(), parameters)"
"एक NumPy एरे बनाओ","import numpy as np\narr = np.array([1, 2, 3])"
"एक Pandas सीरीज (Series) बनाओ","import pandas as pd\ns = pd.Series([1, 2, 3])"
"एक Pandas DataFrame बनाओ","import pandas as pd\ndf = pd.DataFrame({'col1': [1, 2], 'col2': [3, 4]})"
"एक DataFrame को 'Age' कॉलम के आधार पर सॉर्ट करो","sorted_df = df.sort_values(by='Age')"
"एक DataFrame में एक नया कॉलम जोड़ो","df['new_column'] = df['column1'] * 2"
"एक DataFrame से एक कॉलम डिलीट करो","df.drop('column_name', axis=1, inplace=True)"
"एक DataFrame में NaN (मिसिंग) वैल्यूज को 0 से भरो","df.fillna(0, inplace=True)"
"एक DataFrame को एक कॉलम के आधार पर ग्रुप करो और योग निकालो","df.groupby('Category')['Amount'].sum()"
"दो DataFrames को मर्ज करो","pd.merge(df1, df2, on='common_column')"
"एक DataFrame को एक्सेल फाइल में सेव करो","df.to_excel('output.xlsx', index=False)"
"एक एक्सेल फाइल को Pandas में पढ़ो","df = pd.read_excel('input.xlsx')"
"Matplotlib का उपयोग करके एक सिंपल लाइन प्लॉट बनाओ","import matplotlib.pyplot as plt\nplt.plot([1, 2, 3], [4, 1, 5])\nplt.show()"
"Matplotlib का उपयोग करके एक स्कैटर प्लॉट बनाओ","import matplotlib.pyplot as plt\nplt.scatter([1,2,3], [5,2,8])\nplt.show()"
"Seaborn लाइब्रेरी को इम्पोर्ट करो","import seaborn as sns"
"Seaborn का उपयोग करके एक डिस्ट्रिब्यूशन प्लॉट (distplot) बनाओ","import seaborn as sns\n# data = ...\nsns.histplot(data)"
"Seaborn का उपयोग करके एक बॉक्स प्लॉट बनाओ","import seaborn as sns\n# df = ...\nsns.boxplot(x='category', y='value', data=df)"
"Seacorn का उपयोग करके एक वायलिन प्लॉट (violin plot) बनाओ","import seaborn as sns\n# df = ...\nsns.violinplot(x='day', y='tip', data=df)"
"Seaborn का उपयोग करके एक हीटमैप (heatmap) बनाओ","import seaborn as sns\n# data = ... (a 2D array)\nsns.heatmap(data)"
"Seaborn का उपयोग करके एक पेयर प्लॉट (pairplot) बनाओ","import seaborn as sns\n# df = ...\nsns.pairplot(df)"
"Plotly का उपयोग करके एक इंटरैक्टिव स्कैटर प्लॉट बनाओ","import plotly.express as px\n# df = ...\nfig = px.scatter(df, x='gdpPercap', y='lifeExp')\nfig.show()"
"NLTK (Natural Language Toolkit) को इम्पोर्ट करो","import nltk"
"एक वाक्य को शब्दों में टोकनाइज़ करो (NLTK)","import nltk\nsentence = 'Hello world.'\ntokens = nltk.word_tokenize(sentence)"
"एक टेक्स्ट से स्टॉप वर्ड्स (stop words) हटाओ","from nltk.corpus import stopwords\nstop_words = set(stopwords.words('english'))\n# ... filter tokens ..."
"टेक्स्ट का स्टेमिंग (stemming) करो","from nltk.stem import PorterStemmer\nstemmer = PorterStemmer()\nstemmed_word = stemmer.stem('running')"
"Word2Vec का कॉन्सेप्ट","// An algorithm to create word embeddings, representing words as vectors."
"TF-IDF का कॉन्सेप्ट","// A numerical statistic that is intended to reflect how important a word is to a document in a collection or corpus."
"एक Keras सीक्वेंशियल (Sequential) मॉडल बनाओ","from tensorflow.keras.models import Sequential\nfrom tensorflow.keras.layers import Dense\nmodel = Sequential()\nmodel.add(Dense(10, activation='relu'))"
"एक Keras मॉडल को Compile करो","model.compile(optimizer='adam', loss='binary_crossentropy', metrics=['accuracy'])"
"एक Keras मॉडल की समरी (summary) प्रिंट करो","model.summary()"
"OpenCV (cv2) का उपयोग करके एक इमेज पढ़ो","import cv2\nimg = cv2.imread('image.jpg')"
"OpenCV का उपयोग करके एक इमेज को ग्रेस्केल में बदलो","gray_img = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)"
"OpenCV का उपयोग करके एक इमेज में चेहरे ढूंढो (स्यूडो-कोड)","face_cascade = cv2.CascadeClassifier('haarcascade_frontalface_default.xml')\nfaces = face_cascade.detectMultiScale(gray_img, 1.1, 4)"
"PyTorch में एक टेंसर (Tensor) बनाओ","import torch\nx = torch.tensor([[1, 2], [3, 4]])"
"एक AWS EC2 इंस्टेंस लॉन्च करने के लिए CLI कमांड","aws ec2 run-instances --image-id ami-0c55b159cbfafe1f0 --instance-type t2.micro"
"एक सिंपल AWS Lambda फंक्शन (पाइथन)","import json\n\ndef lambda_handler(event, context):\n    return {\n        'statusCode': 200,\n        'body': json.dumps('Hello from Lambda!')\n    }"
"एक सिंपल Google Cloud फंक्शन (पाइथन)","def hello_gcf(request):\n    return 'Hello, World!'"
"एक Docker कंटेनर को रन करो और पोर्ट को मैप करो","docker run -p 8080:80 nginx"
"एक Docker इमेज को बिल्ड करो","docker build -t my-app ."
"एक सिंपल Dockerfile (Node.js के लिए)","FROM node:18\nWORKDIR /app\nCOPY package.json .\nRUN npm install\nCOPY . .\nCMD [""node"", ""index.js""]"
"एक सिंपल Docker Compose फाइल (वेब + रेडिस)","version: '3.8'\nservices:\n  web:\n    build: .\n  redis:\n    image: 'redis:alpine'"
"Docker Compose को चलाओ","docker-compose up"
"एक Kubernetes Pod का YAML कॉन्फ़िगरेशन","apiVersion: v1\nkind: Pod\nmetadata:\n  name: my-pod\nspec:\n  containers:\n  - name: my-container\n    image: nginx"
"Kubectl का उपयोग करके एक Pod को अप्लाई करो","kubectl apply -f pod.yaml"
"Kubernetes में चल रहे सभी Pods को लिस्ट करो","kubectl get pods"
"एक Kubernetes डिप्लॉयमेंट (Deployment) का YAML","apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: my-deployment\nspec:\n  replicas: 3\n  ..."
"एक Kubernetes सर्विस (Service) का YAML","apiVersion: v1\nkind: Service\nmetadata:\n  name: my-service\nspec:\n  selector:\n    app: MyApp\n  ports:\n    - protocol: TCP\n      port: 80\n      targetPort: 9376"
"सर्वरलेस फ्रेमवर्क (Serverless Framework) का एक `serverless.yml` उदाहरण","service: my-service\nprovider:\n  name: aws\n  runtime: python3.9\nfunctions:\n  hello:\n    handler: handler.hello"
"AWS S3 बकेट में एक फाइल अपलोड करो (CLI)","aws s3 cp my-file.txt s3://my-bucket-name/"
"AWS S3 बकेट से एक फाइल डाउनलोड करो (CLI)","aws s3 cp s3://my-bucket-name/my-file.txt ."
"Google Cloud Storage बकेट बनाओ (CLI)","gcloud storage buckets create gs://my-bucket-name"
"एक फाइल को Google Cloud Storage पर अपलोड करो (CLI)","gcloud storage cp my-file.txt gs://my-bucket-name/"
"Infrastructure as Code (IaC) क्या है","// The process of managing and provisioning computer data centers through machine-readable definition files, rather than physical hardware configuration or interactive configuration tools."
"Terraform का उपयोग करके एक AWS S3 बकेट बनाओ","resource ""aws_s3_bucket"" ""my_bucket"" {\n  bucket = ""my-unique-bucket-name""\n}"
"Ansible का एक सिंपल प्लेबुक","---\n- hosts: webservers\n  tasks:\n    - name: Ensure nginx is at the latest version\n      apt:\n        name: nginx\n        state: latest"
"एक लोड बैलेंसर (Load Balancer) का कॉन्सेप्ट","// A device that acts as a reverse proxy and distributes network or application traffic across a number of servers."
"एक CDN (Content Delivery Network) का कॉन्सेप्ट","// A geographically distributed network of proxy servers and their data centers, which provide high availability and performance by distributing the service spatially relative to end users."
"एक वर्चुअल मशीन (VM) क्या है","// An emulation of a computer system. Virtual machines are based on computer architectures and provide functionality of a physical computer."
"कंटेनराइजेशन (Containerization) क्या है","// A lightweight form of virtualization that allows you to package an application with its dependencies into a single container."
"Docker और VM में क्या अंतर है","// VMs virtualize the hardware, while containers virtualize the operating system."
"एक CI/CD पाइपलाइन का कॉन्सेप्ट","// A series of steps that must be performed in order to deliver a new version of software. It involves stages like build, test, and deploy."
"GitHub Actions का एक वर्कफ्लो जो एक Docker इमेज बनाए और पुश करे","name: Docker CI\non: [push]\njobs:\n  build:\n    runs-on: ubuntu-latest\n    steps:\n    - uses: actions/checkout@v2\n    - name: Build and push Docker image\n      uses: docker/build-push-action@v2\n      with:\n        push: true\n        tags: user/app:latest"
"एक सर्वरलेस API Gateway बनाओ (AWS)","// In AWS Console, create an API Gateway that triggers a Lambda function."
"AWS DynamoDB (NoSQL) में एक आइटम डालो","aws dynamodb put-item --table-name Music --item '{\""Artist\"": {\""S"": ""No One You Know\""}}'"
"Google Firestore (NoSQL) में एक डॉक्यूमेंट जोड़ो","db.collection('users').add({'name': 'Amit'})"
"एक ब्लॉब स्टोरेज (Blob Storage) क्या है","// A feature for storing massive amounts of unstructured data, such as text or binary data."
"एक ऑब्जेक्ट स्टोरेज (Object Storage) क्या है","// A computer data storage architecture that manages data as objects, as opposed to other storage architectures like file systems."
"एक PaaS (Platform as a Service) का उदाहरण","// Heroku, Koyeb, Vercel, Google App Engine"
"एक IaaS (Infrastructure as a Service) का उदाहरण","// AWS EC2, Google Compute Engine, Microsoft Azure VMs"
"एक SaaS (Software as a Service) का उदाहरण","// Gmail, Dropbox, Salesforce"
"ऑटो-स्केलिंग (Auto-scaling) का कॉन्सेप्ट","// Automatically adjusting the amount of computational resources in a server farm - typically measured by the number of active servers - up or down, as demand changes."
"ब्लू-ग्रीन डिप्लॉयमेंट (Blue-Green Deployment) का कॉन्सेप्ट","// A deployment strategy in which you create two separate, but identical environments. One is 'blue' (live), and one is 'green' (new version). You switch traffic to green and can easily switch back if there's an issue."
"कैनरी डिप्लॉयमेंट (Canary Deployment) का कॉन्सेप्ट","// A strategy to reduce the risk of introducing a new software version in production by slowly rolling out the change to a small subset of users before rolling it out to the entire infrastructure."
"एक Prometheus मेट्रिक का उदाहरण","http_requests_total{method=""post"",code=""200""} 10"
"Grafana का उपयोग करके एक डैशबोर्ड बनाओ","// Use the Grafana UI to create dashboards from data sources like Prometheus."
"AWS RDS (Relational Database Service) का उपयोग करो","// A managed relational database service by Amazon Web Services."
"Google Cloud SQL का उपयोग करो","// A fully-managed relational database service for MySQL, PostgreSQL, and SQL Server."
"एक Docker वॉल्यूम (Volume) बनाओ","docker volume create my-volume"
"एक Docker कंटेनर में एक वॉल्यूम को माउंट करो","docker run -v my-volume:/app/data my-image"
"एक Docker नेटवर्क बनाओ","docker network create my-network"
"दो Docker कंटेनरों को एक ही नेटवर्क से जोड़ो","docker run --network=my-network --name=db ...\ndocker run --network=my-network --name=web ..."
"Nginx को एक रिवर्स प्रॉक्सी के रूप में कॉन्फ़िगर करो","location /api/ {\n    proxy_pass http://backend_server;\n}"
"एक SSL/TLS सर्टिफिकेट को Let's Encrypt से प्राप्त करो","certbot --nginx"
"एक सिस्टम को मॉनिटर करने के लिए `htop` कमांड","htop"
"SQL इंजेक्शन से बचने के लिए पैरामीटराइज्ड क्वेरी का उपयोग करो","""# Safe way using SQLAlchemy or similar ORM\nuser = session.query(User).filter(User.name == user_input).first()\n\n# Unsafe way (vulnerable to SQL Injection)\n# query = ""SELECT * FROM users WHERE name = '"" + user_input + ""'"""
"आउटपुट को एस्केप (escape) करके क्रॉस-साइट स्क्रिप्टिंग (XSS) से बचाव करो","""# In Flask/Jinja2, this is done automatically\n<p>{{ user_provided_content }}</p>"""
"एक 'Content Security Policy' (CSP) हेडर सेट करो","""# In Flask:\n@app.after_request\ndef add_security_headers(response):\n    response.headers['Content-Security-Policy'] = ""default-src 'self'""\n    return response"""
"Flask-WTF का उपयोग करके CSRF प्रोटेक्शन को इनेबल करो","from flask import Flask\nfrom flask_wtf.csrf import CSRFProtect\n\napp = Flask(__name__)\napp.config['SECRET_KEY'] = 'a-secret-key'\nCSRFProtect(app)"
"HTML फॉर्म में CSRF टोकन को रेंडर करो","""<form method='post'>\n    {{ form.csrf_token }} \n    \n</form>"""
"पासवर्ड को सुरक्षित रूप से हैश (hash) और साल्ट (salt) करो","from werkzeug.security import generate_password_hash\nhashed_pw = generate_password_hash('my_password', method='pbkdf2:sha256')"
"हैश किए हुए पासवर्ड को वेरीफाई करो","from werkzeug.security import check_password_hash\ncheck_password_hash(hashed_pw_from_db, 'submitted_password')"
"एक HTTPS रीडायरेक्ट को कॉन्फ़िगर करो (Nginx)","server {\n    listen 80;\n    server_name example.com;\n    return 301 https://$server_name$request_uri;\n}"
"एक API के लिए रेट लिमिटिंग लागू करो (Flask-Limiter)","from flask_limiter import Limiter\nlimiter = Limiter(app, default_limits=['100 per day'])\n@app.route('/api')\n@limiter.limit('10/minute')\ndef api():\n    return 'OK'"
"क्लिकजैकिंग (Clickjacking) से बचने के लिए X-Frame-Options हेडर सेट करो","""# In Flask:\n@app.after_request\ndef add_header(response):\n    response.headers['X-Frame-Options'] = 'SAMEORIGIN'\n    return response"""
"एक JWT टोकन के लिए पेलोड (payload) बनाओ","import datetime\npayload = {\n    'user_id': 123,\n    'exp': datetime.datetime.utcnow() + datetime.timedelta(hours=1)\n}"
"PyJWT का उपयोग करके एक JWT टोकन बनाओ","import jwt\nsecret_key = 'your-secret'\ntoken = jwt.encode(payload, secret_key, algorithm='HS256')"
"JWT को ऑथेंटिकेट करने के लिए एक डेकोरेटर बनाओ","""from functools import wraps\ndef token_required(f):\n    @wraps(f)\n    def decorated(*args, **kwargs):\n        # ... token validation logic here ...\n        return f(*args, **kwargs)\n    return decorated"""
"Flask में एक फाइल अपलोड को सुरक्षित करो (secure_filename)","from werkzeug.utils import secure_filename\nfilename = secure_filename(user_uploaded_file.filename)"
"सुरक्षा के लिए नए टैब में खुलने वाले लिंक्स पर `rel='noopener noreferrer'` जोड़ो","<a href='https://example.com' target='_blank' rel='noopener noreferrer'>External Link</a>"
"डायरेक्ट्री ट्रैवर्सल हमले से बचाव","""# Sanitize user input before using it in file paths"""
"XML एक्सटर्नल एंटिटी (XXE) हमले का कॉन्सेप्ट","// An attack against an application that parses XML input, which can lead to information disclosure."
"सर्वर-साइड रिक्वेस्ट फोर्जरी (SSRF) का कॉन्सेप्ट","// An attack where an attacker can abuse server functionality to read or update internal resources."
"एक API की को (key) को सुरक्षित रूप से स्टोर करो (एनवायरनमेंट वेरिएबल)","import os\napi_key = os.getenv('MY_API_KEY')"
"एक HTTP Strict Transport Security (HSTS) हेडर सेट करो","response.headers['Strict-Transport-Security'] = 'max-age=31536000; includeSubDomains'"
"कुकीज के लिए `HttpOnly` और `Secure` फ्लैग्स सेट करो","resp.set_cookie('session_id', 'value', httponly=True, secure=True, samesite='Lax')"
"इनपुट वैलिडेशन का एक उदाहरण","age = request.form.get('age')\nif not age.isdigit() or not 0 < int(age) < 120:\n    return 'Invalid age', 400"
"ब्रूट-फोर्स हमलों को रोकने के लिए लॉगइन Attempts को सीमित करो","""# Logic to track failed login attempts per IP/username and implement a timeout"""
"एक 'robots.txt' फाइल बनाओ जो सेंसिटिव एरिया को ब्लॉक करे","User-agent: *\nDisallow: /admin/\nDisallow: /private/"
"एक .env फाइल का उपयोग करके सीक्रेट्स को मैनेज करो","""# .env file\nAPI_KEY=your_secret_key\n\n# Python code\nfrom dotenv import load_dotenv\nload_dotenv()\napi_key = os.getenv('API_KEY')"""
"डेटाबेस क्रेडेंशियल्स को सीधे कोड में न लिखें","""# Bad: db_uri = 'user:pass@host/db'\n# Good: db_uri = os.getenv('DATABASE_URI')"""
"Django में पासवर्ड हैशिंग का उपयोग","from django.contrib.auth.hashers import make_password, check_password\nhashed = make_password('my-secret-pass')"
"Django में क्लिकजैकिंग मिडलवेयर का उपयोग","""# Ensure 'django.middleware.clickjacking.XFrameOptionsMiddleware' is in MIDDLEWARE"""
"एक सिंपल फ़ायरवॉल नियम (UFW) का उदाहरण","ufw allow 80/tcp # Allow HTTP traffic"
"SQL इंजेक्शन से बचाव के लिए Stored Procedures का उपयोग","""-- SQL Code\nCREATE PROCEDURE GetUser @UserID INT\nAS\nSELECT * FROM Users WHERE UserID = @UserID"""
"सिक्योरिटी हेडर्स को चेक करने के लिए एक ऑनलाइन टूल का उपयोग करो","// Use a tool like securityheaders.com to scan your website."
"रेगुलर एक्सप्रेशन (RegEx) का उपयोग करके इनपुट को सैनिटाइज करो","import re\nclean_input = re.sub(r'[^a-zA-Z0-9]', '', user_input)"
"Open Redirect वल्नेरेबिलिटी से बचाव","""def redirect_to_url(url):\n    # Check if the URL is safe and on the same domain before redirecting\n    if is_safe_url(url):\n        return redirect(url)\n    return redirect('/')"""
"Django में XSS से बचाव","""\n{{ user_content }}"""
"एक HTTP पब्लिक की पिनिंग (HPKP) हेडर (अब Deprecated)","// A deprecated security feature that told a web client to associate a particular cryptographic public key with a certain web server."
"एक Cross-Site Request Forgery (CSRF) हमले का कॉन्सेप्ट","// An attack that forces an end user to execute unwanted actions on a web application in which they're currently authenticated."
"एक सेशन कुकी के लिए `SameSite` एट्रिब्यूट सेट करो","resp.set_cookie('session', 'value', samesite='Strict')"
"Django में एक लॉगइन व्यू का उपयोग करो","from django.contrib.auth.views import LoginView"
"Django में `@login_required` डेकोरेटर का उपयोग करो","from django.contrib.auth.decorators import login_required\n\n@login_required\ndef my_view(request):\n    ..."
"डेटा को एन्क्रिप्ट (Encrypt) करने के लिए एक लाइब्रेरी का उपयोग करो","from cryptography.fernet import Fernet\nkey = Fernet.generate_key()\nf = Fernet(key)\ntoken = f.encrypt(b'My secret message')"
"एन्क्रिप्टेड डेटा को डिक्रिप्ट (Decrypt) करो","decrypted_message = f.decrypt(token)"
"एक लॉगइन फॉर्म में 'Remember Me' फंक्शनैलिटी को सुरक्षित रूप से लागू करो","from flask_login import login_user\nlogin_user(user, remember=True, duration=datetime.timedelta(days=30))"
"डेटाबेस बैकअप को एन्क्रिप्ट करो","""# Use tools like gpg to encrypt database backup files"""
"सॉफ़्टवेयर डिपेंडेंसी को वल्नेरेबिलिटी के लिए स्कैन करो","""# Use tools like 'pip audit' or 'npm audit'"""
"Django में एक यूजर को बनाने के लिए सही तरीका","from django.contrib.auth import get_user_model\nUser = get_user_model()\nuser = User.objects.create_user(username='u', password='p')"
"API की (key) को लीक होने से बचाने के लिए git हुक्स का उपयोग करो","""# Use pre-commit hooks to scan for secrets before committing"""
"TLS/SSL का क्या मतलब है","// Protocols for encrypting internet traffic and verifying server identity."
"एक Man-in-the-Middle (MITM) हमले का कॉन्सेप्ट","// An attack where the attacker secretly relays and possibly alters the communication between two parties who believe they are directly communicating with each other."
"OWASP टॉप 10 क्या है","// A standard awareness document for developers and web application security, representing a broad consensus about the most critical security risks to web applications."
"एक सिक्योर पासवर्ड रीसेट मैकेनिज्म बनाओ","""1. User requests a reset.\n2. Generate a unique, single-use, time-limited token.\n3. Send a reset link with the token to the user's registered email.\n4. User clicks link, validates token, and sets a new password."""
"रिकर्शन का उपयोग करके फैक्टोरियल निकालो","def factorial(n):\n    if n <= 1: return 1\n    return n * factorial(n-1)"
"मेमोइज़ेशन (Memoization) का उपयोग करके फिबोनैची को ऑप्टिमाइज़ करो","memo = {}\ndef fib_memo(n):\n    if n in memo: return memo[n]\n    if n <= 1: return n\n    memo[n] = fib_memo(n-1) + fib_memo(n-2)\n    return memo[n]"
"डायनामिक प्रोग्रामिंग (टैबुलेशन) का उपयोग करके फिबोनैची निकालो","def fib_tabulation(n):\n    dp = [0] * (n + 1)\n    dp[1] = 1\n    for i in range(2, n + 1):\n        dp[i] = dp[i-1] + dp[i-2]\n    return dp[n]"
"एक बाइनरी सर्च (binary search) एल्गोरिथ्म लिखो","def binary_search(arr, target):\n    left, right = 0, len(arr) - 1\n    while left <= right:\n        mid = (left + right) // 2\n        if arr[mid] == target: return mid\n        elif arr[mid] < target: left = mid + 1\n        else: right = mid - 1\n    return -1"
"एक बबल सॉर्ट (bubble sort) एल्गोरिथ्म लिखो","def bubble_sort(arr):\n    n = len(arr)\n    for i in range(n):\n        for j in range(0, n-i-1):\n            if arr[j] > arr[j+1]: arr[j], arr[j+1] = arr[j+1], arr[j]"
"एक क्विक सॉर्ट (quick sort) एल्गोरिथ्म लिखो","def quick_sort(arr):\n    if len(arr) <= 1: return arr\n    pivot = arr[len(arr) // 2]\n    left = [x for x in arr if x < pivot]\n    middle = [x for x in arr if x == pivot]\n    right = [x for x in arr if x > pivot]\n    return quick_sort(left) + middle + quick_sort(right)"
"एक मर्ज सॉर्ट (merge sort) एल्गोरिथ्म का ढाँचा लिखो","def merge_sort(arr):\n    if len(arr) > 1:\n        mid = len(arr)//2\n        L = arr[:mid]\n        R = arr[mid:]\n        # ... recursive calls and merging logic ..."
"एक ग्राफ डेटा स्ट्रक्चर (adjacency list) का उपयोग करके बनाओ","graph = {\n    'A': ['B', 'C'],\n    'B': ['D', 'E'],\n    'C': ['F'],\n    'D': [], 'E': [], 'F': []\n}"
"एक ग्राफ में ब्रेथ-फर्स्ट सर्च (BFS) एल्गोरिथ्म लिखो","from collections import deque\ndef bfs(graph, start_node):\n    visited, queue = {start_node}, deque([start_node])\n    while queue:\n        node = queue.popleft()\n        # process node\n        for neighbor in graph[node]:\n            if neighbor not in visited:\n                visited.add(neighbor)\n                queue.append(neighbor)"
"एक ग्राफ में डेप्थ-फर्स्ट सर्च (DFS) एल्गोरिथ्म लिखो","def dfs(graph, start_node, visited=None):\n    if visited is None: visited = set()\n    visited.add(start_node)\n    # process node\n    for neighbor in graph[start_node]:\n        if neighbor not in visited:\n            dfs(graph, neighbor, visited)"
"डाइक्स्ट्रा (Dijkstra's) एल्गोरिथ्म का ढाँचा लिखो","import heapq\ndef dijkstra(graph, start):\n    distances = {node: float('infinity') for node in graph}\n    distances[start] = 0\n    pq = [(0, start)]\n    while pq:\n        # ... algorithm logic ..."
"एक स्टैक (stack) डेटा स्ट्रक्चर (LIFO) बनाओ","stack = []\nstack.append(1)\nstack.append(2)\nitem = stack.pop() # returns 2"
"एक क्यू (queue) डेटा स्ट्रक्चर (FIFO) बनाओ","from collections import deque\nqueue = deque()\nqueue.append(1)\nqueue.append(2)\nitem = queue.popleft() # returns 1"
"एक लिंक्ड लिस्ट (linked list) के लिए एक नोड क्लास बनाओ","class ListNode:\n    def __init__(self, value):\n        self.value = value\n        self.next = None"
"एक बाइनरी ट्री (binary tree) के लिए एक नोड क्लास बनाओ","class TreeNode:\n    def __init__(self, value):\n        self.value = value\n        self.left = None\n        self.right = None"
"एक बाइनरी सर्च ट्री (BST) में एक नोड इंसर्ट करो","def insert_bst(root, key):\n    if root is None: return TreeNode(key)\n    if key < root.val: root.left = insert_bst(root.left, key)\n    else: root.right = insert_bst(root.right, key)\n    return root"
"बाइनरी ट्री का इन-ऑर्डर ट्रैवर्सल (In-order Traversal)","def inorder_traversal(root):\n    if root:\n        inorder_traversal(root.left)\n        print(root.val)\n        inorder_traversal(root.right)"
"बाइनरी ट्री का प्री-ऑर्डर ट्रैवर्सल (Pre-order Traversal)","def preorder_traversal(root):\n    if root:\n        print(root.val)\n        preorder_traversal(root.left)\n        preorder_traversal(root.right)"
"बाइनरी ट्री का पोस्ट-ऑर्डर ट्रैवर्सल (Post-order Traversal)","def postorder_traversal(root):\n    if root:\n        postorder_traversal(root.left)\n        postorder_traversal(root.right)\n        print(root.val)"
"एक हीप (Heap) डेटा स्ट्रक्चर का उपयोग करो (`heapq`)","import heapq\nheap = [3, 1, 4, 1, 5, 9, 2]\nheapq.heapify(heap)\nheapq.heappush(heap, 0)"
"एक ट्राई (Trie) डेटा स्ट्रक्चर का नोड बनाओ","class TrieNode:\n    def __init__(self):\n        self.children = {}\n        self.is_end_of_word = False"
"Big O नोटेशन का O(1) या कांस्टेंट टाइम का उदाहरण","def get_first_element(arr):\n    return arr[0] # Always takes the same time"
"Big O नोटेशन का O(n) या लीनियर टाइम का उदाहरण","def find_element(arr, target):\n    for item in arr:\n        if item == target: return True # Time grows with input size n"
"Big O नोटेशन का O(n^2) या क्वाड्रेटिक टाइम का उदाहरण","def find_duplicates(arr):\n    for i in range(len(arr)):\n        for j in range(i + 1, len(arr)):\n            if arr[i] == arr[j]: return True # Nested loops"
"Big O नोटेशन का O(log n) या लॉगरिदमिक टाइम का उदाहरण"," # Binary search is an O(log n) algorithm"
"Big O नोटेशन का O(n log n) टाइम का उदाहरण"," # Efficient sorting algorithms like Merge Sort are O(n log n)"
"Two Sum प्रॉब्लम को हल करो","def two_sum(nums, target):\n    lookup = {}\n    for i, num in enumerate(nums):\n        if target - num in lookup:\n            return [lookup[target - num], i]\n        lookup[num] = i"
"एक स्ट्रिंग के शब्दों को उल्टा करो","def reverse_words(sentence):\n    return ' '.join(sentence.split()[::-1])"
"चेक करो कि एक स्ट्रिंग में सभी कैरेक्टर यूनिक हैं या नहीं","def has_unique_chars(s):\n    return len(s) == len(set(s))"
"एक नंबर आर्मस्ट्रांग नंबर है या नहीं, यह चेक करो","def is_armstrong(num):\n    s = str(num)\n    n = len(s)\n    return num == sum(int(digit)**n for digit in s)"
"एक कैशिंग डेकोरेटर `@lru_cache` बनाओ","from functools import lru_cache\n@lru_cache(maxsize=None)\ndef slow_function(n):\n    # ... slow calculation ...\n    return n"
"A* सर्च एल्गोरिथ्म का कॉन्सेप्ट","// A graph traversal and path-finding algorithm, which is often used in games and web-mapping."
"हफमैन कोडिंग (Huffman Coding) का कॉन्सेप्ट","// A lossless data compression algorithm."
"नॅपसैक प्रॉब्लम (Knapsack Problem) का एक डायनामिक प्रोग्रामिंग समाधान","def knapsack(weights, values, capacity):\n    # ... DP solution ..."
"लॉन्गेस्ट कॉमन सबसीक्वेंस (Longest Common Subsequence) प्रॉब्लम","def lcs(X, Y):\n    # ... DP solution ..."
"एक प्रायोरिटी क्यू (Priority Queue) बनाओ","import heapq\npq = []\nheapq.heappush(pq, (2, 'medium priority'))\nheapq.heappush(pq, (1, 'high priority'))\nheapq.heappush(pq, (3, 'low priority'))"
"एक मैट्रिक्स को 90 डिग्री रोटेट करो","def rotate_matrix(matrix):\n    return [list(row) for row in zip(*matrix[::-1])]"
"एक स्ट्रिंग के सभी परम्यूटेशन (permutations) जेनरेट करो","import itertools\nmy_list = ['a', 'b', 'c']\npermutations = list(itertools.permutations(my_list))"
"एक स्ट्रिंग के कैरेक्टर्स की फ्रीक्वेंसी काउंट करो","my_string = 'hello'\nfrequency = {char: my_string.count(char) for char in set(my_string)}"
"वैलिड ब्रैकेट्स प्रॉब्लम को हल करो","def is_valid_brackets(s):\n    stack = []\n    mapping = {')': '(', '}': '{', ']': '['}\n    for char in s:\n        if char in mapping.values():\n            stack.append(char)\n        elif char in mapping.keys():\n            if not stack or mapping[char] != stack.pop():\n                return False\n    return not stack"
"डबल लिंक्ड लिस्ट (Doubly Linked List) का एक नोड बनाओ","class DListNode:\n    def __init__(self, value):\n        self.value = value\n        self.prev = None\n        self.next = None"
"एक सर्कुलर क्यू (Circular Queue) का कॉन्सेप्ट","// A queue that uses a fixed-size array and connects the end back to the beginning."
"स्लाइडिंग विंडो एल्गोरिथ्म का एक उदाहरण","def max_sum_subarray(arr, k):\n    # ... sliding window logic ..."
"स्ट्रिंग कम्प्रेशन एल्गोरिथ्म लिखो","def compress_string(s):\n    # ... logic to convert 'AAABBC' to 'A3B2C1' ..."
"यूनियन-फाइंड (Union-Find) डेटा स्ट्रक्चर का ढाँचा","class UnionFind:\n    def __init__(self, size):\n        self.parent = list(range(size))\n    def find(self, i):\n        # ... find logic with path compression ...\n    def union(self, i, j):\n        # ... union by rank/size ..."
"काडन्स एल्गोरिथ्म (Kadane's Algorithm) का उपयोग करो","def max_subarray_sum(arr):\n    max_so_far = -float('inf')\n    max_ending_here = 0\n    for x in arr:\n        max_ending_here = max_ending_here + x\n        if max_so_far < max_ending_here: max_so_far = max_ending_here\n        if max_ending_here < 0: max_ending_here = 0\n    return max_so_far"
"एक ब्लूम फ़िल्टर (Bloom Filter) का कॉन्सेप्ट","// A space-efficient probabilistic data structure used to test whether an element is a member of a set."
"एक हैश मैप/डिक्शनरी का अपना इम्प्लीमेंटेशन बनाओ","class HashTable:\n    def __init__(self):\n        self.size = 10\n        self.map = [None] * self.size\n    def _get_hash(self, key):\n        return hash(key) % self.size\n    # ... set and get methods ..."
"लीनियर प्रोग्रामिंग का एक उदाहरण (PuLP लाइब्रेरी)","from pulp import LpProblem, LpVariable\n# ... linear programming problem setup ..."
"git का उपयोग करके एक नई रिपॉजिटरी इनिशियलाइज़ करो","git init"
"git में एक फाइल को स्टेज करो","git add myfile.txt"
"git में सभी फाइलों को स्टेज करो","git add ."
"git में एक कमिट (commit) करो","git commit -m 'Initial commit'"
"git का स्टेटस चेक करो","git status"
"git का लॉग (log) देखो","git log"
"एक नई git ब्रांच बनाओ","git branch new-feature"
"एक दूसरी git ब्रांच पर स्विच करो","git checkout new-feature"
"एक git ब्रांच को मर्ज करो","git merge new-feature"
"एक git रिमोट (remote) जोड़ो","git remote add origin https://github.com/user/repo.git"
"एक लोकल ब्रांच को एक रिमोट रिपॉजिटरी पर पुश करो","git push -u origin main"
"एक रिमोट रिपॉजिटरी से बदलावों को पुल करो","git pull origin main"
"एक git रिपॉजिटरी को क्लोन करो","git clone https://github.com/user/repo.git"
"एक `.gitignore` फाइल बनाओ","// Create a file named .gitignore"
"`.gitignore` में एक फाइल या फोल्डर को इग्नोर करो","// In .gitignore:\nmy_secret_file.txt\nnode_modules/"
"एक सिंपल Dockerfile बनाओ (पाइथन के लिए)","FROM python:3.9-slim\nWORKDIR /app\nCOPY . /app\nCMD [""python"", ""./app.py""]"
"एक Docker इमेज को बिल्ड करो","docker build -t my-python-app ."
"एक Docker कंटेनर को रन करो","docker run my-python-app"
"Docker Hub पर एक इमेज को पुश करो","docker push your-username/my-python-app"
"Docker Compose का एक सिंपल उदाहरण","version: '3'\nservices:\n  web:\n    build: ."
"एक Bash स्क्रिप्ट का 'shebang' लिखो","#!/bin/bash"
"एक Bash स्क्रिप्ट में một वेरिएबल बनाओ","MY_VAR='Hello'"
"एक Bash स्क्रिप्ट में एक वेरिएबल को प्रिंट करो","echo $MY_VAR"
"एक Bash स्क्रिप्ट में `if` स्टेटमेंट का उपयोग करो","if [ $MY_VAR == 'Hello' ]; then\n  echo 'Hi'\nfi"
"एक Bash स्क्रिप्ट में `for` लूप का उपयोग करो","for i in 1 2 3; do\n  echo $i\ndone"
"एक फाइल के परमिशन को बदलो (`chmod`)","chmod 755 myscript.sh"
"एक फाइल के ओनर को बदलो (`chown`)","chown user:group myfile.txt"
"VS Code में एक नया टर्मिनल खोलो","// Use shortcut Ctrl+` or Terminal > New Terminal"
"VS Code में JSON फाइल को फॉर्मेट करो","// Right-click > Format Document"
"एक `requirements.txt` फाइल से सभी पाइथन पैकेजेज इनस्टॉल करो","pip install -r requirements.txt"
"एक पाइथन वर्चुअल एनवायरनमेंट बनाओ","python -m venv venv"
"एक वर्चुअल एनवायरनमेंट को एक्टिवेट करो (Linux/Mac)","source venv/bin/activate"
"एक वर्चुअल एनवायरनमेंट को एक्टिवेट करो (Windows)","venv\\Scripts\\activate"
"SSH का उपयोग करके एक रिमोट सर्वर से कनेक्ट करो","ssh user@hostname"
"SCP का उपयोग करके एक फाइल को रिमोट सर्वर पर कॉपी करो","scp myfile.txt user@hostname:/remote/dir/"
"एक Cron Job का उदाहरण लिखो","* * * * * /usr/bin/python /path/to/script.py"
"JSON डेटा को `jq` का उपयोग करके कमांड-लाइन पर पार्स करो","cat data.json | jq '.key'"
"एक `pre-commit` हुक का कॉन्सेप्ट","// A git hook that runs checks before you are allowed to commit."
"CI/CD (Continuous Integration/Continuous Deployment) क्या है","// A practice of automating the build, test, and deployment of applications."
"GitHub Actions का एक सिंपल वर्कफ्लो बनाओ","name: CI\non: [push]\njobs:\n  build:\n    runs-on: ubuntu-latest\n    steps:\n    - uses: actions/checkout@v2"
"एक Makefile का एक सिंपल उदाहरण","build:\n\techo 'Building...'"
"एक Nginx कॉन्फ़िगरेशन का एक सिंपल उदाहरण","server {\n    listen 80;\n    location / {\n        proxy_pass http://localhost:5000;\n    }\n}"
"एक `.env` फाइल का उपयोग करके एनवायरनमेंट वेरिएबल्स को मैनेज करो","API_KEY='your_secret_key'"
"Linter (जैसे ESLint) का उपयोग करके कोड को फॉर्मेट करो","eslint your-file.js --fix"
"एक 'Hello World' C++ प्रोग्राम","""#include <iostream>\nint main() {\n    std::cout << ""Hello, World!"";\n    return 0;\n}"""
"एक 'Hello World' Java प्रोग्राम","""class HelloWorld {\n    public static void main(String[] args) {\n        System.out.println(""Hello, World!"");\n    }\n}"""
"एक 'Hello World' Go प्रोग्राम","""package main\nimport ""fmt""\nfunc main() {\n    fmt.Println(""Hello, World!"")\n}"""
"एक 'Hello World' Rust प्रोग्राम","""fn main() {\n    println!(""Hello, world!"");\n}"""
"एक 'Hello World' PHP स्क्रिप्ट","""<?php echo 'Hello, World!'; ?>"""
"REST API का GET मेथड","// Method to retrieve data. Example: GET /api/users"
"REST API का POST मेथड","// Method to create new data. Example: POST /api/users"
"REST API का PUT मेथड","// Method to update existing data. Example: PUT /api/users/1"
"REST API का DELETE मेथड","// Method to delete data. Example: DELETE /api/users/1"
"एक HTTP 200 OK स्टेटस कोड का मतलब","// The request was successful."
"एक HTTP 201 Created स्टेटस कोड का मतलब","// A new resource was successfully created."
"एक HTTP 404 Not Found स्टेटस कोड का मतलब","// The requested resource could not be found."
"एक HTTP 401 Unauthorized स्टेटस कोड का मतलब","// Authentication is required and has failed."
"एक HTTP 500 Internal Server Error स्टेटस कोड का मतलब","// An unexpected error occurred on the server."
"एक सिंपल GraphQL क्वेरी लिखो","query { user(id: 1) { name, city } }"
"एक सिंपल GraphQL म्यूटेशन (mutation) लिखो","mutation { createUser(name: ""Amit"") { id, name } }"
"API रिक्वेस्ट में API की (key) कैसे भेजें","// As a query parameter: /api/data?api_key=YOUR_KEY\n// As a header: X-API-Key: YOUR_KEY"
"OAuth 2.0 का बेसिक फ्लो","// 1. User is redirected to provider. 2. User grants permission. 3. App receives an authorization code. 4. App exchanges code for an access token."
"एक बेसिक XML डॉक्यूमेंट का स्ट्रक्चर","<note><to>Amit</to><from>Gemini</from><heading>Reminder</heading></note>"
"XML को पाइथन में पार्स करो (`xml.etree`)","import xml.etree.ElementTree as ET\ntree = ET.parse('data.xml')\nroot = tree.getroot()"
"एक बेसिक YAML डॉक्यूमेंट का स्ट्रक्चर","user:\n  name: Amit\n  city: Lucknow"
"YAML को पाइथन में पार्स करो (`PyYAML`)","import yaml\nwith open('data.yaml', 'r') as f:\n    data = yaml.safe_load(f)"
"JSON और XML में क्या अंतर है","// JSON is generally more lightweight and easier to parse for web applications."
"एक API एंडपॉइंट (endpoint) क्या होता है","// A specific URL where an API can be accessed, e.g., /api/users/1"
"SOAP API का कॉन्सेप्ट","// A protocol for exchanging structured information, often using XML."
"Webhooks का कॉन्सेप्ट","// A way for an app to provide other applications with real-time information. A server-to-server push."
"JWT (JSON Web Token) का स्ट्रक्चर","// Header.Payload.Signature"
"JWT को पाइथन में डिकोड करो (`PyJWT`)","import jwt\ndecoded = jwt.decode(encoded_token, 'secret', algorithms=['HS256'])"
"CORS (Cross-Origin Resource Sharing) क्या है","// A browser security feature that restricts cross-origin HTTP requests."
"Flask-CORS का उपयोग करके CORS को इनेबल करो","from flask_cors import CORS\napp = Flask(__name__)\nCORS(app)"
"एक idempotant API रिक्वेस्ट क्या होती है","// An operation that produces the same result if executed multiple times, e.g., PUT or DELETE."
"API वर्जनिंग का एक उदाहरण","// /api/v1/users vs /api/v2/users"
"OpenAPI (Swagger) स्पेसिफिकेशन का एक हिस्सा","openapi: 3.0.0\ninfo:\n  title: Simple API\npaths:\n  /users:\n    get:\n      summary: Returns a list of users."
"Postman का उपयोग करके एक API को टेस्ट करो","// Use the Postman application to send GET/POST requests to an API endpoint."
"curl का उपयोग करके एक GET रिक्वेस्ट करो","curl http://api.example.com/data"
"curl का उपयोग करके एक POST रिक्वेस्ट करो","curl -X POST -H 'Content-Type: application/json' -d '{\""key\"":\""value\""}' http://api.example.com/data"
"एक 'rate limiting' API एरर (429) का मतलब","// You have sent too many requests in a given amount of time."
"GraphQL में एक स्कीमा (schema) डिफाइन करो","type User {\n  id: ID!\n  name: String\n}"
"GraphQL में एक रिजोल्वर (resolver) का कॉन्सेप्ट","// A function on the backend that fetches the data for a specific field in a GraphQL query."
"gRPC का कॉन्सेप्ट","// A high-performance RPC framework from Google, often used for microservices."
"Protocol Buffers का एक उदाहरण",".proto file defining message structures."
"एक API में पेजिनेशन (pagination) का उपयोग","// /api/posts?page=2&limit=20"
"API में सॉर्टिंग का एक उदाहरण","// /api/products?sort_by=price&order=desc"
"API में फ़िल्टरिंग का एक उदाहरण","// /api/orders?status=shipped"
"एक WebSocket API का उपयोग","const socket = new WebSocket('ws://example.com/socket');"
"Server-Sent Events (SSE) का उपयोग","const eventSource = new EventSource('/events');"
"HAL (Hypertext Application Language) का कॉन्सेप्ट","// A standard for defining hypermedia links within JSON responses."
"API ऑथेंटिकेशन के लिए 'Basic Auth' का उपयोग","// Sending a header like: Authorization: Basic Zm9vOmJhcg=="
"API के लिए एक हेल्थ चेक (health check) एंडपॉइंट बनाओ","@app.route('/health')\ndef health_check():\n    return 'OK', 200"
"JSONP का कॉन्सेप्ट","// An old method for requesting data from a server in a different domain, bypassing CORS limitations."
"एक RPC (Remote Procedure Call) क्या है","// A protocol that one program can use to request a service from a program located in another computer."
"API Gateway का कॉन्सेप्ट","// A server that acts as a single entry point into a system of microservices."
"Microservices आर्किटेक्चर का कॉन्सेप्ट","// Structuring an application as a collection of loosely coupled services."
"WebAssembly (WASM) क्या है","// A binary instruction format that allows code written in languages like C++ or Rust to run in a web browser."
"एक RSS फीड का XML स्ट्रक्चर","<rss version='2.0'><channel><title>My Blog</title><item>...</item></channel></rss>"
"Apache Avro डेटा फॉर्मेट","// A row-oriented remote procedure call and data serialization framework."
"MessagePack डेटा फॉर्मेट","// A fast, compact binary serialization format."
"BSON (Binary JSON) डेटा फॉर्मेट","// A binary-encoded serialization of JSON-like documents, used by MongoDB."
"API के लिए एक SDK (Software Development Kit) क्या है","// A set of tools and libraries for a specific platform to make using an API easier."
"एक webhook.site का उपयोग करके webhooks को टेस्ट करो","// Go to webhook.site to get a unique URL for testing incoming webhooks."
"API डॉक्युमेंटेशन का एक उदाहरण (Markdown)","""## Get User\n\n**Endpoint:** `GET /api/users/{id}`\n\nReturns a single user."""
"Idempotency Key का उपयोग","// Sending a unique key in a header to prevent duplicate POST requests from creating multiple resources."
"GraphQL में Fragments का उपयोग","""fragment userFields on User {\n  name\n  email\n}"""
"एक SQL `CREATE TABLE` स्टेटमेंट लिखो","CREATE TABLE Users (id INT, name VARCHAR(255));"
"एक SQL `INSERT INTO` स्टेटमेंट लिखो","INSERT INTO Users (id, name) VALUES (1, 'Amit');"
"एक टेबल से सभी डेटा को सिलेक्ट करो (`SELECT *`)","SELECT * FROM Users;"
"एक टेबल से कुछ खास कॉलम सिलेक्ट करो","SELECT name, age FROM Users;"
"`WHERE` क्लॉज का उपयोग करके डेटा को फ़िल्टर करो","SELECT * FROM Users WHERE city = 'Lucknow';"
"एक SQL `UPDATE` स्टेटमेंट लिखो","UPDATE Users SET city = 'Delhi' WHERE id = 1;"
"एक SQL `DELETE` स्टेटमेंट लिखो","DELETE FROM Users WHERE id = 1;"
"SQL में `AND` ऑपरेटर का उपयोग करो","SELECT * FROM Users WHERE country = 'India' AND age > 25;"
"SQL में `OR` ऑपरेटर का उपयोग करो","SELECT * FROM Users WHERE city = 'Lucknow' OR city = 'Delhi';"
"SQL में `LIKE` ऑपरेटर का उपयोग करो","SELECT * FROM Users WHERE name LIKE 'A%';"
"SQL में `IN` ऑपरेटर का उपयोग करो","SELECT * FROM Users WHERE city IN ('Lucknow', 'Delhi');"
"SQL में `BETWEEN` ऑपरेटर का उपयोग करो","SELECT * FROM Products WHERE price BETWEEN 100 AND 200;"
"एक SQL क्वेरी को `ORDER BY` का उपयोग करके सॉर्ट करो","SELECT * FROM Users ORDER BY name ASC;"
"एक SQL क्वेरी को `ORDER BY DESC` का उपयोग करके सॉर्ट करो","SELECT * FROM Users ORDER BY age DESC;"
"SQL में `LIMIT` का उपयोग करके रिजल्ट्स को सीमित करो","SELECT * FROM Users LIMIT 10;"
"SQL में `COUNT` एग्रीगेट फंक्शन का उपयोग करो","SELECT COUNT(id) FROM Users;"
"SQL में `SUM` एग्रीगेट फंक्शन का उपयोग करो","SELECT SUM(salary) FROM Employees;"
"SQL में `AVG` एग्रीगेट फंक्शन का उपयोग करो","SELECT AVG(age) FROM Users;"
"SQL में `MIN` और `MAX` फंक्शन का उपयोग करो","SELECT MIN(price), MAX(price) FROM Products;"
"SQL में `GROUP BY` का उपयोग करो","SELECT city, COUNT(id) FROM Users GROUP BY city;"
"SQL में `INNER JOIN` का उपयोग करो","SELECT Users.name, Orders.product FROM Users INNER JOIN Orders ON Users.id = Orders.user_id;"
"SQL में `LEFT JOIN` का उपयोग करो","SELECT Users.name, Orders.product FROM Users LEFT JOIN Orders ON Users.id = Orders.user_id;"
"SQL में `RIGHT JOIN` का उपयोग करो","SELECT Users.name, Orders.product FROM Users RIGHT JOIN Orders ON Users.id = Orders.user_id;"
"SQL में `FULL OUTER JOIN` का उपयोग करो","SELECT Users.name, Orders.product FROM Users FULL OUTER JOIN Orders ON Users.id = Orders.user_id;"
"एक कॉलम के लिए एक `Alias` (उपनाम) बनाओ","SELECT name AS username FROM Users;"
"एक प्राइमरी की (Primary Key) के साथ एक टेबल बनाओ","CREATE TABLE Products (product_id INT PRIMARY KEY, name VARCHAR(255));"
"एक फॉरेन की (Foreign Key) के साथ एक टेबल बनाओ","CREATE TABLE Orders (order_id INT, user_id INT, FOREIGN KEY (user_id) REFERENCES Users(id));"
"एक कॉलम में `UNIQUE` कंस्ट्रेंट जोड़ो","CREATE TABLE Users (id INT, email VARCHAR(255) UNIQUE);"
"एक कॉलम में `NOT NULL` कंस्ट्रेंट जोड़ो","CREATE TABLE Users (id INT, name VARCHAR(255) NOT NULL);"
"एक कॉलम में `DEFAULT` वैल्यू सेट करो","CREATE TABLE Users (id INT, country VARCHAR(255) DEFAULT 'India');"
"एक SQL `ALTER TABLE` स्टेटमेंट से एक कॉलम जोड़ो","ALTER TABLE Users ADD COLUMN email VARCHAR(255);"
"एक SQL `ALTER TABLE` स्टेटमेंट से एक कॉलम डिलीट करो","ALTER TABLE Users DROP COLUMN email;"
"एक SQL `DROP TABLE` स्टेटमेंट लिखो","DROP TABLE Users;"
"SQL में `HAVING` क्लॉज का उपयोग करो","SELECT city, COUNT(id) FROM Users GROUP BY city HAVING COUNT(id) > 10;"
"SQL में एक सबक्वेरी (Subquery) का उपयोग करो","SELECT name FROM Users WHERE id IN (SELECT user_id FROM Orders);"
"एक `UNION` ऑपरेटर का उपयोग करो","SELECT city FROM Customers UNION SELECT city FROM Suppliers;"
"एक `CASE` स्टेटमेंट का उपयोग करो","SELECT order_id, CASE WHEN quantity > 10 THEN 'High' ELSE 'Low' END AS category FROM OrderDetails;"
"SQL में वाइल्डकार्ड `_` का उपयोग करो","SELECT * FROM Users WHERE name LIKE '_mit';"
"एक SQL व्यू (View) बनाओ","CREATE VIEW IndianUsers AS SELECT * FROM Users WHERE country = 'India';"
"SQL में इंडेक्स (Index) बनाओ","CREATE INDEX idx_lastname ON Users (lastname);"
"एक ऑटो-इंक्रीमेंट (auto-increment) प्राइमरी की बनाओ","CREATE TABLE Users (id INTEGER PRIMARY KEY AUTOINCREMENT, name TEXT);"
"PostgreSQL में `SERIAL` का उपयोग करो","CREATE TABLE Users (id SERIAL PRIMARY KEY, name TEXT);"
"MySQL में `AUTO_INCREMENT` का उपयोग करो","CREATE TABLE Users (id INT AUTO_INCREMENT PRIMARY KEY, name TEXT);"
"NoSQL डेटाबेस (जैसे MongoDB) का कॉन्सेप्ट","// Data is stored in JSON-like documents instead of tables."
"MongoDB में एक डॉक्यूमेंट ढूंढो","db.users.findOne({name: 'Amit'})"
"MongoDB में एक नया डॉक्यूमेंट इंसर्ट करो","db.users.insertOne({name: 'Ria', city: 'Delhi'})"
"Redis (Key-Value Store) में một वैल्यू सेट करो","SET user:1 'Amit'"
"Redis से एक वैल्यू प्राप्त करो","GET user:1"
"SQL में `DISTINCT` का उपयोग करके यूनिक वैल्यूज निकालो","SELECT DISTINCT city FROM Users;"
"React में एक सिंपल फंक्शनल कंपोनेंट बनाओ","""import React from 'react';\n\nfunction Welcome() {\n  return <h1>Hello, World!</h1>;\n}"""
"React में JSX का एक उदाहरण","""const element = <h1>Hello, world!</h1>;"""
"React कंपोनेंट को रेंडर करो","""import ReactDOM from 'react-dom';\n\nReactDOM.render(<h1>Hello</h1>, document.getElementById('root'));"""
"React में props का उपयोग करो","""function Welcome(props) {\n  return <h1>Hello, {props.name}</h1>;\n}"""
"React में एक कंपोनेंट को props के साथ रेंडर करो","""<Welcome name='Amit' />"""
"React में `useState` हुक का उपयोग करके स्टेट बनाओ","""import { useState } from 'react';\n\nfunction Counter() {\n  const [count, setCount] = useState(0);\n}"""
"React में एक बटन क्लिक पर स्टेट को अपडेट करो","""const [count, setCount] = useState(0);\nreturn <button onClick={() => setCount(count + 1)}>Click</button>;"""
"React में एक लिस्ट को रेंडर करने के लिए `map` का उपयोग करो","""const numbers = [1, 2, 3];\nconst listItems = numbers.map((number) => <li>{number}</li>);"""
"React में कंडीशनल रेंडरिंग करो","""function Greeting(props) {\n  const isLoggedIn = props.isLoggedIn;\n  if (isLoggedIn) {\n    return <p>Welcome back!</p>;\n  }\n  return <p>Please sign up.</p>;\n}"""
"React में एक कंट्रोल्ड इनपुट फील्ड बनाओ","""const [name, setName] = useState('');\nreturn <input value={name} onChange={e => setName(e.target.value)} />;"""
"React में एक फॉर्म को हैंडल करो","""function MyForm() {\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    alert('Form submitted');\n  }\n  return <form onSubmit={handleSubmit}>...</form>;\n}"""
"React में `useEffect` हुक का उपयोग करो","""import { useEffect } from 'react';\n\nuseEffect(() => {\n  document.title = 'New Title';\n});"""
"React में `useEffect` में एक एम्प्टी डिपेंडेंसी एरे का उपयोग करो","""useEffect(() => {\n  // Runs only once after the initial render\n}, []);"""
"React में एक कंपोनेंट से दूसरे में डेटा पास करो","""<Parent><Child data='some data' /></Parent>"""
"Create React App के लिए कमांड","npx create-react-app my-app"
"React में CSS मॉड्यूल का उपयोग करो","""/* In styles.module.css */\n.myButton { color: red; }\n\n// In component.js\nimport styles from './styles.module.css';\n<button className={styles.myButton}>Red Button</button>"""
"React में इनलाइन स्टाइल का उपयोग करो","""const divStyle = { color: 'blue' };\n<div style={divStyle}>Blue Text</div>"""
"React Router में एक बेसिक रूट बनाओ","""import { BrowserRouter as Router, Route } from 'react-router-dom';\n<Router><Route path='/about'><About /></Route></Router>"""
"React Router में एक लिंक बनाओ","""import { Link } from 'react-router-dom';\n<Link to='/about'>About</Link>"""
"Context API का उपयोग करके एक प्रोवाइडर बनाओ","""const MyContext = React.createContext();\n\nfunction MyProvider({ children }) {\n  return <MyContext.Provider value='hello'>{children}</MyContext.Provider>;\n}"""
"Context API का उपयोग करके डेटा कंस्यूम करो","""import { useContext } from 'react';\nconst value = useContext(MyContext);"""
"एक सिंपल कस्टम हुक (custom hook) बनाओ","""import { useState } from 'react';\n\nfunction useCounter() {\n  const [count, setCount] = useState(0);\n  return [count, setCount];\n}"""
"Redux में một एक्शन (action) बनाओ","""const ADD_TODO = 'ADD_TODO';\nfunction addTodo(text) {\n  return { type: ADD_TODO, text };\n}"""
"Redux में एक रिड्यूसर (reducer) बनाओ","""function todos(state = [], action) {\n  switch (action.type) {\n    case 'ADD_TODO':\n      return [...state, { text: action.text }];\n    default:\n      return state;\n  }\n}"""
"Vue.js में một ऐप इंस्टेंस बनाओ","""const app = Vue.createApp({ ... });"""
"Vue में `data` प्रॉपर्टी का उपयोग करो","""const app = Vue.createApp({ data() { return { message: 'Hello Vue!' }; } });"""
"Vue टेम्पलेट में डेटा बाइंड करो","""<div id='app'>{{ message }}</div>"""
"Vue में `v-on:click` डायरेक्टिव का उपयोग करो","""<button v-on:click='counter += 1'>Add 1</button>"""
"Vue में `v-model` डायरेक्टिव का उपयोग करो","""<input v-model='message'>"""
"Vue में `v-if` डायरेक्टिव का उपयोग करो","""<p v-if='seen'>Now you see me</p>"""
"Vue में `v-for` डायरेक्टिव का उपयोग करो","""<ol><li v-for='todo in todos'>{{ todo.text }}</li></ol>"""
"Vue में एक कंपोनेंट बनाओ","""app.component('my-component', { template: '<div>A custom component!</div>' });"""
"Vue में computed प्रॉपर्टी का उपयोग करो","""computed: { reversedMessage() { return this.message.split('').reverse().join(''); } }"""
"Vue में props का उपयोग करो","""app.component('blog-post', { props: ['title'], template: '<h3>{{ title }}</h3>' });"""
"Next.js में एक नया पेज बनाओ","""// In pages/about.js\nfunction About() {\n  return <div>About Page</div>;\n}"""
"Next.js में `Link` कंपोनेंट का उपयोग करो","""import Link from 'next/link';\n<Link href='/about'>About</Link>"""
"Angular में एक कंपोनेंट जेनरेट करने के लिए कमांड","ng generate component my-component"
"Svelte में एक सिंपल कंपोनेंट बनाओ","""<script>\n  let name = 'world';\n</script>\n\n<h1>Hello {name}!</h1>"""
"Axios का उपयोग करके एक GET रिक्वेस्ट करो","""import axios from 'axios';\naxios.get('/api/user').then(response => console.log(response.data));"""
"Axios का उपयोग करके एक POST रिक्वेस्ट करो","""axios.post('/api/save', { name: 'Amit' });"""
"एक सिंपल प्रॉमिस-बेस्ड `setTimeout` बनाओ","""function delay(ms) {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}"""
"React में `Fragment` का उपयोग करो","""import { Fragment } from 'react';\n<Fragment><td>Hello</td><td>World</td></Fragment>"""
"React में props को डीस्ट्रक्चर करो","""function Welcome({ name }) {\n  return <h1>Hello, {name}</h1>;\n}"""
"React में `children` prop का उपयोग करो","""function Card({ children }) {\n  return <div className='card'>{children}</div>;\n}"""
"Node.js में एक सिंपल HTTP सर्वर बनाओ","""const http = require('http');\n\nconst server = http.createServer((req, res) => {\n  res.end('Hello');\n});\nserver.listen(3000);"""
"Express.js में एक सिंपल सर्वर बनाओ","""const express = require('express');\nconst app = express();\n\napp.get('/', (req, res) => {\n  res.send('Hello');\n});\napp.listen(3000);"""
"Node.js में `fs` मॉड्यूल से एक फाइल पढ़ो","""const fs = require('fs');\nfs.readFile('file.txt', 'utf8', (err, data) => {\n  console.log(data);\n});"""
"npm (Node Package Manager) का उपयोग करके एक पैकेज इनस्टॉल करो","npm install express"
"एक `package.json` फाइल बनाओ","npm init -y"
"Flask में एक ब्लूप्रिंट (Blueprint) बनाओ","""# In users.py:\nfrom flask import Blueprint\n\nusers_bp = Blueprint('users', __name__)"""
"Flask ऐप में ब्लूप्रिंट को रजिस्टर करो","""# In app.py:\nfrom users import users_bp\n\napp.register_blueprint(users_bp, url_prefix='/users')"""
"ब्लूप्रिंट में एक रूट डिफाइन करो","""# In users.py:\n@users_bp.route('/')\ndef get_users():\n    return 'List of users'"""
"Flask-SQLAlchemy लाइब्रेरी को इनस्टॉल करो","pip install Flask-SQLAlchemy"
"Flask-SQLAlchemy को अपने Flask ऐप में कॉन्फ़िगर करो","""from flask import Flask\nfrom flask_sqlalchemy import SQLAlchemy\n\napp = Flask(__name__)\napp.config['SQLALCHEMY_DATABASE_URI'] = 'sqlite:///test.db'\ndb = SQLAlchemy(app)"""
"SQLAlchemy का उपयोग करके एक 'User' मॉडल बनाओ","""class User(db.Model):\n    id = db.Column(db.Integer, primary_key=True)\n    username = db.Column(db.String(80), unique=True, nullable=False)"""
"SQLAlchemy का उपयोग करके डेटाबेस में एक नया यूज़र जोड़ो","""new_user = User(username='amit')\ndb.session.add(new_user)\ndb.session.commit()"""
"SQLAlchemy का उपयोग करके सभी यूज़र्स को क्वेरी करो","""all_users = User.query.all()"""
"SQLAlchemy का उपयोग करके एक यूज़र को ID से ढूंढो","""user = User.query.get(1)"""
"SQLAlchemy का उपयोग करके एक रिकॉर्ड को डिलीट करो","""user_to_delete = User.query.get(1)\ndb.session.delete(user_to_delete)\ndb.session.commit()"""
"SQLAlchemy में दो मॉडल्स के बीच One-to-Many रिलेशनशिप बनाओ","""class User(db.Model):\n    id = db.Column(db.Integer, primary_key=True)\n    posts = db.relationship('Post', backref='author')\n\nclass Post(db.Model):\n    id = db.Column(db.Integer, primary_key=True)\n    user_id = db.Column(db.Integer, db.ForeignKey('user.id'))"""
"Flask में `before_request` फंक्शन का उपयोग करो","""@app.before_request\ndef before_request_func():\n    print('Before every request')"""
"Flask में `after_request` फंक्शन का उपयोग करो","""@app.after_request\ndef after_request_func(response):\n    print('After every request')\n    return response"""
"Flask में कस्टम एरर पेज बनाओ","""from flask import render_template\n@app.errorhandler(404)\ndef not_found_error(error):\n    return render_template('404.html'), 404"""
"Flask में URL के लिए डायनामिक कन्वर्टर का उपयोग करो","""@app.route('/post/<int:post_id>')\ndef show_post(post_id):\n    # post_id will be an integer"""
"Flask में GET और POST दोनों रिक्वेस्ट को एक ही रूट पर हैंडल करो","""@app.route('/contact', methods=['GET', 'POST'])\ndef contact():\n    if request.method == 'POST':\n        return 'Handling POST request'\n    return 'Showing contact form'"""
"एक Django प्रोजेक्ट शुरू करने के लिए कमांड","django-admin startproject myproject"
"एक Django ऐप बनाने के लिए कमांड","python manage.py startapp myapp"
"Django में एक सिंपल मॉडल बनाओ","""# In myapp/models.py:\nfrom django.db import models\n\nclass Post(models.Model):\n    title = models.CharField(max_length=100)"""
"Django मॉडल्स को माइग्रेट करो","python manage.py makemigrations\npython manage.py migrate"
"Django में एक सिंपल व्यू बनाओ","""# In myapp/views.py:\nfrom django.http import HttpResponse\n\ndef index(request):\n    return HttpResponse('Hello, from Django!')"""
"Django में một URL को एक व्यू से जोड़ो","""# In myapp/urls.py:\nfrom django.urls import path\nfrom . import views\n\nurlpatterns = [path('', views.index, name='index')]"""
"Django में एक टेम्पलेट को रेंडर करो","""# In myapp/views.py:\nfrom django.shortcuts import render\n\ndef index(request):\n    return render(request, 'myapp/index.html')"""
"Django टेम्पलेट में एक वेरिएबल दिखाओ","""\n<h1>{{ my_variable }}</h1>"""
"Django टेम्पलेट में `for` लूप का उपयोग करो","""<ul>\n{% for item in my_list %}\n    <li>{{ item }}</li>\n{% endfor %}\n</ul>"""
"Django टेम्पलेट में `if` कंडीशन का उपयोग करो","""{% if user.is_authenticated %}\n    <p>Welcome!</p>\n{% endif %}"""
"Django एडमिन में एक मॉडल को रजिस्टर करो","""# In myapp/admin.py:\nfrom django.contrib import admin\nfrom .models import Post\n\nadmin.site.register(Post)"""
"Django में एक सुपरयूज़र बनाओ","python manage.py createsuperuser"
"Django में एक फॉर्म क्लास बनाओ","""from django import forms\n\nclass ContactForm(forms.Form):\n    name = forms.CharField()\n    email = forms.EmailField()"""
"Django व्यू में एक फॉर्म को हैंडल करो","""def contact_view(request):\n    if request.method == 'POST':\n        form = ContactForm(request.POST)\n        if form.is_valid():\n            # process data\n            return HttpResponse('Thanks!')"""
"Django ORM का उपयोग करके सभी ऑब्जेक्ट्स को क्वेरी करो","""all_posts = Post.objects.all()"""
"Django ORM का उपयोग करके एक ऑब्जेक्ट को फ़िल्टर करो","""some_posts = Post.objects.filter(title__startswith='Hello')"""
"Django ORM का उपयोग करके एक सिंगल ऑब्जेक्ट प्राप्त करो","""post = Post.objects.get(id=1)"""
"Django ORM का उपयोग करके एक नया ऑब्जेक्ट बनाओ और सेव करो","""new_post = Post(title='My New Post')\nnew_post.save()"""
"Django में स्टैटिक फाइलों को कैसे हैंडल करें","""# In settings.py:\nSTATIC_URL = '/static/'"""
"Django टेम्पलेट में स्टैटिक फाइल (जैसे CSS) को लोड करो","""{% load static %}\n<link rel='stylesheet' href='{% static 'css/style.css' %}'>"""
"Flask-Migrate का उपयोग करके डेटाबेस माइग्रेशन हैंडल करो","pip install Flask-Migrate"
"Flask-RestX का उपयोग करके एक REST API बनाओ","pip install flask-restx"
"Django Rest Framework का उपयोग करके एक Serializer बनाओ","""from rest_framework import serializers\n\nclass PostSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Post\n        fields = '__all__'"""
"Django Rest Framework का उपयोग करके एक API व्यू बनाओ","""from rest_framework.response import Response\nfrom rest_framework.decorators import api_view\n\n@api_view(['GET'])\ndef get_posts(request):\n    posts = Post.objects.all()\n    serializer = PostSerializer(posts, many=True)\n    return Response(serializer.data)"""
"Flask में Gunicorn का उपयोग करने के लिए कमांड","gunicorn --workers 4 app:app"
"Django में Gunicorn का उपयोग करने के लिए कमांड","gunicorn myproject.wsgi"
"Flask में एक यूज़र को लॉग इन करने के लिए सेशन का उपयोग","""session['user_id'] = user.id"""
"Flask में यूज़र के लॉग इन होने की जाँच","""if 'user_id' in session: ..."""
"Django में यूज़र के लॉग इन होने की जाँच","""if request.user.is_authenticated: ..."""
"Flask में request हुक्स का उपयोग करो","""@app.before_request, @app.after_request"""
"Django में मिडलवेयर (Middleware) का एक उदाहरण","""# A simple middleware class in middleware.py"""
"Flask-Mail का उपयोग करके ईमेल भेजो","pip install Flask-Mail"
"Django में ईमेल भेजने के लिए `send_mail` का उपयोग","""from django.core.mail import send_mail\nsend_mail('Subject', 'Body', 'from@example.com', ['to@example.com'])"""
"Flask में Celery का उपयोग करके एक बैकग्राउंड टास्क चलाओ","pip install celery"
"स्क्रीन रीडर के लिए एक इमेज में ऑल्ट (alt) टेक्स्ट जोड़ो","<img src='logo.png' alt='Company Logo'>"
"पेज के हेडर के लिए सिमेंटिक HTML टैग का उपयोग करो","<header><h1>Main Website Title</h1><nav>...</nav></header>"
"नेविगेशन लिंक्स के लिए सिमेंटिक `nav` टैग का उपयोग करो","<nav><ul><li><a href='/home'>Home</a></li><li><a href='/about'>About</a></li></ul></nav>"
"पेज के मुख्य कंटेंट के लिए सिमेंटिक `main` टैग का उपयोग करो","<main><h2>Article Title</h2><p>This is the main content of the page.</p></main>"
"पेज के फुटर के लिए सिमेंटिक `footer` टैग का उपयोग करो","<footer><p>&copy; 2025 Amit Saka. All rights reserved.</p></footer>"
"एक div को बटन की तरह बनाने के लिए ARIA रोल जोड़ो","<div role='button' tabindex='0' onclick=""alert('Clicked!')"">Clickable Div</div>"
"एक `div` को नेविगेशन की तरह बनाने के लिए ARIA रोल जोड़ो","<div role='navigation' aria-label='Main Navigation'>...links here...</div>"
"एक आइकन बटन को स्पष्ट लेबल देने के लिए `aria-label` का उपयोग करो","<button aria-label='Close'>&times;</button>"
"एक इनपुट फील्ड के लिए एक `label` को `for` एट्रिब्यूट से जोड़ो","<label for='username'>Username:</label><input id='username' type='text'>"
"संबंधित फॉर्म कंट्रोल्स को ग्रुप करने के लिए `fieldset` और `legend` का उपयोग करो","<fieldset><legend>Shipping Address</legend><label>Street:</label><input>...</fieldset>"
"SEO के लिए एक मेटा डिस्क्रिप्शन टैग जोड़ो","<meta name='description' content='Learn to build an amazing AI coding assistant with our step-by-step guide.'>"
"SEO के लिए मेटा कीवर्ड्स टैग जोड़ो","<meta name='keywords' content='AI, HTML, CSS, JavaScript, Coding Bot, Tutorial'>"
"पेज के लेखक के लिए मेटा टैग जोड़ो","<meta name='author' content='Amit Saka'>"
"सोशल मीडिया शेयरिंग के लिए OG (Open Graph) टाइटल टैग जोड़ो","<meta property='og:title' content='I am building an AI Coding Assistant!'>"
"सोशल मीडिया शेयरिंग के लिए OG टाइप 'website' सेट करो","<meta property='og:type' content='website'>"
"सोशल मीडिया शेयरिंग के लिए OG URL टैग जोड़ो","<meta property='og:url' content='https://example.com/my-ai-project.html'>"
"सोशल मीडिया शेयरिंग के लिए OG इमेज टैग जोड़ो","<meta property='og:image' content='https://example.com/project-thumbnail.jpg'>"
"ट्विटर कार्ड के लिए एक 'summary' टैग बनाओ","<meta name='twitter:card' content='summary'>"
"वेबसाइट के लिए एक favicon लिंक करो","<link rel='icon' href='/favicon.ico' type='image/x-icon'>"
"डुप्लीकेट कंटेंट से बचने के लिए एक कैनोनिकल (canonical) URL सेट करो","<link rel='canonical' href='https://example.com/preferred-url-of-this-page.html'>"
"सर्च इंजन को एक पेज को इंडेक्स न करने के लिए कहो","<meta name='robots' content='noindex'>"
"सर्च इंजन को एक पेज के लिंक्स को फॉलो न करने के लिए कहो","<meta name='robots' content='nofollow'>"
"`html` टैग पर पेज की भाषा 'en' (English) सेट करो","<html lang='en'></html>"
"सुरक्षा के लिए नए टैब में खुलने वाले लिंक्स पर `rel` एट्रिब्यूट जोड़ो","<a href='https://externalsite.com' target='_blank' rel='noopener noreferrer'>External Link</a>"
"परफॉरमेंस के लिए इमेज को लेजी लोड (lazy load) करो","<img src='heavy-image.jpg' loading='lazy' alt='a very large image'>"
"पेज रेंडरिंग को ब्लॉक न करने के लिए स्क्रिप्ट को `async` के साथ लोड करो","<script src='analytics.js' async></script>"
"पेज रेंडरिंग के बाद स्क्रिप्ट को चलाने के लिए `defer` का उपयोग करो","<script src='main-script.js' defer></script>"
"पेज लेआउट शिफ्ट से बचने के लिए इमेज में `width` और `height` एट्रिब्यूट दो","<img src='photo.jpg' width='200' height='150' alt='A properly sized photo'>"
"एक्सेसिबिलिटी के लिए एक 'Skip to main content' लिंक बनाओ","<a href='#main' class='skip-link'>Skip to main content</a><div style='height:50px;'>Navigation</div><main id='main'>Main content starts here.</main>"
"कीबोर्ड यूज़र्स के लिए फोकस आउटलाइन को बेहतर बनाओ","<style>a:focus, button:focus, input:focus { outline: 3px solid blue; }</style>"
"एक बटन को ARIA का उपयोग करके 'प्रेस्ड' स्टेट में दिखाओ","<button aria-pressed='true'>Mute</button>"
"एक्सेसिबिलिटी के लिए टेबल हेडर्स (`th`) का उपयोग करो","<table><thead><tr><th scope='col'>Name</th><th scope='col'>Age</th></tr></thead><tbody><tr><td>Amit</td><td>25</td></tr></tbody></table>"
"एक वीडियो के लिए ट्रैक्स/कैप्शन जोड़ो","<video controls><source src='movie.mp4' type='video/mp4'><track src='captions_en.vtt' kind='captions' srclang='en' label='English'></video>"
"जावास्क्रिप्ट से एक ARIA एट्रिब्यूट को बदलो","<button id='btn' aria-expanded='false' onclick=""this.setAttribute('aria-expanded', this.getAttribute('aria-expanded') === 'false' ? 'true' : 'false')"">Menu</button>"
"HTML में एक संक्षिप्त नाम (abbreviation) को डिफाइन करो","<p><abbr title='World Health Organization'>WHO</abbr> was founded in 1948.</p>"
"HTML कोड की भाषा को वैलिडेट करने के लिए W3C वैलिडेटर का उपयोग करो",""
"प्रिंट के लिए एक अलग स्टाइलशीट लिंक करो","<link rel='stylesheet' href='print.css' media='print'>"
"HTML `lang` एट्रिब्यूट का सही उपयोग","<p lang='fr'>Bonjour</p><p lang='es'>Hola</p>"
"एक लिंक के उद्देश्य को स्पष्ट करो","<a href='report.pdf'>Download the 2025 Financial Report (PDF)</a>"
"CSS में `prefers-reduced-motion` मीडिया क्वेरी का उपयोग करो","<style>@media (prefers-reduced-motion: reduce) { * { animation: none !important; transition: none !important; } }</style>"
"एक इनपुट के लिए ऑटो-कम्प्लीट को सही ढंग से सेट करो","<label for='email'>Email:</label><input type='email' id='email' autocomplete='email'>"
"एक प्रोग्रेस बार को `progress` टैग से बनाओ","<label for='file'>File progress:</label><progress id='file' max='100' value='70'> 70% </progress>"
"एक मीटर को `meter` टैग से बनाओ","<label for='disk_d'>Disk usage D:</label><meter id='disk_d' min='0' max='100' value='80'>80 out of 100</meter>"
"HTML5 `figure` और `figcaption` का सही उपयोग","<figure><img src='pic.jpg' alt='A descriptive alt text'><figcaption>This is a caption for the image.</figcaption></figure>"
"`aria-hidden='true'` का उपयोग करके सजावटी (decorative) एलिमेंट्स को छिपाओ","<i class='fas fa-star' aria-hidden='true'></i><span>Rating</span>"
"लिंक्स को अलग दिखाने के लिए सिर्फ रंग का इस्तेमाल न करें","<style>a.styled-link { color: blue; text-decoration: underline; }</style>"
"सुनिश्चित करें कि सभी क्लिक करने योग्य एलिमेंट्स काफी बड़े हों","<style>.touch-target{min-width:44px; min-height:44px;}</style><button class='touch-target'>Click</button>"
"`role='alert'` का उपयोग करके डायनाミック रूप से एरर मैसेज की घोषणा करो","<div id='error-msg' role='alert'></div><script>document.getElementById('error-msg').textContent = 'Invalid input!';</script>"
"`aria-live='polite'` का उपयोग करके लाइव अपडेट्स की घोषणा करो","<div id='live-region' aria-live='polite'></div><script>setInterval(() => { document.getElementById('live-region').textContent = 'New message received!'; }, 5000);</script>"
"सिमेंटिक तरीके से एक ब्लॉग कमेंट सेक्शन बनाओ","<article class='comment'><header><h4>User A</h4><time>2 hours ago</time></header><p>This is a comment.</p><footer><button>Reply</button></footer></article>"
"एक सिंपल लाइट/डार्क मोड टॉगल बटन बनाओ","<style>body.dark-mode{background:#121212; color:white;}</style><button onclick=""document.body.classList.toggle('dark-mode')"">Toggle Dark/Light Mode</button>"
"एक 'Copy to Clipboard' बटन बनाओ","<input id='copyInput' value='Text to copy'><button onclick=""document.getElementById('copyInput').select(); document.execCommand('copy'); alert('Copied!')"">Copy</button>"
"एक 5-स्टार रेटिंग कॉम्पोनेन्ट बनाओ","<style>.star{cursor:pointer; font-size:24px; color:grey;}.star:hover, .star:hover ~ .star {color:orange;}</style><div class='stars'><span>★</span><span>★</span><span>★</span><span>★</span><span>★</span></div>"
"एक डायनामिक प्रोग्रेस बार बनाओ जो बटन क्लिक पर 100% हो जाए","<div style='width:100%; background-color:#ddd;'><div id='progressBar' style='width:10%; height:20px; background-color:green; transition:width 0.5s;'></div></div><button onclick=""document.getElementById('progressBar').style.width='100%'"">Complete</button>"
"एक अकॉर्डियन बनाओ जो क्लिक करने पर कंटेंट दिखाए/छिपाए","<style>.panel{display:none;}</style><button onclick=""this.nextElementSibling.style.display = this.nextElementSibling.style.display==='block'?'none':'block';"">Toggle</button><div class='panel'><p>Hidden text.</p></div>"
"एक मोडल (popup) बॉक्स बनाओ","<style>.modal{display:none; position:fixed; top:0; left:0; width:100%; height:100%; background:rgba(0,0,0,0.5);}</style><button onclick=""document.getElementById('myModal').style.display='block'"">Open Modal</button><div id='myModal' class='modal'>...</div>"
"एक टैब वाला इंटरफ़ेस बनाओ","<style>.tabcontent{display:none;}</style><button onclick=""openTab('Tab1')"">Tab 1</button><div id='Tab1' class='tabcontent'>Content 1</div><script>function openTab(tabName){...}</script>"
"एक सिंपल सर्च फिल्टर बनाओ","<input onkeyup='filterList()'><ul id='myUL'><li>Apple</li></ul><script>function filterList(){...}</script>"
"एक 'Scroll to Top' बटन बनाओ","<style>#toTopBtn{display:none; position:fixed; bottom:20px;}</style><button id='toTopBtn' onclick=""window.scrollTo({top:0, behavior:'smooth'})"">Top</button><script>window.onscroll=()=>{...}</script>"
"एक पासवर्ड स्ट्रेंथ इंडिकेटर बनाओ","<input type='password' oninput=""document.getElementById('strength').innerText = this.value.length > 8 ? 'Strong' : 'Weak';""><p>Strength: <span id='strength'></span></p>"
"एक रियल-टाइम कैरेक्टर काउंटर बनाओ","<textarea oninput=""document.getElementById('charCount').innerText = this.value.length;""></textarea><p>Chars: <span id='charCount'>0</span></p>"
"एक स्नैकबार (toast) नोटिफिकेशन बनाओ","<style>#snackbar{visibility:hidden; ...}</style><button onclick=""var x=document.getElementById('snackbar'); x.style.visibility='visible'; setTimeout(()=>{x.style.visibility='hidden';}, 3000);"">Toast</button><div id='snackbar'>Notif!</div>"
"एक बटन बनाओ जो फॉर्म सबमिट होने पर डिसेबल हो जाए","<form onsubmit=""document.getElementById('submitBtn').disabled=true;""><button id='submitBtn'>Submit</button></form>"
"एक सिंपल ऑटोमेटिक इमेज स्लाइडर बनाओ","<img id='sliderImg' src='img1.jpg'><script>const imgs=['img1.jpg', 'img2.jpg']; let i=0; setInterval(()=>{i=(i+1)%imgs.length; document.getElementById('sliderImg').src=imgs[i];}, 2000)</script>"
"एक ड्रैग करने योग्य div बनाओ","<div id='dragMe' style='position:absolute; background:blue; cursor:move;'></div><script>dragElement(document.getElementById('dragMe')); function dragElement(elmnt){...}</script>"
"एक पासवर्ड फील्ड बनाओ जिसमें पासवर्ड को दिखाने/छिपाने का विकल्प हो","<input id='pwdInput' type='password'><input type='checkbox' onclick=""document.getElementById('pwdInput').type = this.checked ? 'text' : 'password';"">Show"
"एक डिजिटल क्लॉक बनाओ","<div id='clock'></div><script>setInterval(()=>document.getElementById('clock').innerText = new Date().toLocaleTimeString(), 1000);</script>"
"पेजिनेशन के लिए एक UI कॉम्पोनेन्ट बनाओ","<style>.pagination a.active{background:blue;}</style><div class='pagination'><a href='#'>1</a><a class='active' href='#'>2</a></div>"
"एक before/after इमेज स्लाइडर का UI बनाओ","<div style='position:relative;'><img src='before.jpg'><div style='position:absolute; width:50%; ...'><img src='after.jpg'></div></div>"
"एक कलर पिकर बनाओ जो पेज का बैकग्राउंड बदले","<input type='color' oninput=""document.body.style.backgroundColor=this.value;"">"
"एक टेक्स्ट का फॉन्ट साइज़ बदलने के लिए स्लाइडर बनाओ","<p id='resizeText'>Adjust</p><input type='range' oninput=""document.getElementById('resizeText').style.fontSize = this.value + 'px'"">"
"एक सिंपल क्विज बनाओ जो फीडबैक दे","<p>5+5?</p><button onclick=""alert('Correct!')"">10</button><button onclick=""alert('Wrong!')"">12</button>"
"एक स्टॉपवॉच का बेसिक UI बनाओ","<h2>00:00:00</h2><button>Start</button><button>Stop</button>"
"एक लाइव वेलकम मैसेज बनाओ","<input onkeyup=""document.getElementById('welcomeText').innerText = 'Welcome, ' + this.value""><h3 id='welcomeText'></h3>"
"एक डाइस रोल जेनरेटर बनाओ","<p>Dice: <span id='diceRoll'>0</span></p><button onclick=""document.getElementById('diceRoll').innerText = Math.floor(Math.random()*6)+1"">Roll</button>"
"एक वर्ड काउंटर टूल बनाओ","<textarea oninput=""document.getElementById('wc').innerText = this.value.trim().split(/\s+/).length;""></textarea><p>Words: <span id='wc'>0</span></p>"
"एक टेक्स्ट-टू-अपरकेस कनवर्टर बनाओ","<input oninput=""this.value=this.value.toUpperCase()"">"
"10 से 0 तक का एक काउंटडाउन टाइमर","<h2 id='countdownTimer'>10</h2><button onclick=""...setInterval(...)"">Start</button>"
"एक 'स्टिकी नोट' बनाओ जो localStorage में सेव हो","<textarea oninput=""localStorage.setItem('note', this.value);""></textarea><script>document.querySelector('textarea').value=localStorage.getItem('note');</script>"
"एक बेसिक BMI कैलकुलेटर बनाओ","<input id='h' placeholder='Height(m)'><input id='w' placeholder='Weight(kg)'><button onclick=""...document.getElementById('bmi').innerText=w/(h*h);"">Calc</button><p>BMI:<span id='bmi'></span></p>"
"सेल्सियस को फारेनहाइट में बदलने वाला कनवर्टर","<input placeholder='C' oninput=""document.getElementById('f').innerText=(this.value*9/5)+32;""><p>F: <span id='f'></span></p>"
"एक रैंडम कोट (quote) जेनरेटर","<p id='q_text'>Quote</p><script>const q=['A','B'];</script><button onclick=""...document.getElementById('q_text').innerText=q[...];"">New</button>"
"एक स्क्रॉल प्रोग्रेस बार बनाओ","<div id='pBar' style='position:fixed;top:0;height:5px;background:green;width:0%;'></div><script>window.onscroll=()=>{...}</script>"
"एक हॉरिजॉन्टल स्क्रॉलिंग मेन्यू","<style>.scroll-menu{display:flex; overflow-x:auto;}</style><div class='scroll-menu'>...</div>"
"एक कस्टम टूलटिप","<style>.tooltip .tooltiptext{visibility:hidden;...}.tooltip:hover .tooltiptext{visibility:visible;}</style><div class='tooltip'>...</div>"
"एक 'Read More' लिंक","<p>Short... <span id='more' style='display:none;'>more...</span></p><button onclick=""...document.getElementById('more').style.display='inline';"">More</button>"
"एक ऑडियो के लिए प्ले/पॉज बटन","<audio id='player' src='s.mp3'></audio><button onclick=""...play()"">Play</button><button onclick=""...pause()"">Pause</button>"
"एक डायनामिक टेबल","<table id='dynamicTable'></table><script>const data=[{n:'A'}];...</script>"
"एक सिंपल पोल (poll) कॉम्पोनेन्ट","<h3>Favorite?</h3><p><button>JS</button></p><p><button>Python</button></p>"
"एक क्रेडिट कार्ड इनपुट का UI","<div><label>Card:</label><input placeholder='0000...'>...</div>"
"एक सिंपल प्राइसिंग टेबल","<div style='display:flex;'><div style='border:1px solid'><h3>Basic</h3></div>...</div>"
"एक कुकी कंसेंट बैनर","<div id='cookieBanner' style='position:fixed; bottom:0;'>...<button onclick=""...style.display='none'"">Accept</button></div>"
"पेज को प्रिंट करने के लिए एक बटन","<button onclick='window.print()'>Print</button>"
"एक टेक्स्ट को बोलने के लिए (Text-to-Speech) बटन","<input id='textToSpeak'><button onclick=""...speechSynthesis.speak(...)"">Speak</button>"
"एक स्टेप-बाय-स्टेप प्रोग्रेस इंडिकेटर (stepper)","<style>.step.active{background:blue;}</style><div class='step active'>1</div>..."
"एक ब्रेडक्रंब (breadcrumb) नेविगेशन","<div><a href='#'>Home</a> &gt; <span>Data</span></div>"
"एक वीडियो के लिए कस्टम प्ले/पॉज बटन","<video id='myVideo'></video><button onclick=""...play()"">Play</button>"
"एक डायनामिक CSS वेरिएबल","<style>:root{--box-color: blue;}</style><div style='background:var(--box-color);'></div><button onclick=""...setProperty('--box-color', 'red')"">Change</button>"
"वेब स्क्रैपिंग के लिए `requests` और `BeautifulSoup` को इम्पोर्ट करो","import requests\nfrom bs4 import BeautifulSoup"
"एक वेबसाइट का HTML कंटेंट प्राप्त करो","import requests\nURL = 'http://example.com'\npage = requests.get(URL)"
"HTML कंटेंट को `BeautifulSoup` ऑब्जेक्ट में पार्स करो","from bs4 import BeautifulSoup\n# page = requests.get(...)\nsoup = BeautifulSoup(page.content, 'html.parser')"
"एक वेब पेज का टाइटल निकालो","soup = BeautifulSoup(html_content, 'html.parser')\ntitle = soup.title.string"
"एक वेब पेज से पहला पैराग्राफ निकालो","soup = BeautifulSoup(html_content, 'html.parser')\nfirst_p = soup.find('p').get_text()"
"एक वेब पेज से सभी पैराग्राफ (`p`) टैग्स निकालो","soup = BeautifulSoup(html_content, 'html.parser')\nall_paragraphs = soup.find_all('p')"
"एक वेब पेज से सभी लिंक्स (`a`) टैग्स निकालो","soup = BeautifulSoup(html_content, 'html.parser')\nall_links = soup.find_all('a')"
"सभी लिंक्स से URL (href) निकालो","for link in soup.find_all('a'):\n    print(link.get('href'))"
"एक खास `id` वाले एलिमेंट को ढूंढो","main_content = soup.find(id='main-content')"
"एक खास `class` वाले सभी एलिमेंट्स को ढूंढो","articles = soup.find_all(class_='blog-post')"
"एक एलिमेंट के पैरेंट को एक्सेस करो","p_tag = soup.find('p')\nparent_div = p_tag.parent"
"एक एलिमेंट के चिल्ड्रेन को एक्सेस करो","div = soup.find('div')\nfor child in div.children:\n    print(child.name)"
"CSS सिलेक्टर का उपयोग करके एक एलिमेंट ढूंढो","title = soup.select_one('head > title')"
"CSS सिलेक्टर का उपयोग करके कई एलिमेंट्स ढूंढो","list_items = soup.select('ul > li')"
"एक इमेज का `src` एट्रिब्यूट निकालो","image = soup.find('img')\nimage_url = image['src']"
"एक टेबल से सभी रो (`tr`) निकालो","table = soup.find('table')\nrows = table.find_all('tr')"
"एक टेबल के हेडर और डेटा को अलग-अलग निकालो","table = soup.find('table')\nheaders = [th.get_text() for th in table.find_all('th')]\ndata = [[td.get_text() for td in row.find_all('td')] for row in table.find_all('tr')]"
"एक वेब पेज से सभी हेडिंग्स (h1, h2, h3) निकालो","headings = soup.find_all(['h1', 'h2', 'h3'])"
"एक वेबसाइट पर लॉग इन करने के लिए `requests` सेशन का उपयोग करो","import requests\nsession = requests.Session()\nsession.post('http://example.com/login', data={'user':'a', 'pass':'b'})"
"एक लॉग-इन सेशन का उपयोग करके एक प्रोटेक्टेड पेज को स्क्रैप करो","protected_page = session.get('http://example.com/dashboard')"
"एक स्क्रैपिंग स्क्रिप्ट में यूजर-एजेंट सेट करो","headers = {'User-Agent': 'Mozilla/5.0 ...'}\npage = requests.get(URL, headers=headers)"
"त्रुटियों (errors) को हैंडल करने के लिए `try-except` ब्लॉक का उपयोग करो","import requests\ntry:\n    page = requests.get('http://invalid-url.xyz')\n    page.raise_for_status()\nexcept requests.exceptions.RequestException as e:\n    print(f'Error: {e}')"
"एक वेबसाइट की `robots.txt` फाइल को चेक करो","robots_txt = requests.get('http://example.com/robots.txt').text"
"स्क्रैप किए हुए डेटा को एक CSV फाइल में सेव करो","import csv\n# ... scraped data is a list of lists ...\nwith open('output.csv', 'w', newline='') as f:\n    writer = csv.writer(f)\n    writer.writerows(scraped_data)"
"एक वेब पेज से सभी इमेज URLs निकालो","for img in soup.find_all('img'):\n    print(img.get('src'))"
"अगले पेज (next page) के लिंक को फॉलो करो (पेजिनेशन)","next_page_link = soup.find('a', class_='next-page')\nif next_page_link:\n    next_url = next_page_link.get('href')"
"Selenium लाइब्रेरी को इम्पोर्ट करो","from selenium import webdriver"
"Selenium का उपयोग करके एक ब्राउज़र खोलो","from selenium import webdriver\ndriver = webdriver.Chrome()"
"Selenium से एक वेब पेज पर जाओ","driver.get('http://example.com')"
"Selenium से जावास्क्रिप्ट द्वारा लोड किए गए कंटेंट को स्क्रैप करो","import time\ndriver.get('http://example.com')\ntime.sleep(5) # Wait for JS to load\nhtml = driver.page_source\nsoup = BeautifulSoup(html, 'html.parser')"
"Selenium से एक एलिमेंट को `id` से ढूंढो","element = driver.find_element(By.ID, 'my-id')"
"Selenium से एक बटन पर क्लिक करो","button = driver.find_element(By.TAG_NAME, 'button')\nbutton.click()"
"Selenium से एक इनपुट फील्ड में टेक्स्ट टाइप करो","input_field = driver.find_element(By.NAME, 'username')\ninput_field.send_keys('my_username')"
"Selenium से एक स्क्रीनशॉट लो","driver.save_screenshot('screenshot.png')"
"Selenium ब्राउज़र को बंद करो","driver.quit()"
"एक API से JSON डेटा स्क्रैप करो","import requests\ndata = requests.get('http://api.example.com/data').json()"
"एक छिपे हुए (hidden) इनपुट फील्ड की वैल्यू निकालो","hidden_input = soup.find('input', {'type': 'hidden'})\nvalue = hidden_input['value']"
"एक वेब पेज से कमेंट्स निकालो","for comment in soup.find_all(string=lambda text: isinstance(text, Comment)):\n    print(comment)"
"एक पेज की सभी मेटा जानकारी (meta information) निकालो","meta_tags = soup.find_all('meta')"
"स्क्रैप किए हुए टेक्स्ट को साफ़ करो (`strip()`)","raw_text = '  Hello\\n  '\nclean_text = raw_text.strip()"
"lxml पार्सर का उपयोग करो","soup = BeautifulSoup(html_content, 'lxml')"
"एक एलिमेंट के सभी एट्रिब्यूट्स को एक डिक्शनरी के रूप में प्राप्त करो","tag = soup.find('a')\nattributes = tag.attrs"
"एक खास एट्रिब्यूट वाले टैग को ढूंढो","tag = soup.find('p', {'data-type': 'greeting'})"
"सिबलिंग (sibling) एलिमेंट्स पर इटरेट करो","for sibling in soup.find('h2').next_siblings:\n    print(sibling.name)"
"एक टेबल को Pandas DataFrame में बदलो","import pandas as pd\ntable = soup.find('table')\ndf = pd.read_html(str(table))[0]"
"Scrapy फ्रेमवर्क का एक बेसिक स्पाइडर बनाओ","import scrapy\nclass MySpider(scrapy.Spider):\n    name = 'myspider'\n    start_urls = ['http://example.com']\n\n    def parse(self, response):\n        pass # parsing logic here"
"एक XPath का उपयोग करके एलिमेंट्स को सिलेक्ट करो (lxml)","from lxml import html\ntree = html.fromstring(page.content)\nelements = tree.xpath('//a/text()')"
"एक पेज से सभी ईमेल एड्रेस निकालो (RegEx)","import re\nemails = re.findall(r'[\\w\\.-]+@[\\w\\.-]+', html_content)"
"Flask में एक सिंपल रजिस्ट्रेशन पेज का रूट बनाओ","""# In app.py:\nfrom flask import render_template\n@app.route('/register')\ndef register_page():\n    return render_template('register.html')"""
"एक HTML रजिस्ट्रेशन फॉर्म बनाओ","""\n<form action='/register' method='post'>\n    <input name='username' placeholder='Username'>\n    <input name='password' type='password' placeholder='Password'>\n    <button type='submit'>Register</button>\n</form>"""
"Flask में रजिस्ट्रेशन फॉर्म के POST डेटा को हैंडल करो","""# In app.py:\nfrom flask import request\n@app.route('/register', methods=['POST'])\ndef handle_registration():\n    username = request.form['username']\n    password = request.form['password']\n    # ... save user to database ...\n    return 'User registered!'"""
"Flask में एक सिंपल लॉगइन पेज का रूट बनाओ","""# In app.py:\nfrom flask import render_template\n@app.route('/login')\ndef login_page():\n    return render_template('login.html')"""
"एक HTML लॉगइन फॉर्म बनाओ","""\n<form action='/login' method='post'>\n    <input name='username' placeholder='Username'>\n    <input name='password' type='password' placeholder='Password'>\n    <button type='submit'>Login</button>\n</form>"""
"Flask में लॉगइन फॉर्म के POST डेटा को हैंडल करो","""# In app.py:\nfrom flask import request\n@app.route('/login', methods=['POST'])\ndef handle_login():\n    username = request.form['username']\n    # ... check user credentials ...\n    return f'Welcome, {username}'"""
"Flask में सेशन (session) को सेटअप करो","""# In app.py:\nfrom flask import Flask\napp = Flask(__name__)\napp.secret_key = 'a_very_secret_key'"""
"लॉगइन होने पर सेशन में यूज़र का नाम सेव करो","""# In app.py:\nfrom flask import session\n@app.route('/login', methods=['POST'])\ndef handle_login():\n    session['username'] = request.form['username']\n    return 'Logged in successfully!'"""
"एक प्रोटेक्टेड पेज बनाओ जो सिर्फ लॉग-इन यूज़र ही देख सके","""# In app.py:\nfrom flask import session, redirect, url_for\n@app.route('/dashboard')\ndef dashboard():\n    if 'username' in session:\n        return f'Hello, {session[""username""]}'\n    return redirect(url_for('login_page'))"""
"एक लॉगआउट रूट बनाओ जो सेशन को क्लियर करे","""# In app.py:\nfrom flask import session, redirect, url_for\n@app.route('/logout')\ndef logout():\n    session.pop('username', None)\n    return redirect(url_for('login_page'))"""
"टेम्पलेट में दिखाओ कि यूज़र लॉग-इन है या नहीं","""\n{% if session.username %}\n    <a href='/logout'>Logout</a>\n{% else %}\n    <a href='/login'>Login</a>\n{% endif %}"""
"Flask में पासवर्ड को हैश (hash) करो","""from werkzeug.security import generate_password_hash\nhashed_password = generate_password_hash('my_password')"""
"लॉगइन के समय हैश किए हुए पासवर्ड को चेक करो","""from werkzeug.security import check_password_hash\n# check_password_hash(hashed_password_from_db, submitted_password)"""
"Flask-Login लाइब्रेरी को इनस्टॉल करो","pip install Flask-Login"
"Flask-Login के लिए एक User क्लास बनाओ","""from flask_login import UserMixin\nclass User(UserMixin):\n    # ... id, username, password properties ..."""
"Flask-Login को इनिशियलाइज़ करो","""from flask_login import LoginManager\napp = Flask(__name__)\nlogin_manager = LoginManager()\nlogin_manager.init_app(app)"""
"`@login_required` डेकोरेटर का उपयोग करो","""from flask_login import login_required\n@app.route('/protected')\n@login_required\ndef protected_route():\n    return 'This is a protected page.'"""
"Flask-Login में `login_user` फंक्शन का उपयोग करो","""from flask_login import login_user\n# ... after checking credentials ...\nlogin_user(user_object)"""
"Flask-Login में `logout_user` फंक्शन का उपयोग करो","""from flask_login import logout_user\n@app.route('/logout')\n@login_required\ndef logout():\n    logout_user()\n    return 'Logged out'"""
"Flask-Login में `current_user` का उपयोग करो","""from flask_login import current_user\n@app.route('/')\ndef index():\n    if current_user.is_authenticated:\n        return f'Hello, {current_user.username}'\n    return 'Hello, Guest'"""
"एक रजिस्ट्रेशन API बनाओ जो JSON लौटाए","""# In app.py:\n@app.route('/api/register', methods=['POST'])\ndef api_register():\n    # ... logic ...\n    return jsonify({'status':'success'})"""
"AJAX का उपयोग करके रजिस्ट्रेशन फॉर्म सबमिट करो","""\n<script>\n// ... fetch POST call with username/password to /api/register ...\n</script>"""
"एक लॉगइन API बनाओ जो टोकन (token) लौटाए","""# In app.py:\n@app.route('/api/login', methods=['POST'])\ndef api_login():\n    # ... check credentials ...\n    return jsonify({'token': 'some_jwt_token'})"""
"जावास्क्रिप्ट में API से मिले टोकन को localStorage में सेव करो","""\n<script>\nfetch('/api/login', ...).then(r=>r.json()).then(d=>{\n    localStorage.setItem('auth_token', d.token);\n});\n</script>"""
"जावास्क्रिप्ट में हर API रिक्वेस्ट के साथ टोकन भेजो","""\n<script>\nconst token = localStorage.getItem('auth_token');\nfetch('/api/protected-data', { headers: {'Authorization': `Bearer ${token}`} });\n</script>"""
"Flask में Bearer टोकन को वैलिडेट करो","""# In app.py:\n@app.route('/api/protected-data')\ndef protected_data():\n    auth_header = request.headers.get('Authorization')\n    # ... validate token ...\n    return jsonify({'data': 'secret info'})"""
"Flask में 'flash' मैसेज का उपयोग करो","""from flask import flash, redirect, url_for\nflash('You were successfully logged in')\nreturn redirect(url_for('index'))"""
"Jinja2 टेम्पलेट में flash मैसेज दिखाओ","""{% with messages = get_flashed_messages() %}\n  {% if messages %}\n    <ul>\n    {% for message in messages %}\n      <li>{{ message }}</li>\n    {% endfor %}\n    </ul>\n  {% endif %}\n{% endwith %}"""
"एक 'Remember Me' फंक्शनैलिटी बनाओ","""\n<input type='checkbox' name='remember'> Remember Me\n\n# In app.py:\nlogin_user(user, remember=request.form.get('remember'))"""
"Flask-WTF लाइब्रेरी को इनस्टॉल करो","pip install Flask-WTF"
"Flask-WTF का उपयोग करके एक लॉगइन फॉर्म बनाओ","""from flask_wtf import FlaskForm\nfrom wtforms import StringField, PasswordField\nfrom wtforms.validators import DataRequired\n\nclass LoginForm(FlaskForm):\n    username = StringField('Username', validators=[DataRequired()])\n    password = PasswordField('Password', validators=[DataRequired()])"""
"Jinja2 टेम्पलेट में Flask-WTF फॉर्म को रेंडर करो","""<form method='post'>\n    {{ form.hidden_tag() }}\n    {{ form.username.label }} {{ form.username() }}\n    {{ form.password.label }} {{ form.password() }}\n</form>"""
"Flask रूट में WTF फॉर्म को प्रोसेस करो","""@app.route('/login', methods=['GET', 'POST'])\ndef wtf_login():\n    form = LoginForm()\n    if form.validate_on_submit():\n        # ... process login ...\n        return redirect('/')\n    return render_template('login.html', form=form)"""
"CSRF प्रोटेक्शन के लिए Flask-WTF का उपयोग करो","""from flask_wtf.csrf import CSRFProtect\napp = Flask(__name__)\napp.config['SECRET_KEY'] = 'a_secret_key'\nCSRFProtect(app)"""
"पासवर्ड रीसेट के लिए एक फॉर्म बनाओ","""<form action='/forgot-password' method='post'>\n    <label>Enter your email:</label>\n    <input type='email' name='email'>\n    <button>Send Reset Link</button>\n</form>"""
"पासवर्ड रीसेट लिंक भेजने के लिए एक Flask रूट","""@app.route('/forgot-password', methods=['POST'])\ndef forgot_password():\n    email = request.form['email']\n    # ... generate reset token and send email ...\n    return 'Reset link sent'"""
"एक नया पासवर्ड सेट करने के लिए एक फॉर्म","""<form action='/reset-password/<token>' method='post'>\n    <input name='new_password' type='password'>\n    <button>Set New Password</button>\n</form>"""
"OAuth (Sign in with Google) का बेसिक फ्लो","""# This is conceptual\n1. User clicks 'Sign in with Google'.\n2. Redirect to Google's consent screen.\n3. User consents, Google redirects back with a code.\n4. Server exchanges code for user info."""
"Flask में gunicorn का उपयोग करने के लिए कमांड","gunicorn -w 4 'app:app'"
"एक बेसिक यूजर मॉडल (SQLAlchemy) का ढाँचा","""from flask_sqlalchemy import SQLAlchemy\ndb = SQLAlchemy(app)\n\nclass User(db.Model):\n    id = db.Column(db.Integer, primary_key=True)\n    username = db.Column(db.String(80), unique=True, nullable=False)"""
"Flask-Bcrypt का उपयोग करके पासवर्ड हैश करो","""from flask_bcrypt import Bcrypt\nbcrypt = Bcrypt(app)\n\npw_hash = bcrypt.generate_password_hash('password').decode('utf-8')"""
"Flask-SQLAlchemy का उपयोग करके एक यूज़र को डेटाबेस में जोड़ो","""new_user = User(username='amit')\ndb.session.add(new_user)\ndb.session.commit()"""
"Flask-SQLAlchemy का उपयोग करके एक यूज़र को डेटाबेस से क्वेरी करो","""user = User.query.filter_by(username='amit').first()"""
"एक एडमिन-ओनली रूट बनाओ","""from functools import wraps\ndef admin_required(f):\n    @wraps(f)\n    def decorated_function(*args, **kwargs):\n        if not current_user.is_admin:\n            return 'Forbidden', 403\n        return f(*args, **kwargs)\n    return decorated_function"""
"API रेट लिमिटिंग का एक सिंपल उदाहरण (Flask-Limiter)","""from flask_limiter import Limiter\nlimiter = Limiter(app, default_limits=['200 per day'])\n\n@app.route('/slow')\n@limiter.limit('1 per minute')\ndef slow_route():\n    return 'I am slow'"""
"जावास्क्रिप्ट में लॉगआउट फंक्शन जो टोकन को क्लियर करे","""function logout() {\n    localStorage.removeItem('auth_token');\n    window.location.href = '/login';\n}"""
"एक 'Auth Guard' बनाओ जो पेज एक्सेस को रोके (JS)","""// In JavaScript router\nif (!localStorage.getItem('auth_token')) {\n    // redirect to login\n}"""
"HTTP Basic Auth का एक उदाहरण","""# In Python requests\nimport requests\nrequests.get('https://api.example.com/user', auth=('user', 'pass'))"""
"Flask में HTTP Basic Auth को हैंडल करो","""# Using a library like Flask-HTTPAuth"""
"2-फैक्टर ऑथेंटिकेशन (2FA) का कॉन्सेप्ट","""1. User enters password.\n2. Server sends a code to user's phone/app.\n3. User enters the code to complete login."""
"Pandas का उपयोग करके एक CSV फाइल पढ़ो","import pandas as pd\ndf = pd.read_csv('my_data.csv')"
"एक Pandas DataFrame से 'Name' कॉलम को सिलेक्ट करो","import pandas as pd\n# df = pd.read_csv('my_data.csv')\nnames = df['Name']"
"एक DataFrame को फ़िल्टर करो जहाँ 'Age' 30 से ज़्यादा हो","import pandas as pd\n# df = pd.read_csv('my_data.csv')\nadults = df[df['Age'] > 30]"
"एक DataFrame को एक नई CSV फाइल में सेव करो","import pandas as pd\n# df = ...\ndf.to_csv('output.csv', index=False)"
"एक DataFrame के पहले 5 रिकॉर्ड देखो","import pandas as pd\n# df = ...\nprint(df.head())"
"एक DataFrame के आखिरी 3 रिकॉर्ड देखो","import pandas as pd\n# df = ...\nprint(df.tail(3))"
"एक DataFrame का शेप (rows, columns) पता करो","import pandas as pd\n# df = ...\nprint(df.shape)"
"एक DataFrame के कॉलम्स के नाम पता करो","import pandas as pd\n# df = ...\nprint(df.columns)"
"एक DataFrame के बारे में जानकारी (info) प्रिंट करो","import pandas as pd\n# df = ...\nprint(df.info())"
"एक DataFrame की न्यूमेरिकल कॉलम्स का विवरण (describe) देखो","import pandas as pd\n# df = ...\nprint(df.describe())"
"एक DataFrame को 'Age' कॉलम के आधार पर सॉर्ट करो","import pandas as pd\n# df = ...\nsorted_df = df.sort_values(by='Age')"
"एक DataFrame में एक नया कॉलम जोड़ो","import pandas as pd\n# df = ...\ndf['New_Column'] = 0"
"एक DataFrame से एक कॉलम डिलीट करो","import pandas as pd\n# df = ...\ndf = df.drop('Column_to_delete', axis=1)"
"एक DataFrame में NaN (मिसिंग) वैल्यूज को ढूंढो","import pandas as pd\n# df = ...\nprint(df.isnull().sum())"
"NaN वैल्यूज वाली सभी रो को हटाओ","import pandas as pd\n# df = ...\ncleaned_df = df.dropna()"
"NaN वैल्यूज को 0 से भरो","import pandas as pd\n# df = ...\nfilled_df = df.fillna(0)"
"एक DataFrame को एक कॉलम ('City') के आधार पर ग्रुप करो","import pandas as pd\n# df = ...\ngrouped = df.groupby('City')"
"ग्रुप किए गए डेटा का औसत निकालो","import pandas as pd\n# df = ...\naverage_age_by_city = df.groupby('City')['Age'].mean()"
"एक डिक्शनरी से एक DataFrame बनाओ","import pandas as pd\ndata = {'Name': ['Amit', 'Ria'], 'Age': [25, 22]}\ndf = pd.DataFrame(data)"
"एक DataFrame के एक खास सेल की वैल्यू को एक्सेस करो (iloc)","import pandas as pd\n# df = ...\nvalue = df.iloc[0, 1] # First row, second column"
"एक DataFrame के एक खास सेल की वैल्यू को एक्सेस करो (loc)","import pandas as pd\n# df = ...\nvalue = df.loc[0, 'Name'] # First row, 'Name' column"
"`matplotlib` का उपयोग करके एक सिंपल लाइन प्लॉट बनाओ","import matplotlib.pyplot as plt\nplt.plot([1, 2, 3], [4, 5, 1])\nplt.show()"
"`matplotlib` का उपयोग करके एक बार चार्ट बनाओ","import matplotlib.pyplot as plt\nplt.bar(['A', 'B'], [10, 20])\nplt.show()"
"`matplotlib` का उपयोग करके एक हिस्टोग्राम बनाओ","import matplotlib.pyplot as plt\ndata = [1, 2, 2, 3, 3, 3, 4]\nplt.hist(data)\nplt.show()"
"`matplotlib` का उपयोग करके एक स्कैटर प्लॉट बनाओ","import matplotlib.pyplot as plt\nx=[1,2,3]\ny=[5,7,4]\nplt.scatter(x, y)\nplt.show()"
"एक प्लॉट में टाइटल और लेबल जोड़ो","import matplotlib.pyplot as plt\nplt.plot([1,2],[3,4])\nplt.title('My Plot')\nplt.xlabel('X-axis')\nplt.ylabel('Y-axis')\nplt.show()"
"एक प्लॉट में ग्रिड दिखाओ","import matplotlib.pyplot as plt\nplt.plot([1,2],[3,4])\nplt.grid(True)\nplt.show()"
"दो लाइनों को एक ही प्लॉट पर दिखाओ","import matplotlib.pyplot as plt\nplt.plot([1,2], [1,4], label='Line 1')\nplt.plot([1,2], [3,1], label='Line 2')\nplt.legend()\nplt.show()"
"एक पाई चार्ट बनाओ","import matplotlib.pyplot as plt\nlabels = 'A', 'B', 'C'\nsizes = [15, 30, 45]\nplt.pie(sizes, labels=labels, autopct='%1.1f%%')\nplt.show()"
"एक प्लॉट को एक फाइल में सेव करो","import matplotlib.pyplot as plt\nplt.plot([1,2,3])\nplt.savefig('my_plot.png')"
"एक कॉलम की यूनिक वैल्यूज को काउंट करो","import pandas as pd\n# df = ...\nvalue_counts = df['City'].value_counts()"
"दो DataFrames को मर्ज करो","import pandas as pd\n# df1, df2 = ...\nmerged_df = pd.merge(df1, df2, on='user_id')"
"एक DataFrame में `apply` फंक्शन का उपयोग करो","import pandas as pd\n# df = ...\ndf['Age_double'] = df['Age'].apply(lambda age: age * 2)"
"एक DataFrame को एक्सेल (Excel) फाइल में सेव करो","import pandas as pd\n# df = ...\ndf.to_excel('output.xlsx', index=False)"
"एक एक्सेल फाइल को Pandas में पढ़ो","import pandas as pd\ndf = pd.read_excel('input.xlsx')"
"Seaborn लाइब्रेरी को इम्पोर्ट करो","import seaborn as sns"
"Seaborn का उपयोग करके एक बॉक्स प्लॉट बनाओ","import seaborn as sns\n# df = ...\nsns.boxplot(x='day', y='total_bill', data=df)"
"Seaborn का उपयोग करके एक हीटमैप (heatmap) बनाओ","import seaborn as sns\n# data = ...\nsns.heatmap(data)"
"Seaborn का उपयोग करके एक पेयर प्लॉट (pairplot) बनाओ","import seaborn as sns\n# df = ...\nsns.pairplot(df)"
"एक NumPy एरे बनाओ","import numpy as np\narr = np.array([1, 2, 3])"
"एक 2D NumPy एरे बनाओ","import numpy as np\narr_2d = np.array([[1, 2], [3, 4]])"
"NumPy एरे का शेप पता करो","import numpy as np\narr = np.array([[1,2],[3,4]])\nprint(arr.shape)"
"NumPy में zeros का एक एरे बनाओ","import numpy as np\nzeros_arr = np.zeros((3, 3))"
"NumPy में ones का एक एरे बनाओ","import numpy as np\nones_arr = np.ones((2, 4))"
"NumPy में `arange` का उपयोग करो","import numpy as np\narr = np.arange(10) # Array from 0 to 9"
"NumPy में लीनियर अलजेब्रा ऑपरेशन (डॉट प्रोडक्ट) करो","import numpy as np\na = np.array([1,2])\nb = np.array([3,4])\ndot_product = np.dot(a, b)"
"NumPy एरे का औसत (mean) निकालो","import numpy as np\narr = np.array([1,2,3,4,5])\nprint(np.mean(arr))"
"NumPy एरे का स्टैण्डर्ड डेविएशन (standard deviation) निकालो","import numpy as np\narr = np.array([1,2,3,4,5])\nprint(np.std(arr))"
"एक DataFrame को NumPy एरे में बदलो","import pandas as pd\n# df = ...\nnumpy_array = df.to_numpy()"
"एक जावास्क्रिप्ट प्रॉमिस (Promise) बनाओ जो 1 सेकंड बाद resolve हो","<script>const myPromise = new Promise((resolve, reject) => { setTimeout(() => { resolve('Success!'); }, 1000); });</script>"
"एक प्रॉमिस को `.then()` और `.catch()` से हैंडल करो","<script>const myPromise = new Promise((resolve, reject) => { resolve('Done'); }); myPromise.then(result => console.log(result)).catch(error => console.error(error));</script>"
"एक प्रॉमिस बनाओ जो तुरंत reject हो जाए","<script>const rejectedPromise = new Promise((resolve, reject) => { reject('Failure!'); }); rejectedPromise.catch(error => console.error(error));</script>"
"`async/await` का उपयोग करके एक फंक्शन बनाओ जो डेटा फेच करे","<script>async function fetchData() { try { let response = await fetch('https://jsonplaceholder.typicode.com/todos/1'); let data = await response.json(); console.log(data); } catch (error) { console.error('Could not fetch data:', error); } } fetchData();</script>"
"`async` फंक्शन बनाओ जो एक वैल्यू लौटाए","<script>async function getValue() { return 'Hello Async'; } getValue().then(value => console.log(value));</script>"
"`Promise.all` का उपयोग करके एक साथ कई API कॉल्स करो","<script>Promise.all([fetch('https://jsonplaceholder.typicode.com/posts/1'), fetch('https://jsonplaceholder.typicode.com/posts/2')]).then(responses => Promise.all(responses.map(res => res.json()))).then(data => console.log(data));</script>"
"एक जावास्क्रिप्ट मॉड्यूल से एक फंक्शन एक्सपोर्ट करो","// In math.js file:\nexport function add(a, b) { return a + b; }"
"एक मॉड्यूल से एक फंक्शन इम्पोर्ट करो","// In main.js file:\nimport { add } from './math.js';"
"एक मॉड्यूल से डिफ़ॉल्ट एक्सपोर्ट करो","// In myModule.js:\nexport default function greet() { console.log('Hello'); }"
"एक डिफ़ॉल्ट एक्सपोर्ट को इम्पोर्ट करो","// In main.js:\nimport myGreetingFunction from './myModule.js';"
"`try...catch...finally` ब्लॉक का उपयोग करो","<script>try { console.log('Trying...'); nonExistentFunction(); } catch (e) { console.error('An error occurred:', e.message); } finally { console.log('Finally block runs always.'); }</script>"
"एक कस्टम एरर थ्रो (throw) करो","<script>function checkAge(age) { if (age < 18) { throw new Error('User must be 18 or older to proceed.'); } return true; } try { checkAge(15); } catch (e) { console.error(e.message); }</script>"
"स्प्रेड ऑपरेटर (...) का उपयोग करके दो एरे को मिलाओ","<script>const arr1 = ['a', 'b']; const arr2 = ['c', 'd']; const combinedArray = [...arr1, ...arr2]; console.log(combinedArray);</script>"
"स्प्रेड ऑपरेटर का उपयोग करके एक ऑब्जेक्ट को कॉपी करो","<script>const person = {name: 'Amit', city: 'Lucknow'}; const personCopy = {...person};</script>"
"रेस्ट पैरामीटर (...) का उपयोग करके एक फंक्शन बनाओ","<script>function sum(...numbers) { return numbers.reduce((total, num) => total + num, 0); } console.log(sum(1, 2, 3, 4));</script>"
"ऑब्जेक्ट डीस्ट्रक्चरिंग (Object Destructuring) का उपयोग करो","<script>const person = {name:'Amit', city:'Lucknow'}; const {name, city} = person; console.log(`Name: ${name}, City: ${city}`);</script>"
"एरे डीस्ट्रक्चरिंग (Array Destructuring) का उपयोग करो","<script>const fruits = ['Apple', 'Banana', 'Mango']; const [firstFruit, secondFruit] = fruits; console.log(firstFruit);</script>"
"डीस्ट्रक्चरिंग में एक नया वेरिएबल नाम दो","<script>const person = {name:'Amit'}; const {name: personName} = person; console.log(personName);</script>"
"JSON डेटा को डीस्ट्रक्चर करो","<script>const jsonResponse = '{\""user\"":\""Amit\"", \""posts\"":10}'; const {user, posts} = JSON.parse(jsonResponse);</script>"
"JavaScript `Map` ऑब्जेक्ट बनाओ और उसका उपयोग करो","<script>const myMap = new Map(); myMap.set('key1', 'value1'); myMap.set('key2', 'value2'); console.log(myMap.get('key1'));</script>"
"JavaScript `Set` ऑब्जेक्ट का उपयोग करके डुप्लीकेट हटाओ","<script>const numbers = [1, 2, 2, 3, 4, 3]; const uniqueNumbers = new Set(numbers); console.log(uniqueNumbers);</script>"
"एक ES6 क्लास (class) में एक मेथड बनाओ","<script>class Person { constructor(name){this.name=name;} greet(){return `Hello, my name is ${this.name}`;}} const amit = new Person('Amit'); console.log(amit.greet());</script>"
"क्लास इनहेरिटेंस (Inheritance) का उपयोग करो","<script>class Animal{ speak(){return 'Animal speaks.'} }; class Dog extends Animal { speak(){return 'Woof!'} }; const dog = new Dog(); console.log(dog.speak());</script>"
"क्लास में एक स्टेटिक मेथड बनाओ","<script>class MathHelper { static add(a,b){return a+b;} } console.log(MathHelper.add(5,10));</script>"
"क्लास में गेटर (getter) का उपयोग करो","<script>class Circle { constructor(radius){this.radius=radius;} get diameter(){return this.radius * 2;}} const c = new Circle(10); console.log(c.diameter);</script>"
"क्लास में सेटर (setter) का उपयोग करो","<script>class User { set name(newName){if(newName.length > 2){this._name=newName;}else{console.error('Name too short');}} get name(){return this._name;} } const u = new User(); u.name = 'Amit';</script>"
"JavaScript `Symbol` का उपयोग करके एक यूनिक प्रॉपर्टी बनाओ","<script>const id = Symbol('id'); const user = {name: 'Amit', [id]: 123}; console.log(user[id]);</script>"
"एक जेनरेटर फंक्शन `function*` बनाओ","<script>function* numberGenerator(){ yield 1; yield 2; yield 3; } const gen = numberGenerator(); console.log(gen.next().value);</script>"
"ES6 मॉड्यूल में वाइल्डकार्ड (`*`) इम्पोर्ट करो","// In main.js:\nimport * as mathUtils from './math.js';"
"`fetch` के साथ `POST` रिक्वेस्ट में `headers` भेजो","<script>fetch('/api/data', { method:'POST', headers:{'Content-Type':'application/json'}, body:JSON.stringify({name:'Amit'}) });</script>"
"एक `async` फंक्शन के अंदर एरर को `try...catch` से हैंडल करो","<script>async function fetchData() { try { let response = await fetch('https://invalid-url.xyz'); } catch(error) { console.error('Caught an error!', error); } }</script>"
"`Promise.resolve` का उपयोग करो","<script>Promise.resolve('Instant success message').then(msg => console.log(msg));</script>"
"`Promise.reject` का उपयोग करो","<script>Promise.reject('Instant failure message').catch(err => console.error(err));</script>"
"`Promise.race` का उपयोग करके पता करो कि कौन सा प्रॉमिस पहले पूरा होता है","<script>const p1 = new Promise(resolve => setTimeout(resolve, 500, 'one')); const p2 = new Promise(resolve => setTimeout(resolve, 100, 'two')); Promise.race([p1, p2]).then(value => console.log(value)); // Logs 'two'</script>"
"एक `async` IIFE (Immediately Invoked Function Expression) बनाओ","<script>(async () => { let response = await fetch('https://jsonplaceholder.typicode.com/users/1'); let user = await response.json(); console.log(user.name); })();</script>"
"ऑब्जेक्ट की प्रॉपर्टीज को लूप करने के लिए `Object.keys` का उपयोग करो","<script>const user = {a:1, b:2, c:3}; Object.keys(user).forEach(key => console.log(key, user[key]));</script>"
"डीस्ट्रक्चरिंग में डिफ़ॉल्ट वैल्यू सेट करो","<script>const person = {name: 'Amit'}; const {name, city='Lucknow'} = person; console.log(city);</script>"
"नेस्टेड डीस्ट्रक्चरिंग (Nested Destructuring) करो","<script>const user = {id:1, details:{name:'Amit', role:'dev'}}; const {details: {name}} = user; console.log(name);</script>"
"एक रेगुलर एक्सप्रेशन (RegEx) बनाओ जो ईमेल को मैच करे","<script>const emailRegex = /\\S+@\\S+\\.\\S+/;</script>"
"एक RegEx का उपयोग करके एक स्ट्रिंग को टेस्ट करो","<script>const emailRegex = /\\S+@\\S+\\.\\S+/; console.log(emailRegex.test('test@example.com'));</script>"
"RegEx का उपयोग करके एक स्ट्रिंग से सभी नंबर निकालो","<script>const text = 'My number is 123-456.'; const numbers = text.match(/\\d+/g); console.log(numbers);</script>"
"RegEx का उपयोग करके एक स्ट्रिंग को रिप्लेस करो","<script>const text = 'Hello world'; const newText = text.replace(/world/, 'Amit'); console.log(newText);</script>"
"एक केस-इनसेंसिटिव (case-insensitive) RegEx बनाओ","<script>const text = 'Hello Hello'; const matches = text.match(/hello/gi); console.log(matches.length);</script>"
"एक स्ट्रिंग के शुरू और अंत को मैच करने के लिए RegEx बनाओ","<script>const regex = /^start.*end$/; console.log(regex.test('start middle end'));</script>"
"ऑप्शनल पैरामीटर वाला एक फंक्शन बनाओ","<script>function greet(name, greeting='Hello') { console.log(`${greeting}, ${name}`); }</script>"
"जावास्क्रिप्ट में `console.table` का उपयोग करके डेटा दिखाओ","<script>const users = [{name:'A', age:20},{name:'B', age:25}]; console.table(users);</script>"
"जावास्क्रिप्ट में `console.time` का उपयोग करके परफॉरमेंस को मापो","<script>console.time('myLoop'); for(let i=0; i<10000; i++){} console.timeEnd('myLoop');</script>"
"`...` ऑपरेटर का उपयोग करके एरे से डुप्लीकेट हटाओ","<script>const numbers = [1,2,2,3,4,3]; const unique = [...new Set(numbers)];</script>"
"एक ऑब्जेक्ट को फ्रीज करो ताकि उसे बदला न जा सके","<script>const user = {name: 'Amit'}; Object.freeze(user); user.name = 'Ria'; console.log(user.name);</script>"
"एक सिंपल higher-order फंक्शन बनाओ","<script>function multiplyBy(factor) { return function(number) { return number * factor; } } const double = multiplyBy(2); console.log(double(5));</script>"
"पाइथन में एक लीनियर सर्च (linear search) एल्गोरिथ्म लिखो","def linear_search(arr, target):\n    for i in range(len(arr)):\n        if arr[i] == target:\n            return i\n    return -1"
"पाइथन में एक बाइनरी सर्च (binary search) एल्गोरिथ्म लिखो","def binary_search(arr, target):\n    left, right = 0, len(arr) - 1\n    while left <= right:\n        mid = (left + right) // 2\n        if arr[mid] == target:\n            return mid\n        elif arr[mid] < target:\n            left = mid + 1\n        else:\n            right = mid - 1\n    return -1"
"पाइथन में एक बबल सॉर्ट (bubble sort) एल्गोरिथ्म लिखो","def bubble_sort(arr):\n    n = len(arr)\n    for i in range(n):\n        for j in range(0, n-i-1):\n            if arr[j] > arr[j+1]:\n                arr[j], arr[j+1] = arr[j+1], arr[j]"
"पाइथन में एक सिलेक्शन सॉर्ट (selection sort) एल्गोरिथ्म लिखो","def selection_sort(arr):\n    for i in range(len(arr)):\n        min_idx = i\n        for j in range(i+1, len(arr)):\n            if arr[j] < arr[min_idx]:\n                min_idx = j\n        arr[i], arr[min_idx] = arr[min_idx], arr[i]"
"पाइथन में एक इंसर्शन सॉर्ट (insertion sort) एल्गोरिथ्म लिखो","def insertion_sort(arr):\n    for i in range(1, len(arr)):\n        key = arr[i]\n        j = i-1\n        while j >= 0 and key < arr[j]:\n            arr[j+1] = arr[j]\n            j -= 1\n        arr[j+1] = key"
"रिकर्शन (recursion) का उपयोग करके फैक्टोरियल निकालो","def factorial(n):\n    if n == 0 or n == 1:\n        return 1\n    else:\n        return n * factorial(n-1)"
"रिकर्शन का उपयोग करके फिबोनैची (Fibonacci) सीरीज का Nth नंबर निकालो","def fibonacci(n):\n    if n <= 1:\n        return n\n    else:\n        return fibonacci(n-1) + fibonacci(n-2)"
"पाइथन लिस्ट का उपयोग करके एक स्टैक (stack) डेटा स्ट्रक्चर बनाओ","stack = []\nstack.append('a') # Push\nstack.append('b')\nprint(stack)\nitem = stack.pop() # Pop\nprint(item)"
"`collections.deque` का उपयोग करके एक क्यू (queue) डेटा स्ट्रक्चर बनाओ","from collections import deque\nq = deque()\nq.append('a') # Enqueue\nq.append('b')\nitem = q.popleft() # Dequeue\nprint(item)"
"एक फंक्शन लिखो जो चेक करे कि एक स्ट्रिंग पैलिंड्रोम है या नहीं","def is_palindrome(s):\n    return s == s[::-1]"
"एक स्ट्रिंग को बिना स्लाइसिंग के उल्टा करो","def reverse_string(s):\n    reversed_s = ''\n    for char in s:\n        reversed_s = char + reversed_s\n    return reversed_s"
"N तक के सभी प्राइम नंबर ढूंढने के लिए एक फंक्शन लिखो (Sieve of Eratosthenes)","def find_primes(n):\n    prime = [True for i in range(n+1)]\n    p = 2\n    while (p * p <= n):\n        if (prime[p] == True):\n            for i in range(p * p, n+1, p):\n                prime[i] = False\n        p += 1\n    for p in range(2, n+1):\n        if prime[p]:\n            print(p)"
"पाइथन डिक्शनरी का उपयोग करके एक सिंपल हैश टेबल बनाओ","hash_table = {}\nhash_table['key1'] = 'value1'\nhash_table['key2'] = 'value2'"
"एक लिंक्ड लिस्ट (linked list) के लिए एक नोड क्लास बनाओ","class Node:\n    def __init__(self, data):\n        self.data = data\n        self.next = None"
"एक बाइनरी ट्री (binary tree) के लिए एक नोड क्लास बनाओ","class TreeNode:\n    def __init__(self, key):\n        self.left = None\n        self.right = None\n        self.val = key"
"FizzBuzz प्रॉब्लम को हल करने के लिए एक प्रोग्राम लिखो","for i in range(1, 101):\n    if i % 15 == 0:\n        print('FizzBuzz')\n    elif i % 3 == 0:\n        print('Fizz')\n    elif i % 5 == 0:\n        print('Buzz')\n    else:\n        print(i)"
"एक लिस्ट में सबसे ज़्यादा बार आने वाला एलिमेंट ढूंढो","from collections import Counter\ndef most_frequent(my_list):\n    if not my_list: return None\n    return Counter(my_list).most_common(1)[0][0]"
"एक फंक्शन लिखो जो चेक करे कि दो स्ट्रिंग्स एनाग्राम हैं या नहीं","def are_anagrams(s1, s2):\n    return sorted(s1.replace(' ', '').lower()) == sorted(s2.replace(' ', '').lower())"
"Two Sum प्रॉब्लम को हल करो","def two_sum(nums, target):\n    num_map = {}\n    for i, num in enumerate(nums):\n        complement = target - num\n        if complement in num_map:\n            return [num_map[complement], i]\n        num_map[num] = i"
"मर्ज सॉर्ट (merge sort) एल्गोरिथ्म का ढाँचा लिखो","def merge_sort(arr):\n    if len(arr) > 1:\n        mid = len(arr)//2\n        L = arr[:mid]\n        R = arr[mid:]\n        merge_sort(L)\n        merge_sort(R)\n        # ... Merging logic here ..."
"क्विक सॉर्ट (quick sort) एल्गोरिथ्म का ढाँचा लिखो","def quick_sort(arr):\n    if len(arr) <= 1:\n        return arr\n    pivot = arr[len(arr) // 2]\n    left = [x for x in arr if x < pivot]\n    middle = [x for x in arr if x == pivot]\n    right = [x for x in arr if x > pivot]\n    return quick_sort(left) + middle + quick_sort(right)"
"एक स्ट्रिंग के सभी डुप्लीकेट कैरेक्टर्स को ढूंढो","my_string = 'hello world'\nduplicates = set([char for char in my_string if my_string.count(char) > 1])"
"दो सॉर्टेड लिस्ट्स को मर्ज करो","def merge_sorted_lists(list1, list2):\n    return sorted(list1 + list2)"
"एक लिस्ट के सभी परम्यूटेशन (permutations) जेनरेट करो","import itertools\nmy_list = [1, 2, 3]\npermutations = list(itertools.permutations(my_list))"
"एक ग्राफ डेटा स्ट्रक्चर (adjacency list) का उपयोग करके बनाओ","graph = {\n    'A': ['B', 'C'],\n    'B': ['D'],\n    'C': ['E'],\n    'D': [],\n    'E': []\n}"
"एक ग्राफ में ब्रेथ-फर्स्ट सर्च (BFS) एल्गोरिथ्म लिखो","from collections import deque\ndef bfs(graph, start_node):\n    visited = set()\n    queue = deque([start_node])\n    visited.add(start_node)\n    while queue:\n        node = queue.popleft()\n        print(node)\n        for neighbor in graph[node]:\n            if neighbor not in visited:\n                visited.add(neighbor)\n                queue.append(neighbor)"
"एक ग्राफ में डेप्थ-फर्स्ट सर्च (DFS) एल्गोरिथ्म लिखो","def dfs(graph, start_node, visited=None):\n    if visited is None:\n        visited = set()\n    visited.add(start_node)\n    print(start_node)\n    for neighbor in graph[start_node]:\n        if neighbor not in visited:\n            dfs(graph, neighbor, visited)"
"मेमोइज़ेशन (memoization) का उपयोग करके फिबोनैची को ऑप्टिमाइज़ करो","memo = {}\ndef fib_memo(n):\n    if n in memo: return memo[n]\n    if n <= 1: return n\n    memo[n] = fib_memo(n-1) + fib_memo(n-2)\n    return memo[n]"
"एक नंबर का ग्रेटेस्ट कॉमन डिवाइजर (GCD) निकालो","import math\ngcd = math.gcd(60, 48)"
"एक फंक्शन लिखो जो मिसिंग नंबर को एक सीरीज से ढूंढे","def find_missing(numbers):\n    n = len(numbers) + 1\n    total_sum = n * (n + 1) // 2\n    return total_sum - sum(numbers)"
"एक बाइनरी सर्च ट्री (BST) में एक नोड इंसर्ट करो","class Node:\n    # ... (init)\n\ndef insert(root, key):\n    if root is None:\n        return Node(key)\n    else:\n        if root.val < key:\n            root.right = insert(root.right, key)\n        else:\n            root.left = insert(root.left, key)\n    return root"
"डाइक्स्ट्रा (Dijkstra's) एल्गोरिथ्म का ढाँचा लिखो","import heapq\ndef dijkstra(graph, start):\n    distances = {node: float('infinity') for node in graph}\n    # ... algorithm logic ..."
"एक स्ट्रिंग के शब्दों को उल्टा करो","sentence = 'hello world'\nwords = sentence.split()\nreversed_sentence = ' '.join(reversed(words))"
"एक वाक्य में सबसे लंबा शब्द ढूंढो","def longest_word(sentence):\n    return max(sentence.split(), key=len)"
"एक नंबर आर्मस्ट्रांग नंबर है या नहीं, यह चेक करो","def is_armstrong(num):\n    order = len(str(num))\n    sum = 0\n    temp = num\n    while temp > 0:\n        digit = temp % 10\n        sum += digit ** order\n        temp //= 10\n    return num == sum"
"एक कैशिंग (caching) डेकोरेटर बनाओ","from functools import lru_cache\n\n@lru_cache(maxsize=None)\ndef expensive_function(n):\n    # ... heavy calculation ..."
"एक प्रायोरिटी क्यू (Priority Queue) बनाओ","import heapq\npq = []\nheapq.heappush(pq, (2, 'task1'))\nheapq.heappush(pq, (1, 'task2'))"
"एक मैट्रिक्स को ट्रांसपोज (transpose) करो","matrix = [[1, 2], [3, 4]]\ntransposed = list(zip(*matrix))"
"सभी डुप्लीकेट कैरेक्टर्स को एक स्ट्रिंग से हटाओ","my_string = 'hello'\nresult = ''.join(sorted(set(my_string), key=my_string.index))"
"एक सिंपल ग्रीडी एल्गोरिथ्म का उदाहरण (सिक्के बदलना)","def coin_change(coins, amount):\n    # ... greedy algorithm logic ..."
"ब्रूट-फोर्स एल्गोरिथ्म का एक उदाहरण (पासवर्ड क्रैकिंग)","import itertools\nchars = 'abc'\nfor length in range(1, 4):\n    for guess in itertools.product(chars, repeat=length):\n        print(''.join(guess))"
"एक Trie डेटा स्ट्रक्चर का नोड बनाओ","class TrieNode:\n    def __init__(self):\n        self.children = {}\n        self.is_end_of_word = False"
"एक 'Hello World' वेब सर्वर Flask और Gunicorn के साथ बनाओ","""# app.py\nfrom flask import Flask\napp = Flask(__name__)\n@app.route('/')\ndef hello(): return 'Hello'\n\n# Terminal command:\ngunicorn --bind 0.0.0.0:8000 app:app"""
"एक deque का उपयोग करके आखिरी N आइटम्स को रखो","from collections import deque\nlast_five = deque(maxlen=5)\nfor i in range(10):\n    last_five.append(i)"
"एक लिस्ट को रोटेट करो","my_list = [1, 2, 3, 4]\nrotated_list = my_list[2:] + my_list[:2]"
"यह चेक करो कि एक नंबर परफेक्ट स्क्वायर है या नहीं","import math\ndef is_perfect_square(n):\n    if n < 0: return False\n    sqrt_n = int(math.sqrt(n))\n    return sqrt_n * sqrt_n == n"
"टावर्स ऑफ हनोई (Towers of Hanoi) प्रॉब्लम को हल करो","def towers_of_hanoi(n, source, destination, auxiliary):\n    if n == 1:\n        print(f'Move disk 1 from {source} to {destination}')\n        return\n    towers_of_hanoi(n-1, source, auxiliary, destination)\n    print(f'Move disk {n} from {source} to {destination}')\n    towers_of_hanoi(n-1, auxiliary, destination, source)"
"एक स्ट्रिंग के कैरेक्टर्स की फ्रीक्वेंसी काउंट करो","my_string = 'hello'\nfrequency = {char: my_string.count(char) for char in set(my_string)}"
"`localStorage` में यूज़र का नाम सेव करो","<script>localStorage.setItem('username', 'Amit');</script>"
"`localStorage` से यूज़र का नाम प्राप्त करो","<script>let username = localStorage.getItem('username'); if(username) { alert('Welcome back, ' + username); }</script>"
"`localStorage` से एक आइटम हटाओ","<script>localStorage.removeItem('username');</script>"
"`localStorage` को पूरी तरह से क्लियर करो","<script>localStorage.clear();</script>"
"`sessionStorage` में एक अस्थायी (temporary) वैल्यू सेव करो","<script>sessionStorage.setItem('session_id', 'xyz-123-abc');</script>"
"`sessionStorage` से एक वैल्यू प्राप्त करो","<script>let sessionId = sessionStorage.getItem('session_id');</script>"
"लोकल स्टोरेज में एक ऑब्जेक्ट को JSON के रूप में सेव करो","<script>const user = {name: 'Amit', loggedIn: true}; localStorage.setItem('user_data', JSON.stringify(user));</script>"
"लोकल स्टोरेज से एक JSON ऑब्जेक्ट को पढ़ो","<script>const userData = JSON.parse(localStorage.getItem('user_data')); console.log(userData.name);</script>"
"यूज़र की जियोलोकेशन (latitude, longitude) प्राप्त करो","<button onclick=""navigator.geolocation.getCurrentPosition(position => alert('Latitude: ' + position.coords.latitude));"">Get My Location</button>"
"जियोलोकेशन एरर को हैंडल करो","<script>navigator.geolocation.getCurrentPosition(successCallback, errorCallback); function errorCallback(error) { console.error('Error getting location:', error.message); }</script>"
"यूज़र की लोकेशन को लगातार ट्रैक करो (watchPosition)","<script>const watchId = navigator.geolocation.watchPosition(pos => console.log('New position:', pos.coords));</script>"
"वेब शेयर API का उपयोग करके कंटेंट शेयर करो","<button onclick=""if(navigator.share){ navigator.share({ title: 'My Awesome Page', text: 'Check this out!', url: window.location.href }); }"">Share this Page</button>"
"`navigator.onLine` का उपयोग करके ऑनलाइन/ऑफलाइन स्टेटस चेक करो","<p>Current Status: <span id='status'></span></p><script>document.getElementById('status').innerText = navigator.onLine ? 'Online' : 'Offline';</script>"
"यूज़र का ब्राउज़र एजेंट (user agent) पता करो","<script>console.log('User Agent:', navigator.userAgent);</script>"
"यूज़र का ऑपरेटिंग सिस्टम (platform) पता करो","<script>alert('Your platform is: ' + navigator.platform);</script>"
"टेक्स्ट को बुलवाने के लिए (Text-to-Speech) एक बटन बनाओ","<input id='textSpeech' value='Hello from Gemini'><button onclick=""let msg = new SpeechSynthesisUtterance(document.getElementById('textSpeech').value); window.speechSynthesis.speak(msg);"">Speak Text</button>"
"`history.pushState` का उपयोग करके बिना रीलोड किए URL बदलो","<button onclick=""history.pushState({page: 2}, 'Page 2', '/page2.html')"">Change URL to /page2</button>"
"ब्राउज़र के बैक/फॉरवर्ड बटन को डिटेक्ट करो (`popstate` event)","<script>window.addEventListener('popstate', function(event) { console.log('Navigated to:', location.href, 'state:', event.state); });</script>"
"ब्राउज़र हिस्ट्री में एक पेज वापस जाने के लिए बटन","<button onclick='history.back()'>Go Back</button>"
"ब्राउज़र हिस्ट्री में एक पेज आगे जाने के लिए बटन","<button onclick='history.forward()'>Go Forward</button>"
"एक 200x100 का कैनवास (canvas) बनाओ","<canvas id='myCanvas' width='200' height='100' style='border:1px solid #000;'></canvas>"
"कैनवास पर एक सीधी लाल लाइन खींचो","<canvas id='c1' width='200' height='100'></canvas><script>var ctx = document.getElementById('c1').getContext('2d'); ctx.moveTo(10,10); ctx.lineTo(190,90); ctx.strokeStyle='red'; ctx.stroke();</script>"
"कैनवास पर एक भरा हुआ आयत (rectangle) बनाओ","<canvas id='c2' width='200'></canvas><script>var ctx = document.getElementById('c2').getContext('2d'); ctx.fillStyle='blue'; ctx.fillRect(20, 20, 150, 80);</script>"
"कैनवास पर एक सर्किल बनाओ","<canvas id='c3' width='200'></canvas><script>var ctx = document.getElementById('c3').getContext('2d'); ctx.beginPath(); ctx.arc(100, 50, 40, 0, 2 * Math.PI); ctx.stroke();</script>"
"कैनवास पर टेक्स्ट लिखो","<canvas id='c4' width='200'></canvas><script>var ctx = document.getElementById('c4').getContext('2d'); ctx.font = '30px Arial'; ctx.fillText('Hello World', 10, 50);</script>"
"HTML5 `draggable` एट्रिब्यूट का उपयोग करके एक एलिमेंट को ड्रैग करने योग्य बनाओ","<p draggable='true' style='border:1px solid; padding:5px; width:100px;'>Drag Me</p>"
"ड्रैग एंड ड्रॉप के लिए एक ड्रॉप ज़ोन बनाओ","<div ondrop='drop(event)' ondragover='allowDrop(event)' style='border:2px dashed #ccc; height:100px; padding:10px;'>Drop files here</div><script>function allowDrop(ev){ev.preventDefault();} function drop(ev){ev.preventDefault(); var data = ev.dataTransfer.getData('text'); ev.target.appendChild(document.getElementById(data));}</script>"
"मोबाइल को 500 मिलीसेकंड के लिए वाइब्रेट करो","<button onclick=""navigator.vibrate(500)"">Vibrate</button>"
"Page Visibility API का उपयोग करके चेक करो कि टैब एक्टिव है या नहीं","<script>document.addEventListener('visibilitychange', () => { if(document.visibilityState === 'visible') { console.log('Tab is active'); } else { console.log('Tab is inactive'); } });</script>"
"एक एलिमेंट को फुलस्क्रीन करने के लिए बटन बनाओ","<div id='fullscreenElement' style='background:lightblue; padding:20px;'><h1>Fullscreen Content</h1></div><button onclick=""document.getElementById('fullscreenElement').requestFullscreen()"">Go Fullscreen</button>"
"एक सिंपल नोटिफिकेशन भेजो (Notification API)","<button onclick=""Notification.requestPermission().then(perm => { if (perm === 'granted') { new Notification('Hello!'); } })"">Show Notification</button>"
"क्लिपबोर्ड पर टेक्स्ट कॉपी करने का एक फंक्शन","<button onclick=""navigator.clipboard.writeText('Text to copy').then(() => alert('Copied!'))"">Copy 'Text to copy'</button>"
"क्लिपबोर्ड से टेक्स्ट पेस्ट करने का एक फंक्शन","<input id='pasteTarget'><button onclick=""navigator.clipboard.readText().then(text => document.getElementById('pasteTarget').value = text)"">Paste</button>"
"बैटरी स्टेटस API का उपयोग करके बैटरी लेवल पता करो","<script>navigator.getBattery().then(battery => console.log(`Battery level: ${battery.level * 100}%`));</script>"
"यूज़र के नेटवर्क कनेक्शन का प्रकार पता करो","<script>alert('Connection type: ' + navigator.connection.type);</script>"
"एक वेब वर्कर (Web Worker) का बेसिक सेटअप","// worker.js: postMessage('Hello from worker');\n// main.js: const myWorker = new Worker('worker.js');"
"एक `MutationObserver` बनाओ जो DOM बदलावों को डिटेक्ट करे","<div id='observeMe'></div><script>const observer = new MutationObserver(mutations => console.log(mutations)); observer.observe(document.getElementById('observeMe'), {childList: true});</script>"
"पेज का टाइटल डायनामिक रूप से बदलो","<button onclick=""document.title = 'New Title!'"">Change Title</button>"
"जावास्क्रिप्ट से पेज को रीलोड करो","<button onclick='location.reload()'>Reload</button>"
"जावास्क्रिप्ट से एक नई ब्राउज़र विंडो खोलो","<button onclick=""window.open('https://google.com', 'newWindow', 'width=600,height=400')"">Open Google</button>"
"पेज लोड होने पर यूज़र से प्रिंट डायलॉग खोलने के लिए पूछो","<body onload='window.print()'></body>"
"`window.matchMedia` का उपयोग करके चेक करो कि स्क्रीन डार्क मोड में है या नहीं","<script>if (window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches) { console.log('Dark mode is enabled'); }</script>"
"Fetch API में `AbortController` का उपयोग करके रिक्वेस्ट को कैंसिल करो","<script>const controller = new AbortController(); const signal = controller.signal; setTimeout(() => controller.abort(), 100); fetch('...', {signal}).catch(err => console.log(err.name));</script>"
"`performance.now()` का उपयोग करके कोड के परफॉरमेंस को मापो","<script>const startTime = performance.now(); for(let i=0; i<10000; i++){} const endTime = performance.now(); console.log(`Loop took ${endTime - startTime} milliseconds.`);</script>"
"वेबकैम को एक्सेस करने के लिए `getUserMedia` का उपयोग करो","<video id='video' autoplay></video><script>navigator.mediaDevices.getUserMedia({ video: true }).then(stream => document.getElementById('video').srcObject = stream);</script>"
"कैनवास से इमेज डेटा URL प्राप्त करो","<canvas id='c5'></canvas><script>var ctx=document.getElementById('c5').getContext('2d'); ctx.fillText('Hi',10,10); var dataURL = document.getElementById('c5').toDataURL();</script>"
"एक खाली बूँद (blob) बनाओ","<script>const myBlob = new Blob();</script>"
"कैनवास पर एक ग्रेडिएंट बनाओ","<canvas id='c6'></canvas><script>var ctx=document.getElementById('c6').getContext('2d'); var gradient=ctx.createLinearGradient(0,0,200,0); gradient.addColorStop(0,'red'); gradient.addColorStop(1,'blue'); ctx.fillStyle=gradient; ctx.fillRect(10,10,150,80);</script>"
"जावास्क्रिप्ट में कुकी को डिलीट करो","<script>document.cookie = 'username=; expires=Thu, 01 Jan 1970 00:00:00 GMT;';</script>"
"एक लाइट/डार्क मोड टॉगल बटन बनाओ","<style>body.dark-mode{background:#121212; color:white;}</style><button onclick=""document.body.classList.toggle('dark-mode')"">Toggle Dark/Light Mode</button><p>Some text</p>"
"एक 'Copy to Clipboard' बटन बनाओ","<input id='copyText' value='This is the text to copy'><button onclick=""document.getElementById('copyText').select(); document.execCommand('copy'); alert('Text Copied!')"">Copy Text</button>"
"एक 5-स्टार रेटिंग कॉम्पोनेन्ट बनाओ","<style>.stars span{cursor:pointer; font-size:24px; color:grey;}.stars span:hover, .stars span:hover ~ .stars span {color:orange;}</style><div class='stars'><span>★</span><span>★</span><span>★</span><span>★</span><span>★</span></div>"
"एक डायनामिक प्रोग्रेस बार बनाओ जो बटन क्लिक पर 100% हो जाए","<div style='width:100%; background-color:#ddd; border-radius:5px;'><div id='progressBar' style='width:10%; height:20px; background-color:green; border-radius:5px; transition:width 0.5s;'></div></div><button onclick=""document.getElementById('progressBar').style.width='100%'"">Complete Progress</button>"
"एक अकॉर्डियन बनाओ जो क्लिक करने पर कंटेंट दिखाए/छिपाए","<style>.accordion-panel{display:none; padding:10px; border-top:1px solid #ccc;}</style><button onclick=""var panel = this.nextElementSibling; panel.style.display = panel.style.display === 'block' ? 'none' : 'block';"">Section 1</button><div class='accordion-panel'><p>Hidden text for section 1.</p></div>"
"एक मोडल (popup) बॉक्स बनाओ","<style>.modal{display:none; position:fixed; z-index:1; left:0; top:0; width:100%; height:100%; overflow:auto; background-color:rgba(0,0,0,0.4);}.modal-content{background-color:#fefefe; margin:15% auto; padding:20px; border:1px solid #888; width:80%;}</style><button onclick=""document.getElementById('myModal').style.display='block'"">Open Modal</button><div id='myModal' class='modal'><div class='modal-content'><span onclick=""document.getElementById('myModal').style.display='none'"" style='float:right; cursor:pointer;'>&times;</span><p>This is a modal.</p></div></div>"
"एक टैब वाला इंटरफ़ेस बनाओ","<style>.tabcontent{display:none;}</style><div><button onclick=""openTab('Tab1')"">Tab 1</button><button onclick=""openTab('Tab2')"">Tab 2</button></div><div id='Tab1' class='tabcontent'>Content 1</div><div id='Tab2' class='tabcontent'>Content 2</div><script>function openTab(tabName){ var i, tabs; tabs = document.getElementsByClassName('tabcontent'); for(i=0;i<tabs.length;i++){tabs[i].style.display='none';} document.getElementById(tabName).style.display='block';}</script>"
"एक लिस्ट को फ़िल्टर करने के लिए एक सर्च बार बनाओ","<input id='searchInput' onkeyup='filterList()' placeholder='Search...'><ul id='filterUL'><li>Apple</li><li>Banana</li><li>Orange</li></ul><script>function filterList(){ var input, filter, ul, li, a, i, txtValue; input=document.getElementById('searchInput'); filter=input.value.toUpperCase(); ul=document.getElementById('filterUL'); li=ul.getElementsByTagName('li'); for(i=0; i<li.length; i++){ txtValue = li[i].textContent || li[i].innerText; if(txtValue.toUpperCase().indexOf(filter) > -1){li[i].style.display='';}else{li[i].style.display='none';}}}</script>"
"एक 'Scroll to Top' बटन बनाओ जो पेज स्क्रॉल होने पर दिखे","<style>#scrollTopBtn{display:none; position:fixed; bottom:20px; right:20px; z-index:99;}</style><button id='scrollTopBtn' onclick=""window.scrollTo({top: 0, behavior: 'smooth'});"">Top</button><div style='height:1000px'>Scroll down</div><script>window.onscroll = function() {scrollFunction()}; function scrollFunction(){if(document.body.scrollTop > 20 || document.documentElement.scrollTop > 20){document.getElementById('scrollTopBtn').style.display='block';}else{document.getElementById('scrollTopBtn').style.display='none';}}</script>"
"एक पासवर्ड स्ट्रेंथ इंडिकेटर बनाओ","<label>Password:</label><input type='password' oninput=""var strength = 'Weak'; if(this.value.length > 8) strength = 'Strong'; document.getElementById('pass-strength').innerText = strength;""><p>Strength: <span id='pass-strength'></span></p>"
"एक टेक्स्टएरिया बनाओ जो रियल-टाइम में कैरेक्टर काउंट दिखाए","<textarea oninput=""document.getElementById('char-count').innerText = this.value.length;""></textarea><p>Characters typed: <span id='char-count'>0</span></p>"
"एक स्नैकबार (toast) नोटिफिकेशन बनाओ","<style>#snackbar{visibility:hidden; min-width:250px; background-color:#333; color:#fff; text-align:center; border-radius:2px; padding:16px; position:fixed; z-index:1; left:50%; bottom:30px; transform: translateX(-50%);}</style><button onclick=""var x = document.getElementById('snackbar'); x.style.visibility = 'visible'; setTimeout(function(){ x.style.visibility = 'hidden'; }, 3000);"">Show Toast</button><div id='snackbar'>This is a notification!</div>"
"एक बटन बनाओ जो फॉर्म सबमिट होने पर डिसेबल हो जाए","<form onsubmit=""document.getElementById('sbmBtn').disabled=true; document.getElementById('sbmBtn').innerText='Submitting...'; return false;""><button id='sbmBtn' type='submit'>Submit</button></form>"
"एक सिंपल ऑटोमेटिक इमेज स्लाइडर बनाओ","<img id='slider' src='img1.jpg' width='300' height='200'><script>const myImages=['img1.jpg', 'img2.jpg', 'img3.jpg']; let currentIndex=0; setInterval(() => { currentIndex = (currentIndex + 1) % myImages.length; document.getElementById('slider').src = myImages[currentIndex]; }, 2000);</script>"
"एक ड्रैग करने योग्य (draggable) div बनाओ","<div id='dragElement' style='position:absolute; width:50px; height:50px; background:blue; cursor:move;'></div><script>dragElement(document.getElementById('dragElement')); function dragElement(elmnt){...}</script>"
"एक पासवर्ड फील्ड बनाओ जिसमें पासवर्ड को दिखाने/छिपाने का विकल्प हो","<input id='myPassword' type='password' value='MySecret'><input type='checkbox' onclick=""document.getElementById('myPassword').type = this.checked ? 'text' : 'password';""> Show Password"
"एक डिजिटल क्लॉक बनाओ जो हर सेकंड अपडेट हो","<div id='digitalClock' style='font-size:24px; font-family:monospace;'></div><script>setInterval(() => document.getElementById('digitalClock').innerText = new Date().toLocaleTimeString(), 1000);</script>"
"पेजिनेशन के लिए एक UI कॉम्पोनेन्ट बनाओ","<style>.pagination a{padding:8px 16px; text-decoration:none; color:black; border:1px solid #ddd;}.pagination a.active{background-color:#4CAF50; color:white;}</style><div class='pagination'><a href='#'>&laquo; Prev</a><a href='#'>1</a><a href='#' class='active'>2</a><a href='#'>3</a><a href='#'>Next &raquo;</a></div>"
"एक before/after इमेज स्लाइडर का UI बनाओ","<div style='position:relative; width:300px; height:200px;'><img src='image_before.jpg' width='300' height='200'><div style='position:absolute; top:0; left:0; width:50%; height:100%; overflow:hidden; border-right:2px solid white;'><img src='image_after.jpg' width='300' height='200'></div></div>"
"एक कलर पिकर बनाओ जो चुने हुए रंग से पेज का बैकग्राउंड बदल दे","<label>Change page background:</label><input type='color' value='#FFFFFF' oninput=""document.body.style.backgroundColor=this.value;"">"
"एक टेक्स्ट का फॉन्ट साइज़ बदलने के लिए स्लाइडर बनाओ","<p id='resizeText' style='font-size:16px;'>Adjust my size</p><input type='range' min='10' max='50' value='16' oninput=""document.getElementById('resizeText').style.fontSize = this.value + 'px'"">"
"एक सिंपल क्विज बनाओ जो सही या गलत जवाब का फीडबैक दे","<h4>What is 5 + 5?</h4><button onclick=""alert('Correct!')"">10</button> <button onclick=""alert('Wrong!')"">12</button>"
"एक स्टॉपवॉच का बेसिक UI बनाओ","<h2 style='font-family:monospace;'>00:00:00</h2><button>Start</button><button>Stop</button><button>Reset</button>"
"एक लाइव वेलकम मैसेज बनाओ जो टाइप करते ही अपडेट हो","<label>Enter your name:</label><input onkeyup=""document.getElementById('welcomeText').innerText = 'Welcome, ' + this.value""><h3 id='welcomeText'></h3>"
"एक बटन बनाओ जो 1 से 6 के बीच एक रैंडम नंबर (जैसे डाइस रोल) दिखाए","<p>Dice Roll: <span id='diceRoll' style='font-size:24px;'>0</span></p><button onclick=""document.getElementById('diceRoll').innerText = Math.floor(Math.random() * 6) + 1"">Roll Dice</button>"
"एक वर्ड काउंटर टूल बनाओ","<textarea oninput=""document.getElementById('wordCounter').innerText = this.value.trim() === '' ? 0 : this.value.trim().split(/\s+/).length;"" rows='4'></textarea><p>Word Count: <span id='wordCounter'>0</span></p>"
"एक टेक्स्ट-टू-अपरकेस कनवर्टर बनाओ","<label>Type here:</label><input oninput=""this.value=this.value.toUpperCase()"" placeholder='Text will be capitalized'>"
"10 से 0 तक का एक सिंपल काउंटडाउन टाइमर शुरू करने के लिए बटन","<h2 id='countdownTimer'>10</h2><button onclick=""var count=10; var interval=setInterval(()=>{count--; document.getElementById('countdownTimer').innerText=count; if(count<=0) clearInterval(interval);}, 1000);"">Start Countdown</button>"
"एक 'स्टिकी नोट' बनाओ जो टेक्स्ट को ब्राउज़र की मेमोरी में सेव करे","<h3>My Sticky Note:</h3><textarea oninput=""localStorage.setItem('my_note', this.value);"" style='width:200px; height:100px;'></textarea><script>document.querySelector('textarea').value = localStorage.getItem('my_note');</script>"
"एक बेसिक BMI कैलकुलेटर बनाओ","<input id='height_m' placeholder='Height (m)'><input id='weight_kg' placeholder='Weight (kg)'><button onclick=""var h=document.getElementById('height_m').value; var w=document.getElementById('weight_kg').value; document.getElementById('bmi_result').innerText = (w/(h*h)).toFixed(2);"">Calculate BMI</button><p>Your BMI: <span id='bmi_result'></span></p>"
"सेल्सियस को फारेनहाइट में बदलने वाला कनवर्टर बनाओ","<input type='number' placeholder='Celsius' oninput=""document.getElementById('fahrenheit_val').innerText = (this.value * 9/5) + 32;""><p>Fahrenheit: <span id='fahrenheit_val'></span></p>"
"एक रैंडम कोट (quote) जेनरेटर बनाओ","<p id='quoteDisplay' style='font-style:italic;'>Click the button for a quote.</p><script>const myQuotes=['Quote 1','Quote 2','Quote 3'];</script><button onclick=""document.getElementById('quoteDisplay').innerText = myQuotes[Math.floor(Math.random() * myQuotes.length)];"">New Quote</button>"
"एक स्क्रॉल प्रोग्रेस बार बनाओ","<div style='position:fixed;top:0;left:0;height:5px;background:green;width:0%;' id='scrollProgressBar'></div><div style='height:2000px; padding:20px;'><h1>Scroll down...</h1></div><script>window.onscroll=function(){var winScroll=document.body.scrollTop||document.documentElement.scrollTop;var height=document.documentElement.scrollHeight-document.documentElement.clientHeight;var scrolled=(winScroll/height)*100;document.getElementById('scrollProgressBar').style.width=scrolled+'%';};</script>"
"पेज की भाषा बदलने के लिए एक ड्रॉपडाउन बनाओ","<select onchange=""alert('Language changed to ' + this.value)""><option value='en'>English</option><option value='hi'>Hindi</option></select>"
"एक हॉरिजॉन्टल स्क्रॉलिंग मेन्यू बनाओ","<style>.scroll-menu{display:flex; overflow-x:auto;}.scroll-menu a{padding:10px; text-decoration:none;}</style><div class='scroll-menu'><a href='#'>Link 1</a><a href='#'>Link 2</a><a href='#'>Link 3</a>...</div>"
"एक कस्टम टूलटिप बनाओ","<style>.tooltip-container{position:relative;}.tooltip-text{visibility:hidden;...}.tooltip-container:hover .tooltip-text{visibility:visible;}</style><div class='tooltip-container'>Hover me<span class='tooltip-text'>Tooltip!</span></div>"
"एक 'Read More' लिंक बनाओ जो टेक्स्ट को दिखाए/छिपाए","<p>Short text... <span id='moreText' style='display:none;'>more text here.</span></p><button onclick=""var dots = this.previousElementSibling.querySelector('span'); dots.style.display = 'inline'; this.style.display='none';"">Read More</button>"
"एक ऑडियो के लिए प्ले और पॉज बटन बनाओ","<audio id='my_audio' src='song.mp3'></audio><button onclick=""document.getElementById('my_audio').play()"">Play</button><button onclick=""document.getElementById('my_audio').pause()"">Pause</button>"
"एक डायनामिक टेबल बनाओ जो जावास्क्रिप्ट एरे से बनती हो","<table id='dynamicTable' border='1'></table><script>const data=[{name:'A', age:20}]; let table=document.getElementById('dynamicTable'); data.forEach(item=>{let row=table.insertRow(); row.insertCell(0).innerHTML=item.name;});</script>"
"एक सिंपल पोल (poll) कॉम्पोनेन्ट बनाओ","<h3>Favorite Language?</h3><p><button onclick=""alert('Voted JS!')"">JavaScript</button></p><p><button onclick=""alert('Voted Python!')"">Python</button></p>"
"एक क्रेडिट कार्ड इनपुट का UI बनाओ","<div><label>Card Number:</label><input placeholder='0000 0000 0000 0000'>...</div>"
"एक सिंपल प्राइसिंग टेबल बनाओ","<div style='display:flex;'><div style='border:1px solid; padding:10px;'><h3>Basic</h3><p>$10</p></div><div style='border:1px solid; padding:10px;'><h3>Pro</h3><p>$25</p></div></div>"
"एक कुकी कंसेंट बैनर बनाओ","<div id='cookieBanner' style='position:fixed; bottom:0; width:100%; background:#333; color:white; padding:10px;'>This site uses cookies. <button onclick=""this.parentElement.style.display='none'"">Accept</button></div>"
"पेज को प्रिंट करने के लिए एक बटन बनाओ","<button onclick='window.print()'>Print Page</button>"
"एक टेक्स्ट को बोलने के लिए (Text-to-Speech) बटन बनाओ","<input id='textToSpeak' value='Hello'><button onclick=""var msg=new SpeechSynthesisUtterance(document.getElementById('textToSpeak').value); window.speechSynthesis.speak(msg);"">Speak</button>"
"एक स्टेप-बाय-स्टेप प्रोग्रेस इंडिकेटर (stepper) बनाओ","<style>.step{display:inline-block; width:30px; height:30px; border-radius:50%; background:grey; color:white; text-align:center;}.step.active{background:blue;}</style><div class='step active'>1</div><div class='step'>2</div><div class='step'>3</div>"
"एक ब्रेडक्रंब (breadcrumb) नेविगेशन बनाओ","<div><a href='#'>Home</a> &gt; <a href='#'>Library</a> &gt; <span>Data</span></div>"
"एक वीडियो के लिए कस्टम प्ले/पॉज बटन बनाओ","<video id='myVideo' width='300'>...</video><button onclick=""document.getElementById('myVideo').play()"">Play</button>"
"एक डायनामिक CSS वेरिएबल बनाओ जिसे जावास्क्रिप्ट से कंट्रोल किया जा सके","<style>:root{--box-color: blue;}</style><div style='width:50px; height:50px; background:var(--box-color);'></div><button onclick=""document.documentElement.style.setProperty('--box-color', 'red')"">Change Color</button>"
"एक पाइथन स्क्रिप्ट बनाओ जो कमांड-लाइन से एक नाम ले और उसे ग्रीट करे","import sys\nif len(sys.argv) > 1:\n    name = sys.argv[1]\n    print(f'Hello, {name}')\nelse:\n    print('Hello, Guest')"
"एक कमांड-लाइन कैलकुलेटर बनाओ जो दो नंबरों को जोड़े","import sys\nnum1 = int(sys.argv[1])\nnum2 = int(sys.argv[2])\nresult = num1 + num2\nprint(f'The sum is: {result}')"
"`argparse` मॉड्यूल को इम्पोर्ट करो","import argparse"
"`argparse` का उपयोग करके एक सिंपल कमांड-लाइन टूल बनाओ","import argparse\nparser = argparse.ArgumentParser(description='A simple CLI tool.')\nparser.parse_args()"
"argparse में एक पोजीशनल आर्गुमेंट 'name' जोड़ो","import argparse\nparser = argparse.ArgumentParser()\nparser.add_argument('name', help='The name to greet')\nargs = parser.parse_args()\nprint(f'Hello, {args.name}')"
"argparse में एक ऑप्शनल आर्गुमेंट '--verbose' जोड़ो","import argparse\nparser = argparse.ArgumentParser()\nparser.add_argument('-v', '--verbose', help='Enable verbose mode', action='store_true')\nargs = parser.parse_args()\nif args.verbose:\n    print('Verbose mode is on.')"
"argparse में एक इंटीजर टाइप का आर्गुमेंट जोड़ो","import argparse\nparser = argparse.ArgumentParser()\nparser.add_argument('number', type=int, help='A number to double')\nargs = parser.parse_args()\nprint(f'Double of {args.number} is {args.number * 2}')"
"एक पाइथन स्क्रिप्ट बनाओ जो एक फाइल में लाइनों, शब्दों और कैरेक्टर्स की गिनती करे","import sys\nfilename = sys.argv[1]\nlines = 0\nwords = 0\nchars = 0\nwith open(filename, 'r') as f:\n    for line in f:\n        lines += 1\n        words += len(line.split())\n        chars += len(line)\nprint(f'Lines: {lines}, Words: {words}, Characters: {chars}')"
"पाइथन से एक सिंपल HTTP सर्वर शुरू करो","import http.server\nimport socketserver\n\nPORT = 8000\nHandler = http.server.SimpleHTTPRequestHandler\n\nwith socketserver.TCPServer(('', PORT), Handler) as httpd:\n    print('Serving at port', PORT)\n    httpd.serve_forever()"
"एक फोल्डर की सभी '.jpg' फाइलों को '.jpeg' में रीनेम करो","import os\nfor filename in os.listdir('.'):\n    if filename.endswith('.jpg'):\n        base = os.path.splitext(filename)[0]\n        os.rename(filename, base + '.jpeg')"
"एक स्क्रिप्ट बनाओ जो एक डायरेक्टरी में 1MB से बड़ी सभी फाइलों को ढूंढे","import os\nfor filename in os.listdir('.'):\n    if os.path.isfile(filename):\n        if os.path.getsize(filename) > 1024 * 1024:\n            print(f'{filename} is larger than 1 MB')"
"एक CSV फाइल को JSON में बदलने के लिए एक स्क्रिप्ट लिखो","import csv\nimport json\n\ncsv_file_path = 'data.csv'\njson_file_path = 'data.json'\n\ndata = []\nwith open(csv_file_path, 'r') as f:\n    csv_reader = csv.DictReader(f)\n    for row in csv_reader:\n        data.append(row)\n\nwith open(json_file_path, 'w') as f:\n    json.dump(data, f, indent=4)"
"पाइथन में `logging` मॉड्यूल का उपयोग करके लॉगिंग करो","import logging\nlogging.basicConfig(level=logging.INFO, format='%(asctime)s - %(levelname)s - %(message)s')\nlogging.info('This is an informational message.')\nlogging.warning('This is a warning message.')"
"लॉग्स को एक फाइल में लिखो","import logging\nlogging.basicConfig(filename='app.log', filemode='w', format='%(name)s - %(levelname)s - %(message)s')\nlogging.warning('This will get logged to a file')"
"`subprocess` मॉड्यूल का उपयोग करके एक शेल कमांड चलाओ","import subprocess\nsubprocess.run(['ls', '-l'])"
"एक फोल्डर को ज़िप (zip) करने के लिए एक स्क्रिप्ट लिखो","import shutil\nshutil.make_archive('output_archive', 'zip', 'folder_to_zip')"
"एक ज़िप फाइल को अनज़िप करो","import shutil\nshutil.unpack_archive('archive.zip', 'destination_folder')"
"पाइथन से एक सिंपल ईमेल भेजो (smtplib)","import smtplib\nserver = smtplib.SMTP('smtp.gmail.com', 587)\n# ...further configuration needed..."
"पाइथन में एक एनवायरनमेंट वेरिएबल को पढ़ो","import os\napi_key = os.environ.get('MY_API_KEY')"
"argparse और requests का उपयोग करके एक वेब स्क्रैपर बनाओ","import argparse\nimport requests\nparser = argparse.ArgumentParser()\nparser.add_argument('url', help='URL to fetch')\nargs = parser.parse_args()\ntry:\n    response = requests.get(args.url)\n    print(f'Status Code: {response.status_code}')\nexcept requests.exceptions.RequestException as e:\n    print(f'Error: {e}')"
"एक डायरेक्टरी ट्री को वॉक (walk) करो","import os\nfor dirpath, dirnames, filenames in os.walk('.'):\n    print(f'Found directory: {dirpath}')\n    for file_name in filenames:\n        print(f'\\t{file_name}')"
"एक टेक्स्ट फाइल में एक शब्द को दूसरे से बदलो","with open('file.txt', 'r') as f:\n    content = f.read()\n\nnew_content = content.replace('old_word', 'new_word')\n\nwith open('file.txt', 'w') as f:\n    f.write(new_content)"
"एक डायरेक्टरी के सभी डुप्लीकेट फाइलों को ढूंढो (hash का उपयोग करके)","import hashlib, os\nduplicates = {}\nfor dirpath, _, filenames in os.walk('.'):\n    for filename in filenames:\n        filepath = os.path.join(dirpath, filename)\n        file_hash = hashlib.md5(open(filepath, 'rb').read()).hexdigest()\n        # ... logic to find duplicates ..."
"argparse में शॉर्ट ऑप्शन (-o) और लॉन्ग ऑप्शन (--output) दोनों बनाओ","import argparse\nparser = argparse.ArgumentParser()\nparser.add_argument('-o', '--output', help='Specify output file')"
"एक पासवर्ड जेनरेटर कमांड-लाइन टूल बनाओ","import random, string, argparse\nparser = argparse.ArgumentParser()\nparser.add_argument('length', type=int)\nargs = parser.parse_args()\nchars = string.ascii_letters + string.digits\npassword = ''.join(random.choice(chars) for _ in range(args.length))\nprint(password)"
"एक JSON फाइल को pretty-print करने के लिए एक स्क्रिप्ट","import json\nwith open('data.json', 'r') as f:\n    data = json.load(f)\nprint(json.dumps(data, indent=4, sort_keys=True))"
"एक फाइल को हिस्सों (chunks) में पढ़ो","with open('large_file.bin', 'rb') as f:\n    while chunk := f.read(4096):\n        # process chunk"
"`platform` मॉड्यूल का उपयोग करके ऑपरेटिंग सिस्टम की जानकारी प्राप्त करो","import platform\nprint(platform.system())"
"`pickle` का उपयोग करके एक पाइथन ऑब्जेक्ट को सेव करो","import pickle\nmy_dict = {'a': 1}\nwith open('data.pkl', 'wb') as f:\n    pickle.dump(my_dict, f)"
"`pickle` का उपयोग करके एक पाइथन ऑब्जेक्ट को लोड करो","import pickle\nwith open('data.pkl', 'rb') as f:\n    my_dict = pickle.load(f)"
"`getpass` का उपयोग करके यूज़र से सुरक्षित रूप से पासवर्ड पूछो","import getpass\ntry:\n    password = getpass.getpass()\nexcept Exception as error:\n    print('ERROR', error)"
"पाइथन स्क्रिप्ट को 10 सेकंड के लिए रोको (sleep)","import time\nprint('Start')\ntime.sleep(10)\nprint('End')"
"एक स्क्रिप्ट के एक्सीक्यूशन समय को मापो","import time\nstart_time = time.time()\n# ... your code ...\nend_time = time.time()\nprint(f'Execution took {end_time - start_time} seconds')"
"एक सिंपल API सर्वर बनाओ जो FastAPI का उपयोग करे","from fastapi import FastAPI\napp = FastAPI()\n@app.get('/')\ndef read_root():\n    return {'Hello': 'World'}"
"पाइथन में एक SQLite डेटाबेस से कनेक्ट करो","import sqlite3\nconn = sqlite3.connect('example.db')"
"SQLite डेटाबेस में एक टेबल बनाओ","import sqlite3\nconn = sqlite3.connect('example.db')\nc = conn.cursor()\nc.execute('''CREATE TABLE stocks (date text, symbol text)''')\nconn.commit()\nconn.close()"
"SQLite टेबल में डेटा इंसर्ट करो","import sqlite3\nconn = sqlite3.connect('example.db')\nc = conn.cursor()\nc.execute('''INSERT INTO stocks VALUES ('2025-10-07','MSFT')''')\nconn.commit()\nconn.close()"
"SQLite टेबल से डेटा सिलेक्ट करो","import sqlite3\nconn = sqlite3.connect('example.db')\nc = conn.cursor()\nfor row in c.execute('SELECT * FROM stocks'):\n    print(row)"
"एक Temporary Directory बनाओ","import tempfile\nwith tempfile.TemporaryDirectory() as tmpdirname:\n    print('created temporary directory', tmpdirname)"
"एक टेक्स्ट फाइल की आखिरी N लाइनों को पढ़ो","def read_last_n_lines(filename, n):\n    with open(filename, 'r') as f:\n        return f.readlines()[-n:]"
"एक URL से एक फाइल डाउनलोड करो और प्रोग्रेस बार दिखाओ (tqdm)","from tqdm import tqdm\nimport requests\n# ... code to download with progress bar ..."
"एक सिंपल कमांड-लाइन To-Do ऐप बनाओ","import sys\n# ... code for a simple CLI to-do app ..."
"`configparser` का उपयोग करके एक कॉन्फ़िगरेशन फाइल पढ़ो","import configparser\nconfig = configparser.ConfigParser()\nconfig.read('config.ini')"
"एक स्क्रिप्ट बनाओ जो अपने आप को बैकग्राउंड में चलाए (daemonize)","import os\n# ... code for daemonizing a process ..."
"पाइथन में मल्टीथ्रेडिंग का एक बेसिक उदाहरण","import threading\ndef worker():\n    print('Worker')\n\nt = threading.Thread(target=worker)\nt.start()"
"पाइथन में मल्टीप्रोसेसिंग का एक बेसिक उदाहरण","import multiprocessing\ndef worker():\n    print('Worker')\n\np = multiprocessing.Process(target=worker)\np.start()"
"एक क्यू (Queue) का उपयोग करके थ्रेड्स के बीच डेटा शेयर करो","import queue, threading\nq = queue.Queue()\ndef worker():\n    item = q.get()\n    # ... process item\n\nt = threading.Thread(target=worker)\nt.start()\nq.put('hello')"
"एक पाइथन स्क्रिप्ट को एग्जीक्यूटेबल (executable) बनाओ (pyinstaller)","pyinstaller your_script.py"
"पाइथन से एक वेब ब्राउज़र खोलो","import webbrowser\nwebbrowser.open('https://google.com')"
"Flask API बनाओ जो यूजर्स की एक लिस्ट लौटाए","""# In app.py:\nfrom flask import jsonify\n@app.route('/api/users')\ndef get_users():\n    users = [{'id': 1, 'name': 'Amit'}, {'id': 2, 'name': 'Ria'}]\n    return jsonify(users)"""
"जावास्क्रिप्ट से यूजर्स की लिस्ट फेच करो और उसे एक ul में दिखाओ","""\n<ul id='users-list'></ul>\n<script>\nfetch('/api/users').then(res => res.json()).then(data => {\n    const userList = document.getElementById('users-list');\n    data.forEach(user => {\n        userList.innerHTML += `<li>${user.name}</li>`;\n    });\n});\n</script>"""
"एक डायनामिक Flask रूट बनाओ जो यूजर आईडी के आधार पर प्रोफाइल लौटाए","""# In app.py:\nfrom flask import jsonify\nusers_db = {1: {'name':'Amit'}, 2:{'name':'Ria'}}\n@app.route('/api/user/<int:user_id>')\ndef get_user_by_id(user_id):\n    user = users_db.get(user_id, {'error': 'User not found'})\n    return jsonify(user)"""
"जावास्क्रिप्ट से एक खास यूजर का प्रोफाइल फेच करो","""\n<script>\nfetch('/api/user/1').then(res => res.json()).then(data => console.log(data.name));\n</script>"""
"AJAX का उपयोग करके एक JSON ऑब्जेक्ट के रूप में फॉर्म डेटा POST करो","""\n<script>\ndocument.getElementById('myForm').addEventListener('submit', function(e) {\n    e.preventDefault();\n    const data = { username: 'testuser' };\n    fetch('/api/register', { \n        method: 'POST', \n        headers: {'Content-Type': 'application/json'},\n        body: JSON.stringify(data)\n    });\n});\n</script>"""
"Flask में एक JSON POST रिक्वेस्ट को हैंडल करो","""# In app.py:\nfrom flask import request, jsonify\n@app.route('/api/register', methods=['POST'])\ndef register_user():\n    data = request.json\n    username = data.get('username')\n    # ... save user to database ...\n    return jsonify({'status': 'success', 'registered_user': username})"""
"फॉर्म सबमिट करने के बाद सर्वर से मिले जवाब को पेज पर दिखाओ","""\n<p id='response-message'></p>\n<script>\n//... fetch POST call in submit event ...\n.then(res => res.json()).then(data => {\n    document.getElementById('response-message').innerText = `User ${data.registered_user} registered!`;\n});\n</script>"""
"Jinja2 टेम्पलेट में एक डिक्शनरी से डेटा दिखाओ","""\n<h2>User Profile</h2>\n<p>Name: {{ user.name }}</p>\n<p>City: {{ user.city }}</p>"""
"Flask से टेम्पलेट में एक डिक्शनरी पास करो","""# In app.py:\nfrom flask import render_template\n@app.route('/user-profile')\ndef user_profile_page():\n    user_data = {'name': 'Amit Saka', 'city': 'Lucknow'}\n    return render_template('profile.html', user=user_data)"""
"Jinja2 में एक लेआउट टेम्पलेट को एक्सटेंड करो","""\n{% extends 'base.html' %}\n{% block content %}\n<h1>This is the page content.</h1>\n{% endblock %}"""
"Jinja2 के लिए एक 'base.html' लेआउट बनाओ","""\n<!DOCTYPE html>\n<html>\n<head><title>My Site</title></head>\n<body>\n    <nav>...</nav>\n    {% block content %}{% endblock %}\n    <footer>...</footer>\n</body>\n</html>"""
"एक सिंपल लॉगइन API बनाओ जो यूजरनेम और पासवर्ड चेक करे","""# In app.py:\nfrom flask import request, jsonify\n@app.route('/api/login', methods=['POST'])\ndef login_api():\n    data = request.json\n    if data.get('username') == 'admin' and data.get('password') == '1234':\n        return jsonify({'status': 'success', 'token': 'fake_token_123'})\n    return jsonify({'status': 'error', 'message': 'Invalid credentials'}), 401"""
"एक लाइव सर्च के लिए Flask API बनाओ","""# In app.py:\nfrom flask import request, jsonify\nitems = ['Apple', 'Avocado', 'Banana', 'Apricot']\n@app.route('/api/search')\ndef search_api():\n    query = request.args.get('q', '').lower()\n    results = [item for item in items if query in item.lower()]\n    return jsonify(results)"""
"एक इनपुट फील्ड बनाओ जो टाइप करते ही लाइव सर्च API को कॉल करे","""\n<input type='text' onkeyup=""fetch('/api/search?q='+this.value).then(res=>res.json()).then(data => {\n    const resultsList = document.getElementById('results');\n    resultsList.innerHTML = '';\n    data.forEach(item => { resultsList.innerHTML += `<li>${item}</li>`; });\n});"">\n<ul id='results'></ul>"""
"सभी To-Do आइटम्स को लौटाने वाला एक Flask API बनाओ","""# In app.py:\nfrom flask import jsonify\ntodos = ['Learn HTML', 'Learn CSS', 'Learn JavaScript']\n@app.route('/api/todos')\ndef get_todos():\n    return jsonify(todos)"""
"पेज लोड होने पर सभी To-Do आइटम्स को फेच करने के लिए जावास्क्रिप्ट लिखो","""\n<ul id='todo-list'></ul>\n<script>\nwindow.onload = () => {\n    fetch('/api/todos').then(res => res.json()).then(data => {\n        const list = document.getElementById('todo-list');\n        data.forEach(item => { list.innerHTML += `<li>${item}</li>`; });\n    });\n}\n</script>"""
"To-Do लिस्ट में नया आइटम जोड़ने वाला एक Flask API","""# In app.py:\nfrom flask import request, jsonify\n@app.route('/api/add_todo', methods=['POST'])\ndef add_todo_api():\n    new_item = request.json.get('item')\n    if new_item:\n        todos.append(new_item)\n    return jsonify(todos)"""
"To-Do लिस्ट में नया आइटम जोड़ने के लिए जावास्क्रिप्ट कोड","""\n<input id='todo-input'><button onclick=""fetch('/api/add_todo', {method:'POST', headers:{'Content-Type':'application/json'}, body:JSON.stringify({item: document.getElementById('todo-input').value})})"">Add</button>"""
"Flask से एक इमेज फाइल सर्व करो","""# In app.py:\nfrom flask import send_from_directory\n@app.route('/images/<filename>')\ndef serve_image(filename):\n    return send_from_directory('static/images', filename)"""
"Jinja2 टेम्पलेट में Flask द्वारा सर्व की गई इमेज को दिखाओ","""\n<img src=""{{ url_for('serve_image', filename='logo.png') }}"">"""
"Flask में एक यूज़र को दूसरे पेज पर रीडायरेक्ट करो","""# In app.py:\nfrom flask import redirect, url_for\n@app.route('/old-url')\ndef old_url():\n    return redirect(url_for('new_url_function'))"""
"पैरामीटर लेने वाली एक पाइथन API बनाओ","""# In app.py:\nfrom flask import request, jsonify\n@app.route('/api/product')\ndef get_product():\n    product_id = request.args.get('id', '0')\n    return jsonify({'product_id': product_id})"""
"पैरामीटर के साथ जावास्क्रिप्ट से API को कॉल करो","""\n<script>fetch('/api/product?id=123').then(res => res.json()).then(data => console.log(data.product_id));</script>"""
"Jinja2 में टेम्पलेट फ़िल्टर का उपयोग करो (जैसे `upper`)","""\n<p>{{ name|upper }}</p>"""
"Flask में एक डायनामिक इमेज जनरेटर का ढाँचा","""# In app.py:\nfrom PIL import Image, ImageDraw\nfrom flask import Response\n@app.route('/image.png')\ndef generate_image():\n    img = Image.new('RGB', (100, 30), color='red')\n    # ... serve image buffer ..."""
"Flask में एक लॉगआउट रूट बनाओ जो सेशन को क्लियर करे","""# In app.py:\nfrom flask import session, redirect, url_for\napp.secret_key = 'your_secret_key'\n@app.route('/logout')\ndef logout():\n    session.pop('username', None)\n    return redirect(url_for('index'))"""
"HTML फाइल अपलोड फॉर्म","""\n<form action='/upload' method='post' enctype='multipart/form-data'>\n  <input type='file' name='file'>\n  <input type='submit' value='Upload'>\n</form>"""
"Flask में एक फाइल अपलोड हैंडलर बनाओ","""# In app.py:\nfrom flask import request\nfrom werkzeug.utils import secure_filename\n@app.route('/upload', methods=['POST'])\ndef upload_file():\n    if 'file' in request.files:\n        f = request.files['file']\n        f.save(secure_filename(f.filename))\n        return 'File uploaded successfully'\n    return 'No file part'"""
"Flask में कुकी (cookie) सेट करो","""# In app.py:\nfrom flask import make_response\n@app.route('/set-cookie')\ndef set_cookie():\n    resp = make_response('Setting a cookie')\n    resp.set_cookie('user', 'amit')\n    return resp"""
"Flask में कुकी पढ़ो","""# In app.py:\nfrom flask import request\n@app.route('/get-cookie')\ndef get_cookie():\n    username = request.cookies.get('user')\n    return f'Username from cookie is {username}'"""
"Flask में सेशन (session) का उपयोग करो","""# In app.py:\nfrom flask import Flask, session\napp = Flask(__name__)\napp.secret_key = 'a_secret_key'\n@app.route('/set-session')\ndef set_session():\n    session['logged_in'] = True\n    return 'Session set'"""
"Flask में एक 404 एरर हैंडलर बनाओ","""# In app.py:\nfrom flask import render_template\n@app.errorhandler(404)\ndef page_not_found(error):\n    return render_template('404.html'), 404"""
"एक फुल-स्टैक 'लाइक' बटन का बैकएंड","""# In app.py:\nfrom flask import jsonify\nlikes = 0\n@app.route('/api/like', methods=['POST'])\ndef like_post():\n    global likes\n    likes += 1\n    return jsonify({'likes': likes})"""
"एक 'लाइक' बटन का फ्रंटएंड","""\n<p>Likes: <span id='like-count'>0</span></p>\n<button onclick=""fetch('/api/like', {method:'POST'}).then(res=>res.json()).then(data=>document.getElementById('like-count').innerText=data.likes)"">👍 Like</button>"""
"बैकग्राउंड में चलने वाले टास्क के लिए एक पाइथन स्क्रिप्ट","""# In tasks.py:\nimport time\ndef long_running_task():\n    time.sleep(10)\n    print('Task finished!')"""
"एक पाइथन वेबस्क्रैपर का ढाँचा जो BeautifulSoup का उपयोग करे","""import requests\nfrom bs4 import BeautifulSoup\nURL = 'http://example.com'\npage = requests.get(URL)\nsoup = BeautifulSoup(page.content, 'html.parser')"""
"एक पाइथन स्क्रिप्ट जो एक टेक्स्ट फाइल की लाइनों को गिने","""line_count = 0\nwith open('my_file.txt', 'r') as f:\n    for line in f:\n        line_count += 1\nprint(f'The file has {line_count} lines.')"""
"HTML में एक SVG आइकन का उपयोग करो","""<svg width='100' height='100'><circle cx='50' cy='50' r='40' stroke='black' stroke-width='3' fill='red' /></svg>"""
"एक Flask API बनाओ जो डेटाबेस से डेटा लाए (स्यूडो-कोड)","""# In app.py:\n@app.route('/users/<int:id>')\ndef get_user_from_db(id):\n    # user = Database.get_user(id)\n    user = {'id': id, 'name': 'Dummy User'}\n    return jsonify(user)"""
"एक API बनाओ जो एक JSON फाइल से डेटा लौटाए","""# In app.py:\nimport json\n@app.route('/api/products')\ndef get_products():\n    with open('products.json', 'r') as f:\n        products = json.load(f)\n    return jsonify(products)"""
"एक HTML पेज बनाओ जो वेबसॉकेट (WebSocket) से कनेक्ट हो","""\n<script>\n    const socket = new WebSocket('ws://localhost:8080');\n    socket.onmessage = function(event) {\n        console.log('Message from server:', event.data);\n    };\n</script>"""
"एक सिंपल पाइथन वेबसॉकेट सर्वर का ढाँचा","""import asyncio\nimport websockets\n\nasync def handler(websocket):\n    async for message in websocket:\n        print(f'Received: {message}')\n\nasync def main():\n    async with websockets.serve(handler, 'localhost', 8080):\n        await asyncio.Future() # run forever"""
"HTML में सर्वर-सेंट इवेंट्स (Server-Sent Events) का उपयोग करो","""\n<script>\n    const evtSource = new EventSource('/stream');\n    evtSource.onmessage = function(event) {\n        console.log('New data:', event.data);\n    };\n</script>"""
"Flask में सर्वर-सेंट इवेंट्स (SSE) का एक स्ट्रीम बनाओ","""# In app.py:\nfrom flask import Response\nimport time\n@app.route('/stream')\ndef stream():\n    def event_stream():\n        while True:\n            time.sleep(1)\n            yield 'data: Hello\\n\\n'\n    return Response(event_stream(), mimetype='text/event-stream')"""
"Jinja2 में URL पैरामीटर को एक्सेस करो","""\n<p>Welcome, {{ request.args.get('name') }}!</p>"""
"Flask में एक डायनामिक sitemap.xml जनरेट करो","""# In app.py:\nfrom flask import render_template\n@app.route('/sitemap.xml')\ndef sitemap():\n    # ... get pages from database ...\n    return render_template('sitemap.xml', pages=pages)"""
"पाइथन `Pillow` का उपयोग करके एक इमेज पर टेक्स्ट लिखो","""from PIL import Image, ImageDraw\nimg = Image.new('RGB', (200, 50), color='white')\nd = ImageDraw.Draw(img)\nd.text((10,10), 'Hello World', fill='black')\nimg.save('text_image.png')"""
"एक API बनाओ जो यूज़र के IP एड्रेस को लौटाए","""# In app.py:\nfrom flask import request, jsonify\n@app.route('/api/ip')\ndef get_ip():\n    return jsonify({'ip': request.remote_addr})"""
"Pandas का उपयोग करके एक CSV फाइल पढ़ो","import pandas as pd\ndf = pd.read_csv('my_data.csv')"
"एक Pandas DataFrame से 'Name' कॉलम को सिलेक्ट करो","import pandas as pd\n# df = pd.read_csv('my_data.csv')\nnames = df['Name']"
"एक DataFrame को फ़िल्टर करो जहाँ 'Age' 30 से ज़्यादा हो","import pandas as pd\n# df = pd.read_csv('my_data.csv')\nadults = df[df['Age'] > 30]"
"एक DataFrame को एक नई CSV फाइल में सेव करो","import pandas as pd\n# df = ...\ndf.to_csv('output.csv', index=False)"
"पाइथन में एक JSON फाइल का कंटेंट पढ़ो","import json\nwith open('data.json', 'r') as f:\n    data = json.load(f)"
"एक पाइथन डिक्शनरी को एक JSON फाइल में लिखो","import json\ndata = {'name': 'Amit', 'city': 'Lucknow'}\nwith open('user.json', 'w') as f:\n    json.dump(data, f, indent=4)"
"`os` मॉड्यूल का उपयोग करके चेक करो कि एक फाइल मौजूद है या नहीं","import os\nif os.path.exists('myfile.txt'):\n    print('File exists.')"
"एक फाइल का साइज़ (बाइट्स में) पता करो","import os\nsize_in_bytes = os.path.getsize('myfile.txt')"
"एक नई डायरेक्टरी 'images' बनाओ","import os\nif not os.path.exists('images'):\n    os.mkdir('images')"
"एक फाइल का नाम 'old.txt' से 'new.txt' बदलो","import os\nos.rename('old.txt', 'new.txt')"
"एक फाइल को डिलीट करो","import os\nos.remove('file_to_delete.txt')"
"`datetime` का उपयोग करके आज की तारीख प्राप्त करो","import datetime\ntoday = datetime.date.today()"
"एक डेट ऑब्जेक्ट को 'DD-MM-YYYY' फॉर्मेट में दिखाओ","import datetime\ntoday = datetime.date.today()\nprint(today.strftime('%d-%m-%Y'))"
"दो तारीखों के बीच का अंतर (दिनों में) निकालो","from datetime import date\ndate1 = date(2025, 1, 1)\ndate2 = date(2026, 1, 1)\ndifference = date2 - date1\nprint(f'{difference.days} days')"
"`requests` का उपयोग करके एक फॉर्म डेटा POST करो","import requests\npayload = {'key1': 'value1', 'key2': 'value2'}\nresponse = requests.post('https://httpbin.org/post', data=payload)"
"`requests` में कस्टम हेडर्स भेजो","import requests\nheaders = {'User-Agent': 'my-app/1.0.0'}\nresponse = requests.get('https://httpbin.org/headers', headers=headers)"
"`requests` का उपयोग करके एक इमेज डाउनलोड करो","import requests\nresponse = requests.get('https://via.placeholder.com/150')\nwith open('image.png', 'wb') as f:\n    f.write(response.content)"
"`shutil` का उपयोग करके एक फाइल को कॉपी करो","import shutil\nshutil.copyfile('source.txt', 'destination.txt')"
"`shutil` का उपयोग करके एक फाइल को दूसरी डायरेक्टरी में मूव करो","import shutil\nshutil.move('source.txt', 'new_folder/source.txt')"
"`glob` का उपयोग करके वर्तमान डायरेक्टरी में सभी `.txt` फाइलों को ढूंढो","import glob\ntxt_files = glob.glob('*.txt')"
"एक लिस्ट को सेट में बदलकर डुप्लीकेट्स हटाओ","my_list = [1, 2, 2, 3, 4, 3]\nunique_items = list(set(my_list))"
"एक डिक्शनरी की keys पर लूप चलाओ","my_dict = {'a': 1, 'b': 2, 'c': 3}\nfor key in my_dict.keys():\n    print(key)"
"नंबरों की एक लिस्ट को आरोही क्रम में सॉर्ट करो","numbers = [4, 1, 8, 3, 5]\nnumbers.sort()"
"`sorted()` फंक्शन का उपयोग करके एक नई सॉर्टेड लिस्ट बनाओ","numbers = [4, 1, 8, 3, 5]\nsorted_numbers = sorted(numbers)"
"डिक्शनरी की एक लिस्ट को 'age' के आधार पर सॉर्ट करो","people = [{'name': 'Amit', 'age': 30}, {'name': 'Ria', 'age': 20}]\npeople.sort(key=lambda person: person['age'])"
"एक लिस्ट के सभी आइटम्स का योग करो","numbers = [1, 2, 3, 4, 5]\ntotal = sum(numbers)"
"एक लिस्ट में सबसे छोटा और सबसे बड़ा नंबर ढूंढो","numbers = [10, 4, 88, 2]\nmin_num = min(numbers)\nmax_num = max(numbers)"
"एक स्ट्रिंग को कैरेक्टर्स की लिस्ट में बदलो","my_string = 'hello'\nchar_list = list(my_string)"
"एक लिस्ट में किसी आइटम का इंडेक्स पता करो","fruits = ['apple', 'banana', 'cherry']\nindex = fruits.index('banana')"
"एक 2D लिस्ट (मैट्रिक्स) बनाओ","matrix = [[1, 2, 3], [4, 5, 6], [7, 8, 9]]"
"एक 2D लिस्ट के एक एलिमेंट को एक्सेस करो","matrix = [[1, 2], [3, 4]]\nelement = matrix[0][1] # Will be 2"
"`zip` का उपयोग करके दो लिस्ट्स को एक साथ जोड़ो","names = ['Amit', 'Ria']\nages = [25, 22]\nfor name, age in zip(names, ages):\n    print(f'{name} is {age}')"
"`sys` मॉड्यूल से कमांड-लाइन आर्गुमेंट्स एक्सेस करो","import sys\n# In terminal: python script.py arg1 arg2\nfirst_arg = sys.argv[1]"
"`random` मॉड्यूल का उपयोग करके एक रैंडम इंटीजर जेनरेट करो","import random\nrandom_number = random.randint(1, 100)"
"`random` मॉड्यूल का उपयोग करके एक लिस्ट से एक रैंडम आइटम चुनो","import random\nmy_list = ['a', 'b', 'c']\nrandom_choice = random.choice(my_list)"
"एक फाइल के अस्तित्व को चेक करके उसे सुरक्षित रूप से डिलीट करो","import os\nif os.path.exists('file.txt'):\n    os.remove('file.txt')"
"वर्तमान समय को एक ख़ास फॉर्मेट में प्रिंट करो","import time\nprint(time.strftime('%Y-%m-%d %H:%M:%S'))"
"एक डिक्शनरी से `.get()` का उपयोग करके सुरक्षित रूप से वैल्यू निकालो","my_dict = {'a': 1}\nvalue = my_dict.get('b', 0) # 'b' नहीं है, तो 0 लौटाएगा"
"एक लिस्ट से `.pop()` का उपयोग करके आखिरी आइटम निकालो","my_list = [1, 2, 3]\nlast_item = my_list.pop()"
"पाइथन में एक टर्नेरी ऑपरेटर का उपयोग करो","age = 20\nstatus = 'adult' if age >= 18 else 'minor'"
"एक स्ट्रिंग में `in` कीवर्ड का उपयोग करके सबस्ट्रिंग खोजो","if 'hello' in 'hello world':\n    print('Found')"
"एक फंक्शन को दूसरे फंक्शन के अंदर डिफाइन करो (नेस्टेड फंक्शन)","def outer():\n    def inner():\n        print('Inner function')\n    inner()"
"पाइथन में `pass` स्टेटमेंट का उपयोग करो","def my_empty_function():\n    pass # To be implemented later"
"एक डिक्शनरी की दो डिक्शनरी को मर्ज करो","dict1 = {'a': 1}\ndict2 = {'b': 2}\nmerged_dict = {**dict1, **dict2}"
"`collections.Counter` का उपयोग करके एक लिस्ट में आइटम्स की गिनती करो","from collections import Counter\nmy_list = ['a', 'b', 'a', 'c', 'b', 'a']\ncounts = Counter(my_list)"
"एक `deque` ऑब्जेक्ट बनाओ","from collections import deque\nd = deque(['a', 'b', 'c'])"
"एक रेगुलर एक्सप्रेशन का उपयोग करके एक ईमेल को वैलिडेट करो","import re\nemail_regex = r'\\b[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Z|a-z]{2,}\\b'\nre.match(email_regex, 'test@example.com')"
"एक JSON स्ट्रिंग को pretty-print करो","import json\ndata = {'name':'Amit','skills':['Python','JS']}\nprint(json.dumps(data, indent=4, sort_keys=True))"
"एक फंक्शन बनाओ जो एक जेनरेटर `yield` का उपयोग करे","def number_generator(n):\n    for i in range(n):\n        yield i"

"एक div को हॉरिजॉन्टली और वर्टिकली सेंटर करने के लिए फ्लेक्सबॉक्स का उपयोग करो","<div style='display:flex; justify-content:center; align-items:center; height:100px; border:1px solid;'>Centered Item</div>"
"CSS `transform-origin` का उपयोग करके रोटेशन का केंद्र बदलो","<style>.origin-box:hover{transform:rotate(45deg);}</style><div class='origin-box' style='width:50px; height:50px; background:coral; transform-origin:top left; transition:transform 0.5s;'></div>"
"CSS से एक टियर-ऑफ (tear-off) पेपर इफ़ेक्ट बनाओ","<style>.paper{position:relative; background:#fff; box-shadow:0 1px 4px rgba(0,0,0,0.3); padding:20px;}.paper::after{content:''; position:absolute; bottom:-10px; left:5%; width:90%; height:10px; box-shadow:0 5px 5px rgba(0,0,0,0.3); transform:rotate(-3deg); z-index:-1;}</style><div class='paper'>Paper Effect</div>"
"`caret-color` का उपयोग करके टेक्स्ट इनपुट के कर्सर का रंग बदलो","<input style='caret-color:red; border:1px solid;' placeholder='Cursor here is red'>"
"CSS `column-count` का उपयोग करके टेक्स्ट को कई कॉलम में बांटो","<div style='column-count:3; column-gap:20px; column-rule: 1px solid #ccc; padding:10px;'>This long text will be split into three columns. It makes reading easier for large blocks of text, similar to a newspaper layout which is very readable.</div>"
"CSS से एक चेकरबोर्ड (checkerboard) पैटर्न बनाओ","<div style='width:100px; height:100px; background-image: conic-gradient(#fff 90deg, #ccc 90deg 180deg, #fff 180deg 270deg, #ccc 270deg); background-size: 50px 50px;'></div>"
":not() स्यूडो-क्लास का उपयोग करके एक एलिमेंट को छोड़कर बाकी सबको स्टाइल करो","<style>p:not(.special){color:grey;}</style><p>Grey text.</p><p class='special'>Special text (not grey).</p><p>Grey text again.</p>"
"चेकबॉक्स के चेक्ड होने पर एक लेबल का टेक्स्ट बदलो","<style>.check-label{color:red; transition:color 0.3s;}.checker:checked + .check-label{color:green;}</style><input type='checkbox' class='checker' id='mycheck'><label for='mycheck' class='check-label'>Status</label>"
"CSS `all` प्रॉपर्टी का उपयोग करके सभी स्टाइल रीसेट करो","<style>.reset-all{all:initial; font-family:monospace; font-size:16px;}</style><button class='reset-all' style='color:red; border:2px solid blue;'>Reset Button</button>"
"एक div बनाओ जिसके कोने अलग-अलग रेडियस के हों","<div style='width:100px; height:100px; background:coral; border-radius: 10px 40px 10px 40px;'></div>"
"CSS `shape-outside` का उपयोग करके टेक्स्ट को एक सर्किल के चारों ओर रैप करो","<style>.shape{width:100px; height:100px; float:left; shape-outside:circle(50%); clip-path:circle(50%); background:lightblue;}</style><div class='shape'></div><p>This long text will wrap around the circular shape that has been floated to the left. This allows for more interesting and magazine-like layouts on the web.</p>"
"एक 3D फ्लिप कार्ड एनीमेशन बनाओ","<style>.card{perspective:1000px; width:150px; height:100px;}.card-inner{position:relative; width:100%; height:100%; transform-style:preserve-3d; transition:transform 0.6s;}.card:hover .card-inner{transform:rotateY(180deg);}.front, .back{position:absolute; width:100%; height:100%;}</style><div class='card'><div class='card-inner'><div class='front' style='background:lightblue;'>Front</div><div class='back' style='background:lightcoral; transform:rotateY(180deg);'>Back</div></div></div>"
"एनीमेशन से टेक्स्ट का रंग बदलो (रेनबो इफ़ेक्ट)","<style>@keyframes rainbow-text{0%{color:red;} 25%{color:orange;} 50%{color:green;} 75%{color:blue;} 100%{color:purple;}} h1.rainbow{animation:rainbow-text 5s infinite alternate;}</style><h1 class='rainbow'>Rainbow Text</h1>"
"CSS `mix-blend-mode` का उपयोग करो","<style>.blend-container{position:relative;}.blend-text{position:absolute; top:20px; left:20px; font-size:24px; color:white; mix-blend-mode:difference;}</style><div class='blend-container'><img src='image.jpg' width='200' alt='background'><h2 class='blend-text'>Blended Text</h2></div>"
"`object-fit: scale-down` का उपयोग करो","<div style='width:150px; height:100px; border:1px solid;'><img src='image.jpg' alt='fit image' style='width:100%; height:100%; object-fit:scale-down;'></div>"
"BEM (Block, Element, Modifier) नेमिंग कन्वेंशन का उदाहरण","<style>.card--featured { border-color: gold; }</style><div class='card card--featured'><p class='card__text'>Featured Card</p></div>"
"CSS `clamp()` का उपयोग करके एक रिस्पॉन्सिव पैडिंग बनाओ","<div style='padding: clamp(1rem, 5vw, 3rem); background:lightgrey;'>Padding changes with screen width.</div>"
"एक इमेज पर होवर करने पर शार्प ज़ूम इफ़ेक्ट बनाओ","<style>.zoom-container{width:200px; overflow:hidden;}.zoom-container img{transition: transform 0.3s;}.zoom-container:hover img{transform:scale(1.2);}</style><div class='zoom-container'><img src='image.jpg' width='200'></div>"
"CSS से एक 'न्यूमॉर्फिक' (Neumorphic) बटन बनाओ","<style>.neumorphic-btn{padding:10px 20px; background:#f0f0f0; border:none; border-radius:10px; box-shadow: 5px 5px 10px #bebebe, -5px -5px 10px #ffffff;}</style><button class='neumorphic-btn'>Neumorphic</button>"
"टेक्स्ट की आखिरी लाइन को दाईं ओर अलाइन करो (`text-align-last`)","<p style='text-align: justify; text-align-last: right;'>This is a long paragraph of text. The very last line of this paragraph will be aligned to the right side, which can be a neat typographic effect.</p>"
"CSS से एक लाइन खींचने वाला एनीमेशन बनाओ","<style>h2.draw-line{position:relative;} h2.draw-line::after{content:''; position:absolute; bottom:-5px; left:0; width:0; height:2px; background:blue; transition:width 0.5s;} h2.draw-line:hover::after{width:100%;}</style><h2 class='draw-line'>Hover to draw a line</h2>"
"एक 'ऑफ-कैनवास' मेन्यू का बेसिक स्ट्रक्चर बनाओ","<style>.off-canvas{position:fixed; top:0; left:-250px; width:250px; height:100%; background:#333; transition:left 0.3s;}</style><div class='off-canvas'></div><button onclick=""document.querySelector('.off-canvas').style.left='0px'"">Open Menu</button>"
"CSS `will-change` का उपयोग करके एनीमेशन को ऑप्टिमाइज़ करो","<style>.animated-box{will-change:transform; transition:transform 0.5s;}.animated-box:hover{transform:translateX(50px);}</style><div class='animated-box' style='width:50px; height:50px; background:red;'></div>"
"एक `drop-shadow` फ़िल्टर का उपयोग करो","<img src='icon.png' width='100' style='filter: drop-shadow(5px 5px 5px #666);'>"
"एक div के स्क्रॉलबार को स्टाइल करो","<style>.custom-scroll::-webkit-scrollbar{width:10px;} .custom-scroll::-webkit-scrollbar-thumb{background:grey; border-radius:5px;}</style><div class='custom-scroll' style='height:100px; overflow-y:scroll;'>Long content...</div>"
"CSS `user-select: none` का उपयोग करके टेक्स्ट को सेलेक्ट होने से रोको","<p style='user-select:none;'>You cannot select this text.</p>"
"CSS `pointer-events: none` का उपयोग करके क्लिक इवेंट्स को डिसेबल करो","<div style='pointer-events:none;'><a href='#'>This link is unclickable.</a></div>"
"`hue-rotate` फ़िल्टर का उपयोग करके एक इमेज का रंग बदलो","<img src='image.jpg' width='150' style='filter: hue-rotate(90deg);'>"
"एक लोडिंग टेक्स्ट के लिए 'blinking' एनीमेशन बनाओ","<style>@keyframes blink{50%{opacity:0;}} .blinking-text{animation:blink 1s infinite;}</style><p class='blinking-text'>Loading...</p>"
"एक टेक्स्ट बनाओ जिसके ऊपर से लाइन गुज़रे (overline)","<p style='text-decoration: overline;'>Overlined Text</p>"
"CSS काउंटर का उपयोग करके आइटम्स को ऑटो-नंबर करो","<style>body{counter-reset:section;} h2::before{counter-increment:section; content:'Section ' counter(section) ': ';}</style><h2>Title 1</h2><h2>Title 2</h2>"
"एक div बनाओ जो सिर्फ प्रिंट करते समय दिखाई दे","<style>@media print{.print-only{display:block;}} .print-only{display:none;}</style><div class='print-only'>This is only visible when printing.</div>"
"एक एलिमेंट बनाओ जो प्रिंट करते समय छिप जाए","<style>@media print{.no-print{display:none;}}</style><button class='no-print'>Don't print me</button>"
"CSS `background-clip: text` का उपयोग करो","<h1 style='font-size:48px; background:url(image.jpg); -webkit-background-clip:text; color:transparent;'>Text with Image BG</h1>"
"एक मैग्निफाइंग ग्लास इफ़ेक्ट का UI बनाओ","<div style='position:relative;'><img src='image.jpg' width='200'><div style='position:absolute; top:50px; left:50px; width:50px; height:50px; border:2px solid; border-radius:50%;'></div></div>"
"CSS `skew` ट्रांसफॉर्म का उपयोग करो","<div style='width:100px; height:50px; background:lightblue; transform:skewY(-10deg);'></div>"
"CSS `perspective` का उपयोग करके एक 3D इफ़ेक्ट बनाओ","<style>.scene{perspective:400px;}.box3d{width:100px; height:100px; background:coral; transform:rotateY(30deg);}</style><div class='scene'><div class='box3d'></div></div>"
"CSS से एक 'डार्क मोड' थीम बनाओ","<style>body.dark-mode{background:#121212; color:white;}</style><body class='dark-mode'>Dark mode content.</body>"
"CSS `background-blend-mode` का उपयोग करो","<style>.blend-bg{width:150px; height:100px; background-image:url(image.jpg); background-color:blue; background-blend-mode:screen;}</style><div class='blend-bg'></div>"
"CSS `shape-margin` का उपयोग करो","<style>.shape2{width:100px; height:100px; float:left; shape-outside:circle(50%); shape-margin:10px;}</style><div class='shape2'></div><p>Text will wrap around the circle with a 10px margin...</p>"
"CSS `scroll-behavior: smooth` का उपयोग करो","<style>html{scroll-behavior:smooth;}</style><a href='#bottom'>Go to Bottom</a><div style='height:1000px;'></div><div id='bottom'>Bottom</div>"
"एक 'रिबन' (ribbon) बैनर CSS से बनाओ","<style>.ribbon{position:absolute; top:10px; right:-25px; background:red; color:white; padding:5px 10px; transform:rotate(45deg);}</style><div style='position:relative; width:100px; height:100px; border:1px solid;'></div><div class='ribbon'>New!</div>"
"CSS `filter: invert()` का उपयोग करके रंगों को उल्टा करो","<img src='image.jpg' width='150' style='filter:invert(100%);'>"
"CSS `initial` कीवर्ड का उपयोग करके एक प्रॉपर्टी को रीसेट करो","<p style='color:blue;'><span style='color:initial;'>This text will have the default color.</span></p>"
"CSS `unset` कीवर्ड का उपयोग करके एक प्रॉपर्टी को अनसेट करो","<p style='color:green;'>This text is green. <span style='color:unset;'>This text is also green (inherits).</span></p>"
"CSS `revert` कीवर्ड का उपयोग करो","<p style='color:blue;'>Blue text, but <span style='color:revert;'>this part reverts</span> to the browser's default color.</p>"
"एक एनिमेटेड ग्रेडिएंट बैकग्राउंड बनाओ","<style>@keyframes gradient-anim{0%{background-position:0% 50%;} 50%{background-position:100% 50%;} 100%{background-position:0% 50%;}} .animated-gradient{background:linear-gradient(-45deg, #ee7752, #e73c7e, #23a6d5, #23d5ab); background-size:400% 400%; animation:gradient-anim 15s ease infinite; height:100px;}</style><div class='animated-gradient'></div>"
"CSS से एक 'glassmorphism' कार्ड बनाओ","<div style='background:rgba(255,255,255,0.3); backdrop-filter:blur(10px); border:1px solid rgba(255,255,255,0.1); border-radius:10px; padding:20px;'>Glassmorphism Card</div>"
"एक 'sticky' फुटर बनाओ जो हमेशा पेज के नीचे रहे","<style>body{display:flex; min-height:100vh; flex-direction:column;} main{flex:1;} footer{background:#333; color:white; padding:10px;}</style><body><main>Main Content</main><footer>Sticky Footer</footer></body>"
"CSS `:target` स्यूडो-क्लास का उपयोग करो","<style>:target{background:yellow;}</style><a href='#section1'>Go to Section 1</a><div id='section1'>When you click the link, I get a yellow background.</div>"
"एक एलिमेंट के ठीक बाद आने वाले पैराग्राफ को स्टाइल करो (Adjacent Sibling)","<style>h2 + p { font-style: italic; }</style><h2>Heading</h2><p>This paragraph is italic.</p><p>This one is not.</p>"
"एक हेडिंग के बाद आने वाले सभी पैराग्राफ को स्टाइल करो (General Sibling)","<style>h3 ~ p { color: grey; }</style><h3>Title</h3><p>Grey.</p><div><p>Not grey.</p></div><p>Grey.</p>"
"उन सभी लिंक्स को स्टाइल करो जिनमें 'target' एट्रिब्यूट हो","<style>a[target] { border: 1px solid green; }</style><a href='#' target='_blank'>Styled</a><a href='#'>Not Styled</a>"
"उन सभी लिंक्स को स्टाइल करो जिनका href '.pdf' पर खत्म होता हो","<style>a[href$='.pdf'] { color: red; }</style><a href='file.pdf'>PDF Link</a><a href='page.html'>HTML Link</a>"
"एक लिस्ट में हर दूसरे आइटम को स्टाइल करो (nth-child)","<style>li:nth-child(even){background-color:#f2f2f2;}</style><ul><li>1</li><li>2</li><li>3</li><li>4</li></ul>"
"एक लिस्ट में सिर्फ पहले आइटम को स्टाइल करो (:first-child)","<style>li:first-child{font-weight:bold;}</style><ul><li>First</li><li>Second</li></ul>"
"एक लिस्ट में सिर्फ आखिरी आइटम को स्टाइल करो (:last-child)","<style>li:last-child{font-style:italic;}</style><ul><li>First</li><li>Last</li></ul>"
"उन सभी पैराग्राफ को स्टाइल करो जो अपने पैरेंट का पहला पैराग्राफ हो (:first-of-type)","<style>p:first-of-type{color:blue;}</style><div><h1>Title</h1><p>First p (blue)</p><p>Second p</p></div>"
"उन सभी इनपुट फील्ड को स्टाइल करो जो चेक्ड (checked) हों","<style>:checked + label {color:green; text-decoration:line-through;}</style><input type='checkbox' id='c1' checked><label for='c1'>Completed</label>"
"खाली पैराग्राफ को छिपा दो (:empty)","<style>p:empty { display: none; }</style><p></p><p>Not empty</p>"
"इनपुट फील्ड पर फोकस होने पर उसके पैरेंट div को स्टाइल करो (:focus-within)","<style>.input-group:focus-within { background-color: lightyellow; border-left: 3px solid orange;}</style><div class='input-group' style='border:1px solid #ccc; padding:5px;'><input type='text' style='border:none; outline:none;'></div>"
"टेक्स्ट को सेलेक्ट करने पर उसका रंग बदलो (::selection)","<style>::selection { background: orange; color: white; }</style><p>Select this text to see the custom highlight color.</p>"
"इनपुट फील्ड के प्लेसहोल्डर टेक्स्ट को स्टाइल करो (::placeholder)","<style>::placeholder { color: red; opacity: 1; font-style:italic;}</style><input placeholder='Username (in red)'>"
"CSS में एक 'main-color' नाम का वेरिएबल बनाओ","<style>:root { --main-color: dodgerblue; --padding-size: 15px; }</style>"
"`main-color` CSS वेरिएबल का उपयोग करके टेक्स्ट का रंग सेट करो","<style>:root { --main-color: dodgerblue; } p { color: var(--main-color); }</style><p>This text uses a CSS variable for its color.</p>"
"एक मीडिया क्वेरी बनाओ जो 600px से बड़ी स्क्रीन पर बैकग्राउंड बदले","<style>body { background-color: lightblue; } @media (min-width: 600px) { body { background-color: lightgreen; } }</style><div>Resize the browser window to see the background color change.</div>"
"ग्रिड लेआउट को मोबाइल पर एक कॉलम का बनाओ","<style>.grid{display:grid; grid-template-columns: 1fr 1fr 1fr; gap:10px;} @media (max-width: 600px){.grid{grid-template-columns: 1fr;}}</style><div class='grid'><div style='background:lightgrey; padding:10px;'>1</div><div style='background:lightgrey; padding:10px;'>2</div><div style='background:lightgrey; padding:10px;'>3</div></div>"
"`vw` यूनिट का उपयोग करके एक div की चौड़ाई सेट करो","<div style='width: 50vw; background: coral; padding:10px; color:white;'>This div's width is 50% of the viewport width.</div>"
"`vh` यूनिट का उपयोग करके एक div की ऊंचाई सेट करो","<div style='height: 50vh; background: lightblue; padding:10px;'>This div's height is 50% of the viewport height.</div>"
"रिस्पॉन्सिव फॉन्ट साइज़ के लिए `rem` यूनिट का उपयोग करो","<style>html{font-size:16px;} p{font-size: 1.5rem;}</style><p>This font size is 1.5 x 16px = 24px.</p>"
"नेस्टेड फॉन्ट साइज़ के लिए `em` यूनिट का उपयोग करो","<div style='font-size: 20px;'><p style='font-size: 1.5em;'>This text's size (30px) is 1.5 times its parent's font size (20px).</p></div>"
"`clamp()` का उपयोग करके एक रिस्पॉन्सिव (fluid) फॉन्ट साइज़ बनाओ","<h1 style='font-size: clamp(1.5rem, 4vw, 3rem);'>This is a Fluid Responsive Title</h1>"
"एक div बनाओ जिसका आस्पेक्ट रेश्यो 16/9 हो","<div style='width: 50%; aspect-ratio: 16 / 9; background: lightgrey;'><p style='text-align:center; padding-top:20%;'>16:9 Aspect Ratio</p></div>"
"रिस्पॉन्सिव इमेज के लिए `picture` टैग का उपयोग करो","<picture><source media='(min-width: 650px)' srcset='large_image.jpg'><source media='(min-width: 465px)' srcset='medium_image.jpg'><img src='small_image.jpg' alt='flowers' style='width:auto;'></picture>"
"CSS `filter` से एक इमेज को ग्रेस्केल करो","<img src='image.jpg' alt='grayscale' style='filter: grayscale(100%);' width='150'>"
"CSS `filter` से एक इमेज पर ब्लर इफ़ेक्ट लगाओ","<img src='image.jpg' alt='blur' style='filter: blur(3px);' width='150'>"
"CSS `filter` से एक इमेज का कंट्रास्ट बढ़ाओ","<img src='image.jpg' alt='contrast' style='filter: contrast(180%);' width='150'>"
"CSS `filter` से एक इमेज पर सेपिया (sepia) इफ़ेक्ट लगाओ","<img src='image.jpg' alt='sepia' style='filter: sepia(100%);' width='150'>"
"एक div के पीछे वाले कंटेंट को ब्लर करो (backdrop-filter)","<div style='background-image:url(image.jpg); height:150px; padding:20px;'><div style='background:rgba(255,255,255,0.5); backdrop-filter:blur(5px); padding:10px; border:1px solid white;'>Text with blurred background</div></div>"
"`clip-path` का उपयोग करके एक div को सर्किल के रूप में काटो","<div style='width:100px; height:100px; background:coral; clip-path:circle(50%);'></div>"
"`clip-path` का उपयोग करके एक div को त्रिभुज (triangle) के रूप में काटो","<div style='width:100px; height:100px; background:green; clip-path:polygon(50% 0%, 0% 100%, 100% 100%);'></div>"
"एक इमेज पर होवर करने पर उसे ज़ूम और रोटेट करो","<style>img.zoom-rotate:hover{transform: scale(1.1) rotate(-5deg);}</style><img class='zoom-rotate' src='image.jpg' width='150' style='transition:transform 0.3s;' alt='image'>"
"CSS से एक लोडिंग स्पिनर बनाओ","<style>@keyframes spin{to{transform:rotate(360deg);}} .spinner{width:30px; height:30px; border:4px solid #f3f3f3; border-top:4px solid #3498db; border-radius:50%; animation:spin 1s linear infinite;}</style><div class='spinner'></div>"
"CSS ग्रेडिएंट टेक्स्ट बनाओ","<h1 style='font-size:48px; background:linear-gradient(to right, red, blue); -webkit-background-clip:text; -webkit-text-fill-color:transparent;'>Gradient Text</h1>"
"CSS `conic-gradient` से एक पाई चार्ट बनाओ","<div style='width:100px; height:100px; border-radius:50%; background:conic-gradient(red 0% 25%, blue 25% 75%, green 75% 100%);'></div>"
"`@supports` का उपयोग करके चेक करो कि ब्राउज़र ग्रिड को सपोर्ट करता है या नहीं","<style>@supports (display:grid){ div.support-test{color:green;} } @supports not (display:grid){ div.support-test{color:red;} }</style><div class='support-test'>This text is green if your browser supports CSS Grid.</div>"
"तार्किक (logical) प्रॉपर्टी `margin-inline-start` का उपयोग करो","<p style='margin-inline-start: 20px; border:1px solid;'>This has a left margin in left-to-right languages.</p>"
"तार्किक (logical) प्रॉपर्टी `padding-block-end` का उपयोग करो","<p style='padding-block-end: 20px; border:1px solid;'>This has a bottom padding.</p>"
"`:is()` स्यूडो-क्लास का उपयोग करके कई एलिमेंट्स को एक साथ स्टाइल करो","<style>header:is(h1, h2, h3){color:purple;}</style><header><h1>Purple Heading 1</h1><h2>Purple Heading 2</h2></header>"
"CSS `scroll-snap` का उपयोग करके एक स्नैपिंग स्क्रॉल कंटेनर बनाओ","<style>.snap-container{scroll-snap-type:y mandatory; height:200px; overflow-y:scroll; border:1px solid;}.snap-child{scroll-snap-align:start; height:200px; display:flex; align-items:center; justify-content:center;}</style><div class='snap-container'><div class='snap-child' style='background:lightblue;'>Section 1</div><div class='snap-child' style='background:lightcoral;'>Section 2</div></div>"
"एक बटन बनाओ जिसमें टेक्स्ट और Font Awesome आइकन दोनों हों","<link rel='stylesheet' href='https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.2/css/all.min.css'><button style='padding:5px 10px;'><i class='fas fa-download' style='margin-right:5px;'></i>Download</button>"
"एक div में टेक्स्ट ओवरफ्लो होने पर ellipsis (...) दिखे","<div style='white-space:nowrap; width:150px; overflow:hidden; text-overflow:ellipsis; border:1px solid;'>This is a very long text that will be truncated with an ellipsis.</div>"
"एक इमेज पर होवर करने पर ग्रेस्केल इफ़ेक्ट हटाओ","<style>img.bw-hover{filter:grayscale(100%); transition:filter 0.3s ease;}.bw-hover:hover{filter:grayscale(0%);}</style><img class='bw-hover' src='image.jpg' width='150' alt='image'>"
"मीडिया क्वेरी में `orientation` का उपयोग करो","<style>@media (orientation: landscape) { body { color: blue; } } @media (orientation: portrait) { body { color: green; } }</style><div>Text color changes depending on screen orientation (landscape or portrait).</div>"
"CSS से एक 3D बटन बनाओ","<style>.btn-3d{background-color:#4CAF50; border:none; padding:10px 20px; color:white; border-radius:5px; box-shadow:0 5px #999; cursor:pointer;}.btn-3d:active{box-shadow:0 2px #666; transform:translateY(3px);}</style><button class='btn-3d'>3D Button</button>"
"टेबल में हर विषम (odd) रो को स्टाइल करो","<style>tr:nth-child(odd){background-color:#f9f9f9;}</style><table><tr><td>Row 1 (Odd)</td></tr><tr><td>Row 2 (Even)</td></tr><tr><td>Row 3 (Odd)</td></tr></table>"
"एक div को हॉरिजॉन्टली और वर्टिकली सेंटर करने के लिए ग्रिड का उपयोग करो","<div style='display:grid; place-items:center; height:100px; border:1px solid;'><div>Perfectly Centered Item</div></div>"
"CSS मास्क (mask-image) का उपयोग करके टेक्स्ट पर इमेज इफ़ेक्ट लगाओ","<style>.masked-text{font-size:48px; font-weight:bold; color:white; background:url(image.jpg); -webkit-background-clip:text; background-clip:text; color:transparent;}</style><h1 class='masked-text'>MASKED</h1>"
"एक जावास्क्रिप्ट प्रॉमिस (Promise) बनाओ जो 1 सेकंड बाद resolve हो","<script>const myPromise = new Promise((resolve, reject) => { setTimeout(() => { resolve('Success!'); }, 1000); });</script>"
"एक प्रॉमिस को `.then()` और `.catch()` से हैंडल करो","<script>const myPromise = new Promise((resolve, reject) => { resolve('Done'); }); myPromise.then(result => console.log(result)).catch(error => console.error(error));</script>"
"एक प्रॉमिस बनाओ जो तुरंत reject हो जाए","<script>const rejectedPromise = new Promise((resolve, reject) => { reject('Failure!'); }); rejectedPromise.catch(error => console.error(error));</script>"
"`async/await` का उपयोग करके एक फंक्शन बनाओ जो डेटा फेच करे","<script>async function fetchData() { try { let response = await fetch('https://jsonplaceholder.typicode.com/todos/1'); let data = await response.json(); console.log(data); } catch (error) { console.error('Could not fetch data:', error); } } fetchData();</script>"
"`async` फंक्शन बनाओ जो एक वैल्यू लौटाए","<script>async function getValue() { return 'Hello Async'; } getValue().then(value => console.log(value));</script>"
"`Promise.all` का उपयोग करके एक साथ कई API कॉल्स करो","<script>Promise.all([fetch('.../posts/1'), fetch('.../posts/2')]).then(responses => Promise.all(responses.map(res => res.json()))).then(data => console.log(data));</script>"
"एक जावास्क्रिप्ट मॉड्यूल से एक फंक्शन एक्सपोर्ट करो","// In math.js file:\nexport function add(a, b) { return a + b; }"
"एक मॉड्यूल से एक फंक्शन इम्पोर्ट करो","// In main.js file:\nimport { add } from './math.js';"
"एक मॉड्यूल से डिफ़ॉल्ट एक्सपोर्ट करो","// In myModule.js:\nexport default function greet() { console.log('Hello'); }"
"एक डिफ़ॉल्ट एक्सपोर्ट को इम्पोर्ट करो","// In main.js:\nimport myGreetingFunction from './myModule.js';"
"`try...catch...finally` ब्लॉक का उपयोग करो","<script>try { console.log('Trying...'); } catch (e) { console.log('Error!'); } finally { console.log('Finally block runs always.'); }</script>"
"एक कस्टम एरर थ्रो (throw) करो","<script>function checkAge(age) { if (age < 18) { throw new Error('Must be 18 or older'); } } try { checkAge(15); } catch (e) { console.error(e.message); }</script>"
"`Array.findIndex` का उपयोग करके एक एलिमेंट का इंडेक्स पता करो","<script>const numbers = [10, 20, 30, 40]; const index = numbers.findIndex(num => num > 25); console.log(index);</script>"
"`Array.some` का उपयोग करके चेक करो कि क्या कोई एलिमेंट कंडीशन को पूरा करता है","<script>const numbers = [1, 2, 3, 4, 5]; const hasEvenNumber = numbers.some(num => num % 2 === 0); console.log(hasEvenNumber);</script>"
"`Array.every` का उपयोग करके चेक करो कि क्या सभी एलिमेंट कंडीशन को पूरा करते हैं","<script>const numbers = [2, 4, 6]; const allAreEven = numbers.every(num => num % 2 === 0); console.log(allAreEven);</script>"
"स्प्रेड ऑपरेटर (...) का उपयोग करके दो एरे को मिलाओ","<script>const arr1 = [1, 2]; const arr2 = [3, 4]; const combined = [...arr1, ...arr2]; console.log(combined);</script>"
"स्प्रेड ऑपरेटर का उपयोग करके एक ऑब्जेक्ट को कॉपी करो","<script>const person = {name: 'Amit'}; const personCopy = {...person};</script>"
"रेस्ट पैरामीटर (...) का उपयोग करके एक फंक्शन बनाओ","<script>function sum(...numbers) { return numbers.reduce((total, num) => total + num, 0); } console.log(sum(1,2,3));</script>"
"ऑब्जेक्ट डीस्ट्रक्चरिंग (Object Destructuring) का उपयोग करो","<script>const person = {name:'Amit', city:'Lucknow'}; const {name, city} = person; console.log(name, city);</script>"
"एरे डीस्ट्रक्चरिंग (Array Destructuring) का उपयोग करो","<script>const fruits = ['Apple', 'Banana']; const [first, second] = fruits; console.log(first);</script>"
"डीस्ट्रक्चरिंग में एक नया वेरिएबल नाम दो","<script>const person = {name:'Amit'}; const {name: personName} = person; console.log(personName);</script>"
"JSON डेटा को डीस्ट्रक्चर करो","<script>const jsonResponse = '{\""user\"":\""Amit\"", \""posts\"":10}'; const {user, posts} = JSON.parse(jsonResponse);</script>"
"JavaScript `Map` ऑब्जेक्ट बनाओ","<script>const myMap = new Map(); myMap.set('key1', 'value1');</script>"
"JavaScript `Set` ऑब्जेक्ट बनाओ","<script>const mySet = new Set([1, 2, 2, 3]); console.log(mySet);</script>"
"क्लास (class) में एक मेथड बनाओ","<script>class Person { constructor(name){this.name=name;} greet(){return `Hello, ${this.name}`;}}</script>"
"क्लास इनहेरिटेंस (Inheritance) का उपयोग करो","<script>class Animal{}; class Dog extends Animal {};</script>"
"क्लास में एक स्टेटिक मेथड बनाओ","<script>class MathHelper { static add(a,b){return a+b;} } console.log(MathHelper.add(2,3));</script>"
"क्लास में गेटर (getter) का उपयोग करो","<script>class Circle { constructor(radius){this.radius=radius;} get diameter(){return this.radius*2;}}</script>"
"क्लास में सेटर (setter) का उपयोग करो","<script>class User { set name(newName){this._name=newName;} } const u = new User(); u.name = 'Amit';</script>"
"JavaScript `Symbol` का उपयोग करो","<script>const mySymbol = Symbol('description');</script>"
"एक जेनरेटर फंक्शन `function*` बनाओ","<script>function* numberGenerator(){ yield 1; yield 2; }</script>"
"ES6 मॉड्यूल में वाइल्डकार्ड (`*`) इम्पोर्ट करो","// In main.js:\nimport * as math from './math.js';"
"`fetch` के साथ `POST` रिक्वेस्ट में `headers` भेजो","<script>fetch('/api/data', { method:'POST', headers:{'Content-Type':'application/json'}, body:JSON.stringify({name:'Amit'}) });</script>"
"एक `async` फंक्शन के अंदर एरर को `try...catch` से हैंडल करो","<script>async function fetchData(){ try { let res = await fetch('...'); } catch(e) { console.error(e); } }</script>"
"`Promise.resolve` का उपयोग करो","<script>Promise.resolve('Instant success').then(msg => console.log(msg));</script>"
"`Promise.reject` का उपयोग करो","<script>Promise.reject('Instant failure').catch(err => console.error(err));</script>"
"`Promise.race` का उपयोग करो","<script>const p1=new Promise(r=>setTimeout(r,500,'one')); const p2=new Promise(r=>setTimeout(r,100,'two')); Promise.race([p1,p2]).then(val=>console.log(val));</script>"
"एक `async` IIFE (Immediately Invoked Function Expression) बनाओ","<script>(async () => { let data = await fetch('...'); console.log(data); })();</script>"
"ऑब्जेक्ट की प्रॉपर्टीज को लूप करने के लिए `Object.keys` का उपयोग करो","<script>const obj = {a:1,b:2}; Object.keys(obj).forEach(key => console.log(key, obj[key]));</script>"
"`localStorage` में ऑब्जेक्ट को सेव करो","<script>const user = {name:'Amit'}; localStorage.setItem('user', JSON.stringify(user));</script>"
"`localStorage` से ऑब्जेक्ट को प्राप्त करो","<script>const user = JSON.parse(localStorage.getItem('user'));</script>"
"एक `async` एरो फंक्शन बनाओ","<script>const fetchData = async () => { const response = await fetch('...'); };</script>"
"डीस्ट्रक्चरिंग में डिफ़ॉल्ट वैल्यू सेट करो","<script>const person = {name:'Amit'}; const {name, city='Lucknow'} = person;</script>"
"नेस्टेड डीस्ट्रक्चरिंग (Nested Destructuring) करो","<script>const user = {id:1, details:{name:'Amit'}}; const {details: {name}} = user;</script>"
"AJAX रिक्वेस्ट के लिए `FormData` ऑब्जेक्ट बनाओ","<form id='myForm'></form><script>const myForm = document.getElementById('myForm'); const formData = new FormData(myForm);</script>"
"`fetch` के साथ `AbortController` का उपयोग करके रिक्वेस्ट को कैंसिल करो","<script>const controller = new AbortController(); const signal = controller.signal; fetch('...', {signal}).catch(err=>{if(err.name==='AbortError')console.log('Fetch aborted')}); controller.abort();</script>"
"`Proxy` ऑब्जेक्ट का एक बेसिक उदाहरण","<script>const target = {}; const handler = {}; const proxy = new Proxy(target, handler);</script>"
"`Reflect` API का एक बेसिक उदाहरण","<script>const obj = {}; Reflect.set(obj, 'prop', 'value');</script>"
"जावास्क्रिप्ट में `console.time` का उपयोग करके परफॉरमेंस को मापो","<script>console.time('my-timer'); for(let i=0;i<1000;i++){} console.timeEnd('my-timer');</script>"
"Flask में एक API बनाओ जो एक JSON ऑब्जेक्ट लौटाए","from flask import Flask, jsonify\napp = Flask(__name__)\n@app.route('/api/user')\ndef get_user():\n    user_data = {'name': 'Amit', 'city': 'Lucknow'}\n    return jsonify(user_data)"
"जावास्क्रिप्ट `fetch` का उपयोग करके एक Flask API से डेटा प्राप्त करो","<p id='user-name'></p><script>fetch('/api/user').then(response => response.json()).then(data => { document.getElementById('user-name').innerText = data.name; });</script>"
"Flask में एक HTML टेम्पलेट को रेंडर करो","from flask import Flask, render_template\napp = Flask(__name__)\n@app.route('/')\ndef index():\n    return render_template('index.html')"
"Flask से एक वेरिएबल को HTML टेम्पलेट में पास करो","from flask import render_template\n@app.route('/profile')\ndef profile():\n    username = 'Amit'\n    return render_template('profile.html', user=username)"
"Jinja2 टेम्पलेट में एक वेरिएबल को डिस्प्ले करो","""\n<h1>Welcome, {{ user }}!</h1>"""
"Jinja2 टेम्पलेट में một लिस्ट पर `for` लूप चलाओ","""\n<ul>\n{% for item in item_list %}\n    <li>{{ item }}</li>\n{% endfor %}\n</ul>"""
"Flask से एक लिस्ट को टेम्पलेट में पास करो","from flask import render_template\n@app.route('/items')\ndef show_items():\n    my_items = ['Apple', 'Banana', 'Cherry']\n    return render_template('items.html', item_list=my_items)"
"Jinja2 टेम्पलेट में `if` स्टेटमेंट का उपयोग करो","""{% if user_is_logged_in %}\n    <p>Welcome back!</p>\n{% else %}\n    <p>Please log in.</p>\n{% endif %}"""
"Flask में GET मेथड से फॉर्म डेटा प्राप्त करो","from flask import request\n@app.route('/search')\ndef search():\n    query = request.args.get('q')\n    return f'You searched for: {query}'"
"एक HTML फॉर्म बनाओ जो GET रिक्वेस्ट भेजे","<form action='/search' method='get'><input name='q' type='text' placeholder='Search...'><button type='submit'>Search</button></form>"
"Flask में POST मेथड से फॉर्म डेटा प्राप्त करो","from flask import request\n@app.route('/login', methods=['GET', 'POST'])\ndef login():\n    if request.method == 'POST':\n        username = request.form['username']\n        return f'Welcome, {username}'\n    return '<form method=""post""><input name=""username""><button>Login</button></form>'"
"एक HTML फॉर्म बनाओ जो POST रिक्वेस्ट भेजे","<form action='/login' method='post'><input name='username' placeholder='Username'><button type='submit'>Login</button></form>"
"एक सिंपल काउंटर के लिए Flask API बनाओ","from flask import Flask, jsonify\ncount = 0\napp = Flask(__name__)\n@app.route('/api/increment')\ndef increment_count():\n    global count\n    count += 1\n    return jsonify({'new_count': count})"
"जावास्क्रिप्ट से काउंटर API को कॉल करो और वैल्यू दिखाओ","<p>Server Clicks: <span id='server-count'>0</span></p><button onclick=""fetch('/api/increment').then(r=>r.json()).then(d=>document.getElementById('server-count').innerText=d.new_count);"">Increment on Server</button>"
"Flask में CSS जैसी स्टैटिक फाइलों को सर्व करने का तरीका","<link rel='stylesheet' href='{{ url_for('static', filename='style.css') }}'>"
"Flask में एक यूज़र को दूसरे पेज पर रीडायरेक्ट करो","from flask import redirect, url_for\n@app.route('/admin')\ndef admin_page():\n    return redirect(url_for('home_page'))"
"पैरामीटर लेने वाली एक पाइथन API बनाओ","from flask import request, jsonify\n@app.route('/api/greet')\ndef greet_api():\n    name = request.args.get('name', 'Guest')\n    return jsonify({'greeting': f'Hello, {name}!'})"
"पैरामीटर के साथ जावास्क्रिप्ट से API को कॉल करो","<script>fetch('/api/greet?name=Amit').then(r=>r.json()).then(d=>console.log(d.greeting));</script>"
"Flask ऐप में एक टेक्स्ट फाइल पढ़ो और दिखाओ","@app.route('/file-content')\ndef read_file():\n    with open('data.txt', 'r') as f:\n        content = f.read()\n    return content"
"बिना पेज रीलोड किए AJAX से एक फॉर्म सबमिट करो","<form id='ajax-form'><input name='message' id='msg-input'></form><button onclick=""fetch('/submit-ajax', {method:'POST', body:new FormData(document.getElementById('ajax-form'))});"">Submit via AJAX</button>"
"Flask में AJAX रिक्वेस्ट को हैंडल करो","from flask import request\n@app.route('/submit-ajax', methods=['POST'])\ndef handle_ajax():\n    message = request.form['message']\n    # Process the message...\n    return 'OK'"
"Jinja2 में टेम्पलेट इनहेरिटेंस का उपयोग करो","""\n<html><body>{% block content %}{% endblock %}</body></html>\n\n{% extends 'layout.html' %}\n{% block content %}<h1>Hello</h1>{% endblock %}"""
"एक API बनाओ जो सर्वर से वर्तमान समय लौटाए","import datetime\nfrom flask import jsonify\n@app.route('/api/time')\ndef get_time():\n    return jsonify({'time': datetime.datetime.now().isoformat()})"
"जावास्क्रिप्ट से सर्वर का समय प्राप्त करो और दिखाओ","<p id='server-time'></p><script>fetch('/api/time').then(r=>r.json()).then(d=>document.getElementById('server-time').innerText=d.time);</script>"
"Flask में URL पैरामीटर के साथ एक रूट बनाओ","@app.route('/post/<int:post_id>')\ndef show_post(post_id):\n    return f'Showing post number {post_id}'"
"Jinja2 में डिक्शनरी पर लूप चलाओ","""{% for key, value in my_dict.items() %}\n    <p>{{ key }}: {{ value }}</p>\n{% endfor %}"""
"Flask से डिक्शनरी को टेम्पलेट में पास करो","from flask import render_template\n@app.route('/dict')\ndef show_dict():\n    user_info = {'name':'Amit', 'role':'Developer'}\n    return render_template('dict.html', my_dict=user_info)"
"Flask में 404 एरर हैंडलर बनाओ","from flask import render_template\n@app.errorhandler(404)\ndef page_not_found(e):\n    return render_template('404.html'), 404"
"एक सिंपल Flask To-Do ऐप का बैकएंड (आइटम जोड़ना)","from flask import Flask, request, jsonify\napp = Flask(__name__)\ntodos = []\n@app.route('/add_todo', methods=['POST'])\ndef add_todo():\n    todo = request.json.get('item')\n    todos.append(todo)\n    return jsonify({'status': 'success'})"
"एक To-Do ऐप का फ्रंटएंड (आइटम जोड़ना)","<ul id='todo-list'></ul><input id='todo-item'><button onclick=""fetch('/add_todo', {method:'POST', body:JSON.stringify({item:document.getElementById('todo-item').value}), headers:{'Content-Type':'application/json'}});"">Add</button>"
"Flask में एक फाइल अपलोड हैंडलर बनाओ","from flask import request\n@app.route('/upload', methods=['POST'])\ndef upload_file():\n    f = request.files['file']\n    f.save('uploaded_file.txt')\n    return 'File uploaded'"
"HTML फाइल अपलोड फॉर्म","<form action='/upload' method='post' enctype='multipart/form-data'><input type='file' name='file'><input type='submit'></form>"
"Flask में कुकी (cookie) सेट करो","from flask import make_response\n@app.route('/set-cookie')\ndef set_cookie():\n    resp = make_response('Cookie set!')\n    resp.set_cookie('userID', '123')\n    return resp"
"Flask में कुकी पढ़ो","from flask import request\n@app.route('/get-cookie')\ndef get_cookie():\n    user_id = request.cookies.get('userID')\n    return f'User ID is {user_id}'"
"Flask में सेशन (session) का उपयोग करो","from flask import Flask, session\napp = Flask(__name__)\napp.secret_key = 'some_secret_key'\n@app.route('/login')\ndef login():\n    session['username'] = 'amit'"
"Jinja2 में फ़िल्टर का उपयोग करो","""<p>{{ my_text|upper }}</p> """
"Flask में GET और POST दोनों मेथड को एक ही रूट पर हैंडल करो","@app.route('/contact', methods=['GET', 'POST'])\ndef contact():\n    if request.method == 'POST':\n        # Handle form submission\n        return 'Thanks for your message!'\n    # Show the form\n    return render_template('contact.html')"
"एक लाइव सर्च के लिए Flask API बनाओ","@app.route('/api/search')\ndef live_search():\n    query = request.args.get('q')\n    # Search logic...\n    results = ['Result1', 'Result2']\n    return jsonify(results)"
"जावास्क्रिप्ट से लाइव सर्च फंक्शनैलिटी बनाओ","<input onkeyup=""fetch('/api/search?q='+this.value).then(r=>r.json()).then(d=>console.log(d))"">"
"पाइथन `requests` से अपनी ही Flask API को कॉल करो","import requests\nresponse = requests.get('http://127.0.0.1:5000/api/data')"
"एक To-Do ऐप के लिए सभी आइटम्स लौटाने वाला API","@app.route('/api/todos')\ndef get_todos():\n    return jsonify(todos)"
"जावास्क्रिप्ट से पेज लोड होने पर सभी To-Do आइटम्स को फेच करो","<ul id='list'></ul><script>window.onload = () => fetch('/api/todos').then(r=>r.json()).then(d=>d.forEach(i=>{...}));</script>"
"Flask में एक डायनामिक इमेज जनरेटर बनाओ","from PIL import Image, ImageDraw\n@app.route('/image')\ndef generate_image():\n    img = Image.new('RGB', (100, 30), color='red')\n    # ... serve image ... "
"Flask में एक लॉगआउट रूट बनाओ","from flask import session, redirect, url_for\n@app.route('/logout')\ndef logout():\n    session.pop('username', None)\n    return redirect(url_for('index'))"
"Jinja2 में मैक्रो (macro) का उपयोग करो","""{% macro render_input(name) %}<input name='{{ name }}'>{% endmacro %}\n{{ render_input('username') }}"""
"एक API बनाओ जो JSON डेटा ले और उसे प्रोसेस करे","@app.route('/api/process', methods=['POST'])\ndef process_data():\n    data = request.json\n    processed_data = data['value'] * 2\n    return jsonify({'result': processed_data})"
"एक API बनाओ जो डेटाबेस से डेटा लाए (स्यूडो-कोड)","@app.route('/users/<int:id>')\ndef get_user(id):\n    user = db.get_user_by_id(id)\n    return jsonify(user.to_dict())"
"एक क्लिक काउंटर बनाओ जो सर्वर पर स्टेट सेव करे","@app.route('/click', methods=['POST'])\ndef click():\n    session['clicks'] = session.get('clicks', 0) + 1\n    return jsonify({'clicks': session['clicks']})"
"पाइथन में एक async फंक्शन बनाओ","import asyncio\nasync def my_async_function():\n    print('Hello')\n    await asyncio.sleep(1)\n    print('World')"
"Flask में एक बैकग्राउंड टास्क चलाओ (स्यूडो-कोड)","def long_task():\n    # ... heavy processing ...\n\n@app.route('/start-task')\ndef start_task():\n    thread = Thread(target=long_task)\n    thread.start()\n    return 'Task started!'"
"पाइथन में एक खाली 'Car' क्लास बनाओ","class Car:\n    pass"
"एक 'Car' क्लास का ऑब्जेक्ट (instance) बनाओ","class Car:\n    pass\n\nmy_car = Car()"
"एक 'Car' क्लास में `__init__` मेथड बनाओ जो brand और model ले","class Car:\n    def __init__(self, brand, model):\n        self.brand = brand\n        self.model = model"
"एक ऑब्जेक्ट के इंस्टेंस एट्रिब्यूट्स को एक्सेस करो","class Car:\n    def __init__(self, brand):\n        self.brand = brand\n\ncar1 = Car('Tata')\nprint(car1.brand)"
"एक क्लास में एक इंस्टेंस मेथड 'display_info' बनाओ","class Car:\n    def __init__(self, brand):\n        self.brand = brand\n    def display_info(self):\n        return f'This is a {self.brand} car.'"
"एक ऑब्जेक्ट का इंस्टेंस मेथड कॉल करो","class Car:\n    def __init__(self, brand):\n        self.brand = brand\n    def display_info(self):\n        return f'A {self.brand}'\n\nmy_car = Car('Honda')\nprint(my_car.display_info())"
"एक क्लास एट्रिब्यूट 'wheels' बनाओ","class Car:\n    wheels = 4 # This is a class attribute"
"एक क्लास एट्रिब्यूट को एक्सेस करो","class Car:\n    wheels = 4\n\nprint(Car.wheels)"
"एक 'ElectricCar' क्लास बनाओ जो 'Car' क्लास से इनहेरिट करे","class Car:\n    def drive(self):\n        return 'Driving a regular car.'\n\nclass ElectricCar(Car):\n    pass"
"पैरेंट क्लास के एक मेथड को ओवरराइड करो","class Animal:\n    def speak(self):\n        return 'Some generic animal sound.'\n\nclass Dog(Animal):\n    def speak(self):\n        return 'Woof!'"
"`super()` फंक्शन का उपयोग करके पैरेंट क्लास के मेथड को कॉल करो","class Car:\n    def __init__(self, brand):\n        self.brand = brand\n\nclass ElectricCar(Car):\n    def __init__(self, brand, battery_size):\n        super().__init__(brand)\n        self.battery_size = battery_size"
"एक प्राइवेट एट्रिब्यूट `__speed` बनाओ","class Car:\n    def __init__(self):\n        self.__speed = 0 # Private attribute with double underscore"
"एक प्राइवेट एट्रिब्यूट के लिए एक गेटर (getter) मेथड बनाओ","class Car:\n    def __init__(self, speed):\n        self.__speed = speed\n    def get_speed(self):\n        return self.__speed"
"एक प्राइवेट एट्रिब्यूट के लिए एक सेटर (setter) मेथड बनाओ","class Car:\n    def __init__(self, speed):\n        self.__speed = speed\n    def set_speed(self, new_speed):\n        self.__speed = new_speed"
"एनकैप्सुलेशन (Encapsulation) का एक उदाहरण दिखाओ","class BankAccount:\n    def __init__(self, balance):\n        self.__balance = balance\n    def withdraw(self, amount):\n        if amount <= self.__balance:\n            self.__balance -= amount\n            return True\n        return False"
"एक स्टेटिक मेथड `@staticmethod` बनाओ","class MathUtils:\n    @staticmethod\n    def add(a, b):\n        return a + b\n\nresult = MathUtils.add(5, 3)"
"एक क्लास मेथड `@classmethod` बनाओ","class Car:\n    wheels = 4\n    @classmethod\n    def get_wheel_count(cls):\n        return f'All cars have {cls.wheels} wheels.'"
"`__str__` मेथड को डिफाइन करो ताकि ऑब्जेक्ट को प्रिंट करने पर एक रीडेबल स्ट्रिंग मिले","class Car:\n    def __init__(self, brand):\n        self.brand = brand\n    def __str__(self):\n        return f'This is a car of {self.brand} brand.'"
"एक 'mymodule.py' फाइल बनाओ जिसमें एक फंक्शन हो","""# This code would be in a file named mymodule.py\ndef greet(name):\n    return f'Hello, {name}'"""
"अपने बनाए हुए 'mymodule' को इम्पोर्ट करो","import mymodule"
"अपने बनाए हुए मॉड्यूल से एक फंक्शन इस्तेमाल करो","import mymodule\nprint(mymodule.greet('Amit'))"
"एक मॉड्यूल से सिर्फ एक ख़ास फंक्शन इम्पोर्ट करो","from mymodule import greet"
"इम्पोर्ट किए गए ख़ास फंक्शन का इस्तेमाल करो","from mymodule import greet\nprint(greet('Amit'))"
"एक मॉड्यूल को एक छोटे नाम (alias) से इम्पोर्ट करो","import datetime as dt\nnow = dt.datetime.now()"
"`if __name__ == '__main__':` का उपयोग करो ताकि कोड इम्पोर्ट होने पर न चले","def main():\n    print('This will only run when the script is executed directly.')\n\nif __name__ == '__main__':\n    main()"
"एक सिंपल पाइथन पैकेज का स्ट्रक्चर बनाओ","""my_package/\n|-- __init__.py\n|-- module1.py\n|-- module2.py"""
"एक पैकेज से एक मॉड्यूल इम्पोर्ट करो","from my_package import module1"
"पॉलीमॉर्फिज्म (Polymorphism) का एक उदाहरण दिखाओ","class Cat:\n    def speak(self): return 'Meow'\nclass Dog:\n    def speak(self): return 'Woof'\n\nanimals = [Cat(), Dog()]\nfor animal in animals:\n    print(animal.speak())"
"`@property` डेकोरेटर का उपयोग करके एक गेटर बनाओ","class Person:\n    def __init__(self, name):\n        self._name = name\n    @property\n    def name(self):\n        return self._name"
"`@property` के साथ एक सेटर बनाओ","class Person:\n    def __init__(self, name):\n        self._name = name\n    @property\n    def name(self):\n        return self._name\n    @name.setter\n    def name(self, value):\n        self._name = value"
"एक सिंपल डाटा क्लास `@dataclass` बनाओ","from dataclasses import dataclass\n\n@dataclass\nclass Point:\n    x: int\n    y: int"
"एक `__repr__` मेथड बनाओ","class Car:\n    def __repr__(self):\n        return 'Car()' "
"चेक करो कि एक ऑब्जेक्ट किसी क्लास का इंस्टेंस है या नहीं","class Car: pass\nmy_car = Car()\nisinstance(my_car, Car)"
"एक क्लास के सभी एट्रिब्यूट्स और मेथड्स को लिस्ट करो","class Car:\n    def drive(self): pass\ndir(Car)"
"एक abstract क्लास बनाओ","from abc import ABC, abstractmethod\n\nclass Shape(ABC):\n    @abstractmethod\n    def area(self): pass"
"मल्टीप्ल इनहेरिटेंस का एक उदाहरण","class A: pass\nclass B: pass\nclass C(A, B): pass"
"एक जेनरेटर फंक्शन बनाओ","def countdown(n):\n    while n > 0:\n        yield n\n        n -= 1"
"एक डेकोरेटर बनाओ जो फंक्शन के समय को मापे","import time\ndef timer(func):\n    def wrapper(*args, **kwargs):\n        start = time.time()\n        result = func(*args, **kwargs)\n        end = time.time()\n        print(f'{func.__name__} took {end-start} seconds')\n        return result\n    return wrapper"
"एक `__len__` मेथड बनाओ","class MyList:\n    def __init__(self, items):\n        self.items = items\n    def __len__(self):\n        return len(self.items)"
"पाइथन में एक enum बनाओ","from enum import Enum\nclass Color(Enum):\n    RED = 1\n    GREEN = 2"
"एक `__eq__` मेथड से दो ऑब्जेक्ट्स की तुलना करो","class Point:\n    def __init__(self, x):\n        self.x = x\n    def __eq__(self, other):\n        return self.x == other.x"
"एक Named Tuple बनाओ","from collections import namedtuple\nPoint = namedtuple('Point', ['x', 'y'])"
"एक Python पैकेज को `pip` से इनस्टॉल करो","pip install requests"
"इनस्टॉल किए गए पैकेजेज को `requirements.txt` में सेव करो","pip freeze > requirements.txt"
"एक `__init__.py` फाइल का उपयोग","""# In my_package/__init__.py:\nprint('Package is being initialized')"""
"एक मॉड्यूल के अंदर से दूसरे मॉड्यूल को इम्पोर्ट करो","""# In module1.py:\nimport module2"""
"एक स्लॉटेड क्लास `__slots__` बनाओ","class Point:\n    __slots__ = ['x', 'y']\n    def __init__(self, x, y):\n        self.x = x\n        self.y = y"
"एक सिंपल कॉन्टेक्स्ट मेनेजर `@contextmanager` बनाओ","from contextlib import contextmanager\n\n@contextmanager\ndef my_file(filename):\n    f = open(filename, 'w')\n    try:\n        yield f\n    finally:\n        f.close()"
"एक `__call__` मेथड बनाओ","class Adder:\n    def __call__(self, x, y):\n        return x + y"
"`fetch` का उपयोग करके एक API से डेटा प्राप्त करो","<script>fetch('https://jsonplaceholder.typicode.com/todos/1').then(response => response.json()).then(data => console.log(data));</script>"
"API से fetched डेटा को एक div में दिखाओ","<div id='data-container'></div><script>fetch('https://jsonplaceholder.typicode.com/users/1').then(res=>res.json()).then(data=>document.getElementById('data-container').innerText=data.name);</script>"
"बटन क्लिक पर API से डेटा लोड करो","<button onclick=""fetch('https://jsonplaceholder.typicode.com/posts/1').then(res=>res.json()).then(data=>document.getElementById('post').innerHTML = `<h3>${data.title}</h3><p>${data.body}</p>`);"">Load Post</button><div id='post'></div>"
"`async/await` सिंटैक्स का उपयोग करके डेटा फेच करो","<script>async function getData() { const response = await fetch('https://jsonplaceholder.typicode.com/users/2'); const data = await response.json(); console.log(data.username); } getData();</script>"
"`fetch` में `.catch()` का उपयोग करके एरर को हैंडल करो","<script>fetch('https://jsonplaceholder.typicode.com/invalid-url').then(response => response.json()).catch(error => console.error('Error fetching data:', error));</script>"
"API कॉल के दौरान एक 'Loading...' मैसेज दिखाओ","<div id='loader'></div><button onclick=""document.getElementById('loader').innerText='Loading...'; fetch('https://jsonplaceholder.typicode.com/posts/2').then(res=>res.json()).finally(()=>document.getElementById('loader').innerText='');"">Fetch Data</button>"
"API से एक लिस्ट फेच करो और उसे एक ul में दिखाओ","<ul id='userList'></ul><script>fetch('https://jsonplaceholder.typicode.com/users').then(res=>res.json()).then(users=>{ let listItems = ''; users.forEach(user => { listItems += `<li>${user.name}</li>`; }); document.getElementById('userList').innerHTML = listItems; });</script>"
"एक POST रिक्वेस्ट में JSON डेटा भेजो","<script>fetch('https://jsonplaceholder.typicode.com/posts', { method: 'POST', body: JSON.stringify({ title: 'foo', body: 'bar', userId: 1 }), headers: { 'Content-type': 'application/json; charset=UTF-8' } }).then(res=>res.json()).then(json=>console.log(json));</script>"
"एक PUT रिक्वेस्ट से एक पोस्ट को अपडेट करो","<script>fetch('https://jsonplaceholder.typicode.com/posts/1', { method: 'PUT', body: JSON.stringify({ id: 1, title: 'new title' }), headers: { 'Content-type': 'application/json' } }).then(res=>res.json()).then(json=>console.log(json));</script>"
"एक DELETE रिक्वेस्ट से एक पोस्ट को डिलीट करो","<script>fetch('https://jsonplaceholder.typicode.com/posts/1', { method: 'DELETE' });</script>"
"API से एक इमेज का URL फेच करो और उसे दिखाओ","<img id='apiImage' width='150'><script>fetch('https://jsonplaceholder.typicode.com/photos/1').then(res=>res.json()).then(data=>document.getElementById('apiImage').src=data.thumbnailUrl);</script>"
"API रिक्वेस्ट में एक कस्टम हेडर भेजो","<script>fetch('https://api.example.com/data', { headers: { 'X-Custom-Header': 'MyValue' } });</script>"
"XMLHTTPRequest (XHR) का उपयोग करके डेटा फेच करो","<p id='xhr-data'></p><script>const xhr = new XMLHttpRequest(); xhr.open('GET', 'https://jsonplaceholder.typicode.com/users/3'); xhr.onload = function() { document.getElementById('xhr-data').innerText = JSON.parse(this.responseText).name; }; xhr.send();</script>"
"हर 10 सेकंड में API से डेटा रिफ्रेश करो","<div id='liveData'>Fetching...</div><script>setInterval(() => { fetch('https://jsonplaceholder.typicode.com/todos/1').then(res=>res.json()).then(data=>document.getElementById('liveData').innerText = data.title) }, 10000);</script>"
"JSON एरे से हर आइटम के लिए एक div बनाओ","<div id='container'></div><script>const data=[{text:'Item A'}, {text:'Item B'}]; data.forEach(item => { const div = document.createElement('div'); div.innerText=item.text; document.getElementById('container').appendChild(div); });</script>"
"एक लोकल JSON स्ट्रिंग को पार्स करो और नाम दिखाओ","<script>const jsonText = '{\""name\"":\""Amit\"", \""city\"":\""Lucknow\""}'; const user = JSON.parse(jsonText); alert(user.name);</script>"
"एक जावास्क्रिप्ट ऑब्जेक्ट को JSON स्ट्रिंग में बदलो","<script>const user = {name:'Amit', city:'Lucknow'}; const jsonText = JSON.stringify(user); alert(jsonText);</script>"
"एक डायनामिक सर्च बार बनाओ जो टाइप करते ही API को कॉल करे","<input placeholder='Search users...' onkeyup=""fetch('https://jsonplaceholder.typicode.com/users?username='+this.value).then(res=>res.json()).then(data=>console.log(data))"">"
"API कॉल के दौरान बटन को डिसेबल करो","<button id='loadBtn' onclick=""this.disabled=true; this.innerText='Loading...'; fetch('https://jsonplaceholder.typicode.com/users').finally(() => { this.disabled=false; this.innerText='Load Data'; });"">Load Data</button>"
"API से डेटा फेच करके एक HTML टेबल बनाओ","<table id='dataTable' border='1'><tr><th>ID</th><th>Name</th></tr></table><script>fetch('https://jsonplaceholder.typicode.com/users').then(res=>res.json()).then(users=>{ let table=document.getElementById('dataTable'); users.forEach(user=>{ let row=table.insertRow(); row.insertCell(0).innerHTML=user.id; row.insertCell(1).innerHTML=user.name; }); });</script>"
"एक API से कमेंट्स लोड करो और उन्हें दिखाओ","<div id='comments'></div><button onclick=""fetch('https://jsonplaceholder.typicode.com/comments?postId=1').then(res=>res.json()).then(data=>{...})"">Load Comments</button>"
"चेक करो कि API से रिस्पॉन्स ok है या नहीं","<script>fetch('https://jsonplaceholder.typicode.com/posts/1').then(response => { if (!response.ok) { throw new Error('Network response was not ok'); } return response.json(); }).then(data => console.log(data));</script>"
"एक API से सभी फोटो एलबम को ड्रॉपडाउन में दिखाओ","<select id='albums'></select><script>fetch('https://jsonplaceholder.typicode.com/albums').then(r=>r.json()).then(d=>d.forEach(a=>{let opt=document.createElement('option'); opt.text=a.title; document.getElementById('albums').add(opt);}));</script>"
"यूज़र इनपुट के आधार पर API को कॉल करो","<input id='userId' value='1'><button onclick=""fetch('https://jsonplaceholder.typicode.com/users/'+document.getElementById('userId').value).then(r=>r.json()).then(d=>alert(d.name));"">Get User</button>"
"एक साथ कई API कॉल्स करो","<script>Promise.all([fetch('.../posts/1'), fetch('.../comments/1')]).then(responses => Promise.all(responses.map(res => res.json()))).then(data => console.log(data));</script>"
"एक फोटो और उसका टाइटल API से लोड करो","<figure id='photoFig'><img id='photoImg' width='150'><figcaption id='photoTitle'></figcaption></figure><script>fetch('.../photos/2').then(r=>r.json()).then(d=>{document.getElementById('photoImg').src=d.thumbnailUrl; document.getElementById('photoTitle').innerText=d.title;});</script>"
"API से मिले डेटा को localStorage में सेव करो","<script>fetch('.../users/4').then(r=>r.json()).then(d=>localStorage.setItem('cachedUser', JSON.stringify(d)));</script>"
"अगर डेटा localStorage में है तो उसे इस्तेमाल करो, नहीं तो API से फेच करो","<script>if(localStorage.getItem('cachedUser')){...} else { fetch('...'); }</script>"
"एक बटन बनाओ जो API से नया फैक्ट फेच करे","<p id='fact'></p><button onclick=""fetch('https://catfact.ninja/fact').then(r=>r.json()).then(d=>document.getElementById('fact').innerText=d.fact);"">New Cat Fact</button>"
"AJAX का उपयोग करके एक सिंपल वेदर ऐप UI अपडेट करो","<div id='weather'>Weather: ...</div><script>fetch('.../weather?q=Lucknow').then(r=>r.json()).then(d=>document.getElementById('weather').innerText=`Weather: ${d.weather[0].main}`);</script>"
"API से मिले एरर मैसेज को यूज़र को दिखाओ","<p id='errorMsg' style='color:red;'></p><script>fetch('.../invalid').catch(err=>document.getElementById('errorMsg').innerText = 'Could not fetch data!');</script>"
"फॉर्म सबमिट करके डेटा को POST करो और जवाब दिखाओ","<form onsubmit=""...fetch('.../posts', {method:'POST', body:new FormData(this)}); return false;""><input name='title'><button>Submit</button></form>"
"पेज स्क्रॉल के अंत में पहुँचने पर और डेटा लोड करो (infinite scroll)","<script>window.onscroll = function() { if ((window.innerHeight + window.scrollY) >= document.body.offsetHeight) { fetchMoreData(); } };</script>"
"API से एक प्रोग्रेस बार को अपडेट करो","<progress id='pBar' max='100'></progress><script>fetch('...').then(res => { document.getElementById('pBar').value=100; });</script>"
"एक क्लिक करने योग्य लिस्ट बनाओ जो क्लिक पर और डिटेल्स फेच करे","<ul id='postList'></ul><script>fetch('.../posts').then(r=>r.json()).then(posts=>posts.forEach(p=>{let li=document.createElement('li'); li.innerText=p.title; li.onclick=()=>fetchPostDetails(p.id); document.getElementById('postList').appendChild(li);}));</script>"
"एक सर्च फॉर्म बनाओ जो सबमिट होने पर API कॉल करे","<form onsubmit=""fetch('...?q='+this.query.value); return false;""><input name='query'><button>Search</button></form>"
"एक API से यूज़र का प्रोफाइल कार्ड बनाओ","<div id='profileCard'></div><script>fetch('.../users/5').then(r=>r.json()).then(u=>document.getElementById('profileCard').innerHTML=`<h3>${u.name}</h3><p>${u.email}</p>`);</script>"
"एक रैंडम डॉग इमेज फेच करने के लिए बटन","<img id='dogImg' width='200'><button onclick=""fetch('https://dog.ceo/api/breeds/image/random').then(r=>r.json()).then(d=>document.getElementById('dogImg').src=d.message);"">New Dog</button>"
"API से मिले markdown टेक्स्ट को HTML में बदलो","<script>fetch('.../readme.md').then(r=>r.text()).then(markdown => { /* use a library to convert markdown to html */ });</script>"
"एक बिटकॉइन प्राइस टिकर बनाओ","<p>BTC Price: <span id='btc'></span></p><script>setInterval(()=>fetch('https://api.coindesk.com/v1/bpi/currentprice.json').then(r=>r.json()).then(d=>document.getElementById('btc').innerText=d.bpi.USD.rate), 60000)</script>"
"एक बटन बनाओ जो यूज़र की IP एड्रेस दिखाए","<p id='ip'></p><button onclick=""fetch('https://api.ipify.org?format=json').then(r=>r.json()).then(d=>document.getElementById('ip').innerText=d.ip);"">Show My IP</button>"
"देशों की एक लिस्ट ड्रॉपडाउन में दिखाओ","<select id='countries'></select><script>fetch('https://restcountries.com/v3.1/all').then(r=>r.json()).then(d=>{d.forEach(c=>{...});});</script>"
"API से मिले यूज़र डेटा को एक फॉर्म में भरो","<form><input id='name'></form><script>fetch('.../users/1').then(r=>r.json()).then(d=>document.getElementById('name').value=d.name);</script>"
"एक बटन बनाओ जो सर्वर से वर्तमान समय प्राप्त करे","<p id='serverTime'></p><button onclick=""fetch('http://worldtimeapi.org/api/timezone/Asia/Kolkata').then(r=>r.json()).then(d=>document.getElementById('serverTime').innerText=d.datetime);"">Get Server Time</button>"
"API से एक लिस्ट फेच करो और उसे अल्फाबेटिकली सॉर्ट करो","<ul id='sortedList'></ul><script>fetch('.../users').then(r=>r.json()).then(users=>users.sort((a,b)=>a.name.localeCompare(b.name)).forEach(u=>{...}));</script>"
"एक टू-डू आइटम को 'completed' मार्क करने के लिए PATCH रिक्वेस्ट भेजो","<script>fetch('.../todos/1', { method:'PATCH', body:JSON.stringify({completed:true}), headers:{'Content-type':'application/json'} });</script>"
"API से एक GIF इमेज लोड करो","<img id='gif'><script>fetch('https://api.giphy.com/v1/gifs/random?api_key=...').then(r=>r.json()).then(d=>document.getElementById('gif').src=d.data.images.original.url);</script>"
"API से मिले डेटा को फ़िल्टर करो","<script>fetch('.../posts').then(r=>r.json()).then(posts => { const filtered = posts.filter(p => p.userId === 1); console.log(filtered); });</script>"
"एक लिस्ट के पहले तीन आइटम्स को स्लाइस करो","numbers = [0, 1, 2, 3, 4, 5]\nfirst_three = numbers[0:3]"
"एक लिस्ट के आखिरी दो आइटम्स को स्लाइस करो","numbers = [0, 1, 2, 3, 4, 5]\nlast_two = numbers[-2:]"
"लिस्ट कॉम्प्रिहेंशन का उपयोग करके नंबरों का स्क्वायर बनाओ","numbers = [1, 2, 3, 4]\nsquares = [n**2 for n in numbers]"
"एक लिस्ट को अल्फाबेटिकली सॉर्ट करो","words = ['banana', 'apple', 'cherry']\nwords.sort()"
"एक लिस्ट को रिवर्स करो","items = ['a', 'b', 'c']\nitems.reverse()"
"`enumerate` का उपयोग करके इंडेक्स और वैल्यू के साथ लूप चलाओ","fruits = ['apple', 'banana', 'cherry']\nfor index, fruit in enumerate(fruits):\n    print(f'Index: {index}, Fruit: {fruit}')"
"एक डिक्शनरी की सभी keys प्राप्त करो","person = {'name': 'Amit', 'age': 25}\nkeys = person.keys()"
"एक डिक्शनरी की सभी values प्राप्त करो","person = {'name': 'Amit', 'age': 25}\nvalues = person.values()"
"एक डिक्शनरी के सभी की-वैल्यू पेयर्स प्राप्त करो","person = {'name': 'Amit', 'age': 25}\nitems = person.items()"
"`get()` मेथड का उपयोग करके एक वैल्यू प्राप्त करो","person = {'name': 'Amit'}\nname = person.get('name', 'Not Found')"
"चेक करो कि एक की (key) डिक्शनरी में मौजूद है या नहीं","person = {'name': 'Amit'}\nif 'age' in person:\n    print('Age exists')\nelse:\n    print('Age does not exist')"
"डुप्लीकेट वैल्यू हटाने के लिए एक सेट (set) बनाओ","numbers = [1, 2, 2, 3, 3, 3]\nunique_numbers = set(numbers)"
"एक सेट में एक आइटम जोड़ो","my_set = {1, 2}\nmy_set.add(3)"
"दो सेट्स का यूनियन निकालो","set1 = {1, 2, 3}\nset2 = {3, 4, 5}\nunion_set = set1.union(set2)"
"दो सेट्स का इंटरसेक्शन निकालो","set1 = {1, 2, 3}\nset2 = {3, 4, 5}\nintersection_set = set1.intersection(set2)"
"एक फाइल को पढ़ने के लिए खोलो","file = open('myfile.txt', 'r')"
"एक फाइल का पूरा कंटेंट पढ़ो","with open('myfile.txt', 'r') as f:\n    content = f.read()"
"एक फाइल को लाइन-बाय-लाइन पढ़ो","with open('myfile.txt', 'r') as f:\n    for line in f:\n        print(line.strip())"
"एक फाइल में लिखने के लिए उसे खोलो","file = open('newfile.txt', 'w')"
"एक फाइल में एक लाइन लिखो","with open('newfile.txt', 'w') as f:\n    f.write('Hello, this is a new file!')"
"एक फाइल के अंत में एक नई लाइन जोड़ो","with open('logfile.txt', 'a') as f:\n    f.write('New log entry.\\n')"
"`with` स्टेटमेंट का उपयोग करके एक फाइल को सुरक्षित रूप से खोलो","with open('data.txt', 'r') as f:\n    data = f.read()"
"डिफ़ॉल्ट आर्गुमेंट वाला एक फंक्शन बनाओ","def greet(name='Guest'):\n    print(f'Hello, {name}')"
"कीवर्ड आर्गुमेंट का उपयोग करके एक फंक्शन को कॉल करो","def person_info(name, age):\n    print(f'{name} is {age} years old.')\nperson_info(age=25, name='Amit')"
"`*args` का उपयोग करके एक फंक्शन बनाओ जो कितने भी आर्गुमेंट ले सके","def add_all(*numbers):\n    return sum(numbers)"
"`**kwargs` का उपयोग करके एक फंक्शन बनाओ जो कीवर्ड आर्गुमेंट ले सके","def print_info(**details):\n    for key, value in details.items():\n        print(f'{key}: {value}')"
"एक सिंपल लैम्ब्डा (lambda) फंक्शन बनाओ","double = lambda x: x * 2\nprint(double(5))"
"`map` और `lambda` का उपयोग करके एक लिस्ट के सभी आइटम्स को बदलो","numbers = [1, 2, 3, 4]\ndoubled_numbers = list(map(lambda x: x * 2, numbers))"
"`filter` और `lambda` का उपयोग करके एक लिस्ट से सिर्फ सम (even) नंबर निकालो","numbers = [1, 2, 3, 4, 5, 6]\neven_numbers = list(filter(lambda x: x % 2 == 0, numbers))"
"`.format()` मेथड का उपयोग करके एक स्ट्रिंग को फॉर्मेट करो","name = 'Amit'\nage = 25\nprint('My name is {} and I am {} years old.'.format(name, age))"
"पाइथन में एक मल्टी-लाइन स्ट्रिंग बनाओ","my_string = 'This is the first line.\\nThis is the second line.'"
"`try...except` का उपयोग करके एक एरर को हैंडल करो","try:\n    result = 10 / 0\nexcept ZeroDivisionError:\n    print('Error: Cannot divide by zero!')"
"`finally` ब्लॉक का उपयोग करो जो हमेशा चलता है","try:\n    f = open('file.txt', 'r')\nexcept FileNotFoundError:\n    print('File not found')\nfinally:\n    print('Execution finished.')"
"पाइथन में एक ValueError एक्सेप्शन रेज (raise) करो","x = -1\nif x < 0:\n    raise ValueError('Number cannot be negative')"
"एक लिस्ट में किसी खास इंडेक्स पर एक आइटम इंसर्ट करो","fruits = ['apple', 'cherry']\nfruits.insert(1, 'banana')"
"एक लिस्ट से दूसरे इंडेक्स वाले आइटम को हटाओ (`pop`)","fruits = ['apple', 'banana', 'cherry']\nfruits.pop(1)"
"एक लिस्ट में एक आइटम कितनी बार आया है, यह काउंट करो","numbers = [1, 2, 2, 3, 2]\ncount_of_2 = numbers.count(2)"
"एक डिक्शनरी से `pop()` मेथड का उपयोग करके एक आइटम हटाओ","person = {'name': 'Amit', 'age': 25}\nage = person.pop('age')"
"चेक करो कि एक स्ट्रिंग किसी खास शब्द से शुरू होती है या नहीं","text = 'Hello World'\nprint(text.startswith('Hello'))"
"चेक करो कि एक स्ट्रिंग किसी खास शब्द पर खत्म होती है या नहीं","filename = 'document.txt'\nprint(filename.endswith('.txt'))"
"एक स्ट्रिंग के दोनों ओर से व्हाइटस्पेस हटाओ","text = '  hello world  '\nclean_text = text.strip()"
"एक मल्टी-लाइन स्ट्रिंग को लाइनों की एक लिस्ट में बदलो","text = 'line one\\nline two'\nlines = text.splitlines()"
"एक मॉड्यूल से सिर्फ एक फंक्शन इम्पोर्ट करो","from math import sqrt"
"`os` मॉड्यूल का उपयोग करके वर्तमान वर्किंग डायरेक्टरी पता करो","import os\ncurrent_dir = os.getcwd()"
"`os` मॉड्यूल का उपयोग करके एक डायरेक्टरी की सभी फाइलें और फोल्डर लिस्ट करो","import os\nall_items = os.listdir('.') # '.' मतलब वर्तमान डायरेक्टरी"
"`datetime` मॉड्यूल का उपयोग करके वर्तमान तारीख और समय प्राप्त करो","import datetime\nnow = datetime.datetime.now()"
"एक डेट ऑब्जेक्ट को एक खास फॉर्मेट में स्ट्रिंग के रूप में दिखाओ","import datetime\nnow = datetime.datetime.now()\nprint(now.strftime('%d-%m-%Y %H:%M:%S'))"
"एक सिंपल 'Person' क्लास बनाओ जिसमें एक मेथड हो","class Person:\n    def __init__(self, name):\n        self.name = name\n    def introduce(self):\n        return f'My name is {self.name}'"
"एक क्लास बनाओ जो दूसरी क्लास से इनहेरिट करे (Inheritance)","class Animal:\n    def speak(self):\n        return 'Some sound'\nclass Dog(Animal):\n    def speak(self):\n        return 'Woof!'"
"`csv` मॉड्यूल का उपयोग करके एक CSV फाइल पढ़ो","import csv\nwith open('data.csv', 'r') as file:\n    reader = csv.reader(file)\n    for row in reader:\n        print(row)"
"पाइथन में 'Hello, World!' प्रिंट करो","print('Hello, World!')"
"एक वेरिएबल 'x' बनाओ और उसे मान 10 दो","x = 10"
"एक वेरिएबल की वैल्यू प्रिंट करो","name = 'Amit'\nprint(name)"
"एक इंटीजर (integer) वेरिएबल बनाओ","age = 25"
"एक स्ट्रिंग (string) वेरिएबल बनाओ","city = 'Lucknow'"
"एक फ्लोट (float) वेरिएबल बनाओ","price = 99.95"
"एक बूलियन (True/False) वेरिएबल बनाओ","is_active = True"
"पाइथन में दो नंबरों को जोड़ो","result = 5 + 3\nprint(result)"
"पाइथन में दो नंबरों को घटाओ","result = 10 - 4"
"पाइथन में दो नंबरों को गुणा करो","product = 7 * 6"
"पाइथन में दो नंबरों को विभाजित करो","quotient = 20 / 4"
"पाइथन में एक सिंगल-लाइन कमेंट लिखो","# This is a comment"
"पाइथन में एक मल्टी-लाइन कमेंट लिखो","""\nThis is a\nmulti-line comment.\n"""
"यूज़र से उसका नाम पूछो और प्रिंट करो","name = input('Enter your name: ')\nprint('Hello, ' + name)"
"दो स्ट्रिंग्स को एक साथ जोड़ो","first_name = 'Amit'\nlast_name = 'Saka'\nfull_name = first_name + ' ' + last_name"
"`f-string` का उपयोग करके एक वेरिएबल को स्ट्रिंग में डालो","name = 'Amit'\nprint(f'Hello, {name}!')"
"एक स्ट्रिंग को इंटीजर में बदलो","str_num = '123'\nnum = int(str_num)"
"एक इंटीजर को स्ट्रिंग में बदलो","num = 123\nstr_num = str(num)"
"एक फंक्शन बनाओ जो 'Hello' प्रिंट करे","def greet():\n    print('Hello')"
"एक फंक्शन को कॉल करो","def greet():\n    print('Hello')\ngreet()"
"एक पैरामीटर लेने वाला फंक्शन बनाओ","def greet(name):\n    print(f'Hello, {name}')"
"एक फंक्शन बनाओ जो दो नंबरों का योग लौटाए (return)","def add(a, b):\n    return a + b"
"पाइथन में तीन फलों की एक लिस्ट बनाओ","fruits = ['apple', 'banana', 'cherry']"
"एक लिस्ट का दूसरा आइटम एक्सेस करो","fruits = ['apple', 'banana', 'cherry']\nprint(fruits[1])"
"एक लिस्ट की लम्बाई पता करो","fruits = ['apple', 'banana', 'cherry']\nprint(len(fruits))"
"एक लिस्ट के अंत में एक आइटम जोड़ो (`append`)","fruits = ['apple']\nfruits.append('banana')"
"एक लिस्ट से 'banana' को हटाओ (`remove`)","fruits = ['apple', 'banana', 'cherry']\nfruits.remove('banana')"
"पाइथन में `if` स्टेटमेंट का उपयोग करो","age = 20\nif age >= 18:\n    print('You are an adult.')"
"पाइथन में `if-else` स्टेटमेंट का उपयोग करो","x = 10\nif x > 5:\n    print('Greater than 5')\nelse:\n    print('Not greater than 5')"
"पाइथन में `if-elif-else` का उपयोग करो","num = 0\nif num > 0:\n    print('Positive')\nelif num < 0:\n    print('Negative')\nelse:\n    print('Zero')"
"`for` लूप का उपयोग करके 0 से 4 तक गिनती प्रिंट करो","for i in range(5):\n    print(i)"
"`for` लूप का उपयोग करके एक लिस्ट के सभी आइटम्स को प्रिंट करो","fruits = ['apple', 'banana', 'cherry']\nfor fruit in fruits:\n    print(fruit)"
"`while` लूप का उपयोग करके 1 से 3 तक गिनती करो","i = 1\nwhile i <= 3:\n    print(i)\n    i += 1"
"लूप को बीच में रोकने के लिए `break` का उपयोग करो","for i in range(10):\n    if i == 5:\n        break\n    print(i)"
"लूप में एक इटरेशन को छोड़ने के लिए `continue` का उपयोग करो","for i in range(5):\n    if i == 2:\n        continue\n    print(i)"
"एक डिक्शनरी बनाओ जिसमें नाम और उम्र हो","person = {'name': 'Amit', 'age': 25}"
"एक डिक्शनरी से 'name' की वैल्यू प्राप्त करो","person = {'name': 'Amit', 'age': 25}\nprint(person['name'])"
"एक डिक्शनरी में एक नया की-वैल्यू पेयर जोड़ो","person = {'name': 'Amit'}\nperson['city'] = 'Lucknow'"
"एक टपल (tuple) बनाओ","colors = ('red', 'green', 'blue')"
"पाइथन में 'math' मॉड्यूल को इम्पोर्ट करो","import math"
"पाइथन में 'random' मॉड्यूल को इम्पोर्ट करो","import random"
"'math' मॉड्यूल से स्क्वायर रूट निकालो","import math\nprint(math.sqrt(16))"
"एक स्ट्रिंग को अपरकेस में बदलो","text = 'hello'\nprint(text.upper())"
"एक स्ट्रिंग को लोअरकेस में बदलो","text = 'HELLO'\nprint(text.lower())"
"एक स्ट्रिंग में एक सबस्ट्रिंग को ढूंढो (`find`)","text = 'hello world'\nprint(text.find('world'))"
"बूलियन लॉजिक `and` ऑपरेटर का उपयोग करो","if 5 > 1 and 10 > 5:\n    print('Both conditions are true')"
"बूलियन लॉजिक `or` ऑपरेटर का उपयोग करो","if 5 > 10 or 10 > 5:\n    print('At least one condition is true')"
"बूलियन लॉजिक `not` ऑपरेटर का उपयोग करो","is_raining = False\nif not is_raining:\n    print('It is not raining')"
"चेक करो कि एक आइटम लिस्ट में है या नहीं","fruits = ['apple', 'banana']\nif 'apple' in fruits:\n    print('Yes, apple is in the list!')"
"पेज का HTML लोड होने के बाद एक फंक्शन चलाओ (DOMContentLoaded)","<script>document.addEventListener('DOMContentLoaded', function() { console.log('DOM fully loaded and parsed'); });</script>"
"पेज पूरी तरह (इमेज सहित) लोड होने के बाद एक फंक्शन चलाओ (window.onload)","<script>window.onload = function() { console.log('Page including images and stylesheets is fully loaded'); };</script>"
"फॉर्म सबमिट होने पर डिफ़ॉल्ट एक्शन को रोको और एक फंक्शन चलाओ","<form id='myForm'><input type='text' value='test'><button type='submit'>Submit</button></form><script>document.getElementById('myForm').addEventListener('submit', function(event){ event.preventDefault(); alert('Default form submission prevented!'); });</script>"
"एक इनपुट फील्ड में की (key) छोड़ने पर कुछ करो (keyup)","<input onkeyup=""console.log('Key up event fired!')"" placeholder='Type something'>"
"कोई भी की दबाने पर उसका कोड पता करो (keydown)","<script>document.body.addEventListener('keydown', function(event) { console.log('Key pressed: ' + event.key + ', Key code: ' + event.keyCode); });</script>"
"`event` ऑब्जेक्ट का उपयोग करके माउस की क्लिक पोजीशन पता करो","<div onclick=""alert('Clicked at X: ' + event.clientX + ', Y: ' + event.clientY)"" style='width:100px; height:50px; border:1px solid; background:#f0f0f0;'>Click anywhere in this box</div>"
"`event.target` का उपयोग करके क्लिक किए गए एलिमेंट का टैग नाम पता करो","<button onclick=""alert('You clicked on a ' + event.target.tagName)"">Click Me</button><p onclick=""alert('You clicked on a ' + event.target.tagName)"">Click Me Too</p>"
"इवेंट बबलिंग को रोकने के लिए `stopPropagation()` का उपयोग करो","<div onclick=""alert('Div clicked. This will not fire if paragraph is clicked.')"" style='padding:20px; border:1px solid;'><p onclick=""event.stopPropagation(); alert('Paragraph clicked')"">Click me</p></div>"
"जावास्क्रिप्ट से एक इमेज एलिमेंट बनाओ और उसे बॉडी में जोड़ो","<script>const newImage = document.createElement('img'); newImage.src = 'https://via.placeholder.com/100'; newImage.alt = 'A placeholder image'; document.body.appendChild(newImage);</script>"
"एक एलिमेंट को दूसरे एलिमेंट से पहले इंसर्ट करो","<div id='containerDiv'><p id='pTwo'>Paragraph Two</p></div><script>const pOne = document.createElement('p'); pOne.innerText='Paragraph One'; const pTwo = document.getElementById('pTwo'); document.getElementById('containerDiv').insertBefore(pOne, pTwo);</script>"
"`insertAdjacentHTML` का उपयोग करके 'h3' टैग इंसर्ट करो","<div id='insertBox' style='border:1px solid;'></div><script>document.getElementById('insertBox').insertAdjacentHTML('beforeend', '<h3>This is a new heading</h3>');</script>"
"किसी एलिमेंट के पैरेंट एलिमेंट का बैकग्राउंड बदलो","<div id='parentDiv' style='padding:10px;'><p onclick=""this.parentElement.style.backgroundColor='yellow'"">Click me to highlight my parent</p></div>"
"किसी एलिमेंट के सभी चिल्ड्रेन का बॉर्डर लगाओ","<div id='parentWithChildren' style='border:1px solid; padding:5px;'><p>Child A</p><span>Child B</span></div><script>const children = document.getElementById('parentWithChildren').children; for(let child of children){child.style.border='1px solid red';}</script>"
"किसी एलिमेंट के अगले सिबलिंग का टेक्स्ट बदलो","<ul><li id='item_1'>One</li><li id='item_2'>Two</li></ul><button onclick=""document.getElementById('item_1').nextElementSibling.innerText='Item 2 Changed'"">Change Next Sibling</button>"
"किसी एलिमेंट के पिछले सिबलिंग को सिलेक्ट करो","<ul><li>One</li><li id='item_current'>Two</li></ul><script>var previousElement = document.getElementById('item_current').previousElementSibling;</script>"
"HTML `data-*` एट्रिब्यूट को जावास्क्रिप्ट से एक्सेस करो","<div id='userProfile' data-user-id='12345' data-user-role='admin'>Amit</div><script>const userDiv = document.getElementById('userProfile'); alert('User role is: ' + userDiv.dataset.userRole);</script>"
"जावास्क्रिप्ट से एक `data-*` एट्रिब्यूट को बदलो","<p id='dataPara' data-status='active'>Status</p><button onclick=""document.getElementById('dataPara').dataset.status = 'inactive';"">Set to Inactive</button>"
"पेज स्क्रॉल करने पर कंसोल में कुछ लॉग करो","<div style='height:1000px;'>Scroll this page</div><script>window.addEventListener('scroll', () => console.log('You are scrolling!'));</script>"
"माउस मूव करने पर उसका रंग बदलने वाला div बनाओ","<div onmousemove=""this.style.backgroundColor = 'lightblue'"" onmouseout=""this.style.backgroundColor = 'transparent'"" style='width:100px; height:100px; border:1px solid;'>Move mouse here</div>"
"इनपुट फील्ड पर फोकस और ब्लर इवेंट्स को ट्रैक करो","<input type='text' onfocus=""console.log('Input focused!')"" onblur=""console.log('Input blurred!')"" placeholder='Click in and out of this field'>"
"पेज का आकार बदलने पर विंडो की चौड़ाई दिखाओ (resize event)","<p>Window width: <span id='width'></span></p><script>window.addEventListener('resize', () => document.getElementById('width').innerText = window.innerWidth);</script>"
"डबल-क्लिक इवेंट का उपयोग करो","<button ondblclick=""alert('Double clicked!')"">Double Click Me</button>"
"एलिमेंट बनाने और एट्रिब्यूट सेट करने के लिए एक फंक्शन बनाओ","<script>function createImage(src) { const img = document.createElement('img'); img.setAttribute('src', src); document.body.appendChild(img); } createImage('https://via.placeholder.com/50');</script>"
"HTML `template` टैग का उपयोग करो","<template id='myTemplate'><p>This is a template.</p></template><button onclick=""var content = document.getElementById('myTemplate').content.cloneNode(true); document.body.appendChild(content);"">Use Template</button>"
"पेज से एक एलिमेंट को पूरी तरह से हटाओ","<p id='removeMe'>I will be removed.</p><button onclick=""document.getElementById('removeMe').remove()"">Remove Paragraph</button>"
"एक एलिमेंट की सभी CSS क्लासेज़ को दिखाओ","<div class='class1 class2' id='classDiv'></div><script>alert(document.getElementById('classDiv').classList);</script>"
"पेस्ट इवेंट को डिटेक्ट करो","<input type='text' onpaste=""alert('You pasted text!')"" placeholder='Paste something here'>"
"कॉपी इवेंट को डिटेक्ट करो","<p oncopy=""alert('You copied this text!')"">Copy this text.</p>"
"कट इवेंट को डिटेक्ट करो","<input type='text' oncut=""alert('You cut text!')"" value='Cut this text'>"
"एक एलिमेंट को क्लोन (clone) करो","<p id='original'>Original</p><button onclick=""var clone = document.getElementById('original').cloneNode(true); document.body.appendChild(clone);"">Clone Paragraph</button>"
"`document.createElement` से एक div बनाओ और उसे स्टाइल करो","<script>const myDiv = document.createElement('div'); myDiv.style.width='50px'; myDiv.style.height='50px'; myDiv.style.background='coral'; document.body.appendChild(myDiv);</script>"
"एक बटन बनाओ जो पेज का टाइटल बदले","<button onclick=""document.title = 'New Title at ' + new Date().toLocaleTimeString();"">Change Title</button>"
"किसी एलिमेंट के अंदर के HTML को पूरी तरह से बदलो","<div id='replaceBox'><p>Old content</p></div><button onclick=""document.getElementById('replaceBox').innerHTML='<h2>New Content</h2>';"">Replace Content</button>"
"पेज लोड होने पर इनपुट फील्ड में ऑटोमेटिकली फोकस करो","<input type='text' id='focusInput'><script>window.onload = function(){ document.getElementById('focusInput').focus(); };</script>"
"एलिमेंट के `innerHTML` और `outerHTML` में अंतर दिखाओ","<div id='testDiv'><p>Content</p></div><script>console.log(document.getElementById('testDiv').innerHTML); console.log(document.getElementById('testDiv').outerHTML);</script>"
"एक इनपुट की वैल्यू को दूसरे इनपुट में रियल-टाइम में कॉपी करो","<input placeholder='Type here...' onkeyup=""document.getElementById('outputInput').value=this.value""><input id='outputInput' placeholder='...and it appears here' readonly>"
"चेक करो कि एक एलिमेंट में कोई एट्रिब्यूट है या नहीं","<div id='attrDiv' title='hello'></div><script>alert(document.getElementById('attrDiv').hasAttribute('title'));</script>"
"एक एलिमेंट से एट्रिब्यूट हटाओ","<a id='linkToRemove' href='#'>Link</a><button onclick=""document.getElementById('linkToRemove').removeAttribute('href')"">Remove Link</button>"
"जावास्क्रिप्ट से CSS की `:hover` स्टेट को बदलो","<style>.my-btn:hover{background:blue; color:white;}</style><button class='my-btn'>Hover me</button>"
"कीबोर्ड से 'Enter' दबाने पर फॉर्म सबमिट करो","<input type='text' onkeydown=""if(event.key === 'Enter'){ alert('Enter was pressed!'); }"">"
"पेज को रीलोड करने के लिए एक बटन बनाओ","<button onclick='location.reload()'>Reload Page</button>"
"यूज़र से उसका स्क्रीन कलर डेप्थ पता करो","<script>alert('Your screen color depth is: ' + screen.colorDepth);</script>"
"एक लिंक पर क्लिक होने से रोको","<a href='https://google.com' onclick=""event.preventDefault(); alert('Navigation stopped!')"">Go to Google (Prevented)</a>"
"पेज पर कहीं भी क्लिक करने पर अलर्ट दिखाओ","<script>document.body.addEventListener('click', () => alert('Body was clicked!'), true);</script>"
"यह पता करो कि क्लिक करते समय Shift की दबी थी या नहीं","<button onclick=""alert('Shift key pressed: ' + event.shiftKey)"">Click or Shift+Click</button>"
"एक div को फुलस्क्रीन करने के लिए बटन बनाओ","<div id='fullscreenDiv'>Content</div><button onclick=""document.getElementById('fullscreenDiv').requestFullscreen()"">Go Fullscreen</button>"
"पेज की स्क्रॉल पोजीशन पता करो","<div style='height:1000px'></div><script>window.onscroll = () => console.log('Scroll Y: ' + window.scrollY);</script>"
"एक एलिमेंट तक स्मूथली स्क्रॉल करो","<div id='target' style='margin-top:800px;'>Target</div><button onclick=""document.getElementById('target').scrollIntoView({behavior: 'smooth'})"">Scroll to Target</button>"
"पेज की दृश्यता (visibility) बदलने पर डिटेक्ट करो","<script>document.addEventListener('visibilitychange', () => document.title = document.visibilityState);</script>"
"पाँच फलों का एक जावास्क्रिप्ट एरे बनाओ","<script>const fruits = ['Apple', 'Banana', 'Orange', 'Mango', 'Grapes'];</script>"
"एक एरे का तीसरा एलिमेंट एक्सेस करो","<script>const fruits = ['Apple', 'Banana', 'Orange']; console.log(fruits[2]);</script>"
"एक एरे की लम्बाई पता करो","<script>const fruits = ['Apple', 'Banana', 'Orange']; console.log(fruits.length);</script>"
"`for` लूप का उपयोग करके एक एरे के सभी आइटम्स को प्रिंट करो","<script>const fruits = ['Apple', 'Banana', 'Cherry']; for(let i=0; i<fruits.length; i++){ console.log(fruits[i]); }</script>"
"`forEach` लूप का उपयोग करके एक एरे के आइटम्स को प्रिंट करो","<script>const fruits = ['Apple', 'Banana', 'Cherry']; fruits.forEach(function(fruit) { console.log(fruit); });</script>"
"एक एरे के अंत में एक नया आइटम जोड़ो (`push`)","<script>const fruits = ['Apple', 'Banana']; fruits.push('Orange'); console.log(fruits);</script>"
"एक एरे के अंत से एक आइटम हटाओ (`pop`)","<script>const fruits = ['Apple', 'Banana', 'Orange']; fruits.pop(); console.log(fruits);</script>"
"एक व्यक्ति का नाम और शहर वाला एक जावास्क्रिप्ट ऑब्जेक्ट बनाओ","<script>const person = { name: 'Amit', city: 'Lucknow' };</script>"
"एक ऑब्जेक्ट की 'name' प्रॉपर्टी को एक्सेस करो","<script>const person = {name: 'Amit', city: 'Lucknow'}; console.log(person.name);</script>"
"ब्रैकेट नोटेशन का उपयोग करके एक ऑब्जेक्ट की प्रॉपर्टी को एक्सेस करो","<script>const person = {name: 'Amit', city: 'Lucknow'}; console.log(person['city']);</script>"
"एक ऑब्जेक्ट में एक नई 'age' प्रॉपर्टी जोड़ो","<script>const person = {name: 'Amit'}; person.age = 25; console.log(person);</script>"
"दो नंबरों को जोड़ने वाला एक फंक्शन बनाओ","<script>function addNumbers(a, b) { return a + b; } console.log(addNumbers(5, 10));</script>"
"एक कंडीशन चेक करो कि कोई व्यक्ति वोट दे सकता है या नहीं (`if-else`)","<script>let age = 20; if (age >= 18) { console.log('Can vote'); } else { console.log('Cannot vote'); }</script>"
"ग्रेड देने के लिए `if-else if-else` का उपयोग करो","<script>let score = 85; if (score >= 90) { console.log('Grade A'); } else if (score >= 80) { console.log('Grade B'); } else { console.log('Grade C'); }</script>"
"`switch` स्टेटमेंट का उपयोग करके दिन का नाम बताओ","<script>let day = 2; switch(day) { case 1: console.log('Monday'); break; case 2: console.log('Tuesday'); break; default: console.log('Other day'); }</script>"
"टर्नेरी ऑपरेटर का उपयोग करके एक कंडीशन चेक करो","<script>let isMember = true; let price = isMember ? '$5.00' : '$10.00'; console.log('Price is ' + price);</script>"
"`map` मेथड का उपयोग करके एक एरे के सभी नंबरों को दोगुना करो","<script>const numbers = [1, 2, 3, 4]; const doubled = numbers.map(num => num * 2); console.log(doubled);</script>"
"`filter` मेथड का उपयोग करके 10 से बड़े नंबरों को ढूंढो","<script>const numbers = [5, 12, 8, 20, 1]; const largeNumbers = numbers.filter(num => num > 10); console.log(largeNumbers);</script>"
"`reduce` मेथड का उपयोग करके एक एरे के सभी नंबरों का योग निकालो","<script>const numbers = [1, 2, 3, 4, 5]; const sum = numbers.reduce((total, num) => total + num, 0); console.log('Sum is ' + sum);</script>"
"`find` मेथड का उपयोग करके 'Amit' नाम वाले व्यक्ति को ढूंढो","<script>const users = [{name:'Ria', age:22}, {name:'Amit', age:25}]; const user = users.find(u => u.name === 'Amit'); console.log(user);</script>"
"चेक करो कि एक एरे में 'Banana' शामिल है या नहीं","<script>const fruits = ['Apple', 'Banana', 'Mango']; console.log(fruits.includes('Banana'));</script>"
"एक स्ट्रिंग को स्पेस के आधार पर एक एरे में बदलो (`split`)","<script>const sentence = 'Hello world this is a test'; const words = sentence.split(' '); console.log(words);</script>"
"एक एरे के आइटम्स को कॉमा से जोड़कर एक स्ट्रिंग बनाओ (`join`)","<script>const words = ['Hello', 'World']; const sentence = words.join(', '); console.log(sentence);</script>"
"एक स्ट्रिंग को अपरकेस में बदलो","<script>let text = 'hello world'; console.log(text.toUpperCase());</script>"
"एक स्ट्रिंग को लोअरकेस में बदलो","<script>let text = 'HELLO WORLD'; console.log(text.toLowerCase());</script>"
"एक स्ट्रिंग का एक हिस्सा निकालो (`slice`)","<script>let text = 'HelloWorld'; console.log(text.slice(0, 5));</script>"
"एक स्ट्रिंग में एक शब्द को दूसरे शब्द से बदलो (`replace`)","<script>let text = 'I like cats. Cats are great.'; let newText = text.replace('cats', 'dogs'); console.log(newText);</script>"
"0 और 1 के बीच एक रैंडम नंबर जेनरेट करो","<script>console.log(Math.random());</script>"
"एक नंबर को निकटतम छोटे पूर्णांक में बदलो (`floor`)","<script>console.log(Math.floor(4.9));</script>"
"एक नंबर को निकटतम बड़े पूर्णांक में बदलो (`ceil`)","<script>console.log(Math.ceil(4.1));</script>"
"एक नंबर को निकटतम पूर्णांक में राउंड करो (`round`)","<script>console.log(Math.round(4.5));</script>"
"एक लिस्ट में से सबसे बड़ा नंबर ढूंढो (`max`)","<script>console.log(Math.max(10, 20, 5, -1));</script>"
"वर्तमान तारीख और समय प्राप्त करो","<script>const now = new Date(); console.log(now.toString());</script>"
"एक तारीख में से सिर्फ साल निकालो","<script>const d = new Date(); console.log('Year: ' + d.getFullYear());</script>"
"एक तारीख में से सिर्फ महीना निकालो (0-11)","<script>const d = new Date(); console.log('Month: ' + d.getMonth());</script>"
"`while` लूप का उपयोग करके 0 से 2 तक गिनती करो","<script>let i = 0; while (i < 3) { console.log(i); i++; }</script>"
"`do...while` लूप का उपयोग करो","<script>let i = 0; do { console.log(i); i++; } while (i < 3);</script>"
"लूप को बीच में रोकने के लिए `break` का उपयोग करो","<script>for(let i=0; i<5; i++){ if(i===3){break;} console.log(i); }</script>"
"लूप में एक इटरेशन को छोड़ने के लिए `continue` का उपयोग करो","<script>for(let i=0; i<5; i++){ if(i===2){continue;} console.log(i); }</script>"
"एक ऑब्जेक्ट बनाओ जिसमें एक मेथड (फंक्शन) हो","<script>const car = {brand:'Tata', start: function(){return 'Engine started';}}; console.log(car.start());</script>"
"दो स्ट्रिंग्स को एक साथ जोड़ो","<script>let str1 = 'Hello'; let str2 = ' World'; console.log(str1 + str2);</script>"
"चेक करो कि एक वेरिएबल का टाइप 'string' है या नहीं","<script>let name = 'Amit'; console.log(typeof name === 'string');</script>"
"एक ऑब्जेक्ट की सभी keys को एक एरे में प्राप्त करो","<script>const person = {name:'Amit', age:25}; console.log(Object.keys(person));</script>"
"एक ऑब्जेक्ट की सभी values को एक एरे में प्राप्त करो","<script>const person = {name:'Amit', age:25}; console.log(Object.values(person));</script>"
"एक स्ट्रिंग को नंबर में बदलो (`parseInt`)","<script>let strNum = '123'; let num = parseInt(strNum); console.log(num + 7);</script>"
"एक नंबर को स्ट्रिंग में बदलो","<script>let num = 123; let strNum = num.toString(); console.log(strNum + ' is a string');</script>"
"एक ऑब्जेक्ट को डीप कॉपी (deep copy) करो","<script>const original = {a:1, b:{c:2}}; const copy = JSON.parse(JSON.stringify(original));</script>"
"ES6 क्लास का उपयोग करके एक 'Car' क्लास बनाओ","<script>class Car { constructor(brand) { this.brand = brand; } } const myCar = new Car('Tata');</script>"
"ES6 Destructuring का उपयोग करके ऑब्जेक्ट से वैल्यू निकालो","<script>const person = {name:'Amit', age:25}; const {name, age} = person; console.log(name);</script>"
"एक टेक्स्ट इनपुट बनाओ जिसे भरना ज़रूरी (required) हो","<input type='text' required>"
"एक ईमेल इनपुट बनाओ जिसमें ईमेल फॉर्मेट ज़रूरी हो","<input type='email' required placeholder='name@example.com'>"
"एक पासवर्ड फील्ड बनाओ जिसमें कम से कम 8 कैरेक्टर ज़रूरी हों","<input type='password' minlength='8' required>"
"एक 6 अंकों के पिन कोड के लिए इनपुट फील्ड बनाओ","<input type='text' pattern='[0-9]{6}' title='6-digit PIN code' required>"
"एक फ़ोन नंबर इनपुट बनाओ जो 10 अंकों का हो","<input type='tel' pattern='[0-9]{10}' title='10-digit mobile number' required>"
"एक नंबर इनपुट बनाओ जिसमें सिर्फ 18 से 60 तक की वैल्यू डाली जा सके","<input type='number' min='18' max='60' placeholder='Age'>"
"एक सर्च इनपुट फील्ड बनाओ","<input type='search' placeholder='Search...'>"
"एक URL इनपुट फील्ड बनाओ","<input type='url' placeholder='https://example.com' required>"
"फॉर्म के लिए एक फील्डसेट (fieldset) और लीजेंड (legend) बनाओ","<fieldset><legend>Personal Info</legend><label>Name:</label><input type='text'></fieldset>"
"एक 'I agree to the terms' चेकबॉक्स बनाओ जिसे टिक करना ज़रूरी हो","<input type='checkbox' required> I agree to the terms"
"एक सबमिट बटन बनाओ जो तब तक डिसेबल रहे जब तक चेकबॉक्स टिक न हो","<input type='checkbox' onchange=""document.getElementById('submitBtn').disabled = !this.checked;""><button id='submitBtn' type='submit' disabled>Submit</button>"
"एक फॉर्म बनाओ जो सबमिट करने पर पासवर्ड्स के मैच होने को चेक करे","<form onsubmit=""if(document.getElementById('p1').value !== document.getElementById('p2').value){alert('Passwords do not match!'); return false;}""><input id='p1' type='password'><input id='p2' type='password'><input type='submit'></form>"
"एक इनपुट फील्ड बनाओ जो रियल-टाइम में बताए कि पासवर्ड कमजोर है या मजबूत","<input type='password' oninput=""document.getElementById('strength').innerText = this.value.length < 8 ? 'Weak' : 'Strong';""><p>Strength: <span id='strength'></span></p>"
"एक टेक्स्ट इनपुट बनाओ जिसमें अधिकतम 50 कैरेक्टर की लिमिट हो","<input type='text' maxlength='50'>"
"एक फाइल इनपुट बनाओ जो सिर्फ इमेज (jpeg, png) स्वीकार करे","<input type='file' accept='image/jpeg, image/png'>"
"हफ्ते का कोई दिन चुनने के लिए इनपुट फील्ड बनाओ","<input type='week'>"
"महीना और साल चुनने के लिए इनपुट फील्ड बनाओ","<input type='month'>"
"समय चुनने के लिए इनपुट फील्ड बनाओ","<input type='time'>"
"एक फॉर्म बनाओ जिसमें autofocus वाला इनपुट फील्ड हो","<form><input type='text' autofocus placeholder='Cursor will be here'></form>"
"एक readonly टेक्स्ट फील्ड बनाओ जिसे बदला न जा सके","<input type='text' value='This is readonly' readonly>"
"एक फॉर्म में 'novalidate' एट्रिब्यूट का उपयोग करो ताकि ब्राउज़र की डिफ़ॉल्ट वैलिडेशन बंद हो जाए","<form novalidate>...</form>"
"एक टेक्स्टएरिया बनाओ जिसमें 5 रो और 30 कॉलम हों","<textarea rows='5' cols='30'></textarea>"
"एक इनपुट फील्ड में रियल-टाइम में कैरेक्टर काउंट दिखाओ","<input oninput=""document.getElementById('char-count').innerText = this.value.length""><p>Characters: <span id='char-count'>0</span></p>"
"एक रेंज स्लाइडर बनाओ जो 0 से 100 तक जाए और वैल्यू दिखाए","<input type='range' min='0' max='100' value='50' oninput=""this.nextElementSibling.innerText=this.value""><span>50</span>"
"एक सबमिट बटन बनाओ जो क्लिक होने पर अपना टेक्स्ट 'Submitting...' में बदल दे","<button type='submit' onclick=""this.innerText='Submitting...';"">Submit</button>"
"एक फॉर्म बनाओ जिसमें छिपा हुआ (hidden) इनपुट फील्ड हो","<form><input type='hidden' name='userId' value='123'></form>"
"एक फॉर्म के सभी इनपुट को क्लियर करने के लिए रीसेट बटन बनाओ","<form><input type='text'><input type='reset' value='Clear Form'></form>"
"एक इनपुट फील्ड बनाओ जो सिर्फ अपरकेस अक्षर स्वीकार करे","<input type='text' style='text-transform:uppercase;'>"
"एक div को contenteditable बनाकर उसे एक सिंपल टेक्स्ट एडिटर बनाओ","<div contenteditable='true' style='border: 1px solid black; min-height: 50px;'>Type here...</div>"
"एक फॉर्म बनाओ जिसके सबमिट होने पर एक कन्फर्मेशन मैसेज आए","<form onsubmit=""return confirm('Are you sure you want to submit?');"">...</form>"
"एक बटन बनाओ जो एक फॉर्म को जावास्क्रिप्ट से सबमिट करे","<form id='myForm'>...</form><button onclick=""document.getElementById('myForm').submit()"">Submit with JS</button>"
"एक इनपुट फील्ड के लिए मल्टीपल वैलिडेशन पैटर्न सेट करो","<input type='text' pattern='[A-Za-z0-9]{6,}' title='Minimum 6 letters or numbers'>"
"एक बटन बनाओ जो एक डिसेबल्ड फील्ड को इनेबल करे","<input id='myField' type='text' disabled><button onclick=""document.getElementById('myField').disabled=false"">Enable Input</button>"
"एक सिंपल contact form का पूरा HTML ढाँचा बनाओ","<form><fieldset><legend>Contact Us</legend><label>Name:</label><input required><label>Email:</label><input type='email' required><label>Message:</label><textarea required></textarea><button>Send</button></fieldset></form>"
"एक इनपुट फील्ड बनाओ जो खाली होने पर लाल बॉर्डर दिखाए","<input type='text' onblur=""this.style.borderColor = this.value === '' ? 'red' : 'grey'"" style='border: 1px solid grey;'>"
"जावास्क्रिप्ट से एक फॉर्म वैलिडेशन एरर मैसेज दिखाओ","<input id='name-field' type='text' onkeyup=""if(this.value.length < 3) document.getElementById('name-err').style.display='block'; else document.getElementById('name-err').style.display='none';""><p id='name-err' style='color:red; display:none;'>Name must be at least 3 characters.</p>"
"एक कलर पिकर बनाओ जो चुने हुए रंग का hex कोड दिखाए","<input type='color' oninput=""this.nextElementSibling.innerText = this.value""><span>#000000</span>"
"एक ऑटो-कम्प्लीट फीचर को बंद करने के लिए इनपुट बनाओ","<input type='text' autocomplete='off'>"
"एक ऑप्शन ग्रुप के साथ एक ड्रॉपडाउन मेन्यू बनाओ","<select><optgroup label='Swedish Cars'><option>Volvo</option></optgroup><optgroup label='German Cars'><option>Audi</option></optgroup></select>"
"एक से ज़्यादा फाइलों को अपलोड करने के लिए इनपुट बनाओ","<input type='file' multiple>"
"जावास्क्रिप्ट से एक रेडियो बटन का चेक्ड स्टेटस पता करो","<input type='radio' id='radio1' name='r'><button onclick=""alert(document.getElementById('radio1').checked)"">Is Checked?</button>"
"एक फील्ड को जावास्क्रिप्ट से 'required' के रूप में सेट करो","<input id='field1' type='text'><script>document.getElementById('field1').required = true;</script>"
"एक फॉर्म बनाओ जो एंटर की दबाने पर सबमिट न हो","<form onkeydown=""return event.key != 'Enter';"">...</form>"
"पासवर्ड और कन्फर्म पासवर्ड फील्ड बनाओ जो मैच न होने पर एरर दिखाए","<input type='password' id='pass1'><input type='password' id='pass2' onkeyup=""if(document.getElementById('pass1').value != this.value) this.style.borderColor='red'; else this.style.borderColor='green';"">"
"एक फॉर्म में रेडियो बटन के लिए डिफ़ॉल्ट रूप से एक ऑप्शन को चेक्ड रखो","<input type='radio' name='q' value='a'> A <input type='radio' name='q' value='b' checked> B"
"एक सिंपल सर्वे फॉर्म का ढाँचा बनाओ","<form><h3>Survey</h3><p>Your favorite color?</p><input type='radio' name='color'>Red<br><input type='radio' name='color'>Blue<br><button>Submit</button></form>"
"एक स्टेप एट्रिब्यूट वाला नंबर इनपुट बनाओ जो 5 के मल्टीपल में बढ़े","<input type='number' step='5'>"
"एक इनपुट फील्ड बनाओ जिसमें स्पेलचेक बंद हो","<input type='text' spellcheck='false'>"
"एक बटन बनाओ जो क्लिक होने पर फॉर्म को रीसेट करे","<form id='form1'><input value='text'></form><button onclick=""document.getElementById('form1').reset()"">Reset</button>"
"एक इनपुट फील्ड की वैल्यू को जावास्क्रिप्ट से सेट करो","<input id='input1' type='text'><script>document.getElementById('input1').value = 'Initial Value';</script>"
"एक साधारण ब्लॉग पोस्ट का पूरा HTML ढाँचा बनाओ","<!DOCTYPE html><html lang='en'><head><title>My Blog Post</title></head><body><article><h1>Blog Post Title</h1><p>Published on <time datetime='2025-09-27'>September 27, 2025</time></p><section><h2>Introduction</h2><p>This is the first paragraph.</p></section><section><h2>Conclusion</h2><p>This is the conclusion.</p></section></article></body></html>"
"एक कांटेक्ट पेज का ढाँचा बनाओ जिसमें फॉर्म और पता हो","<!DOCTYPE html><html><head><title>Contact Us</title></head><body><h2>Contact Information</h2><address>Lucknow, Uttar Pradesh<br>India</address><h2>Send us a Message</h2><form action='/submit' method='post'><input name='email' placeholder='Your Email'><textarea name='message'></textarea><button>Send</button></form></body></html>"
"एक पोर्टफोलियो प्रोजेक्ट पेज का ढाँचा बनाओ","<!DOCTYPE html><html><head><title>My Project</title></head><body><main><section><h1>Project Title</h1><img src='project-image.jpg' alt='Screenshot of the project' style='max-width:100%;'><p>This is a detailed description of my project.</p><a href='#'>Live Demo</a></section></main></body></html>"
"एक ई-कॉमर्स प्रोडक्ट पेज का ढाँचा बनाओ","<!DOCTYPE html><html><body><div style='display:flex;'><div style='flex:1;'><img src='product.png' alt='Product Image' style='width:100%;'></div><div style='flex:1; padding-left:20px;'><h1>Product Name</h1><p style='font-size:24px; color:green;'>$99.99</p><p>Product description goes here.</p><button>Add to Cart</button></div></div></body></html>"
"एक स्टाइल ब्लॉक के साथ एक HTML पेज बनाओ","<!DOCTYPE html><html><head><title>Internal CSS</title><style>body{background-color:#f0f0f0; font-family:sans-serif;} h1{color:navy;}</style></head><body><h1>This Heading is Navy</h1></body></html>"
"एक स्क्रिप्ट ब्लॉक के साथ एक HTML पेज बनाओ","<!DOCTYPE html><html><body><h2>My To-Do List</h2><ul id='myList'></ul><script>document.getElementById('myList').innerHTML += '<li>New Item from JS</li>';</script></body></html>"
"एक सामान्य लैंडिंग पेज का पूरा ढाँचा","<!DOCTYPE html><html><head><title>Landing Page</title></head><body style='text-align:center; font-family:sans-serif;'><header style='background:#333; color:white; padding:1em;'><h1>My Awesome Product</h1></header><main style='padding:2em;'><h2>It Will Change Your Life</h2><p>Sign up now to get exclusive access.</p><button style='padding:10px 20px; font-size:16px;'>Sign Up Now</button></main><footer style='padding:1em; background:#333; color:white;'><p>&copy; 2025 Awesome Inc.</p></footer></body></html>"
"एक '404 Not Found' एरर पेज का ढाँचा बनाओ","<!DOCTYPE html><html lang='en'><head><title>404 Not Found</title><style>body{text-align:center; font-family:sans-serif;}</style></head><body><h1>404</h1><h2>Page Not Found</h2><p>Sorry, the page you are looking for does not exist.</p><a href='/'>Go back to Homepage</a></body></html>"
"एक फोटो गैलरी पेज का ग्रिड-बेस्ड ढाँचा बनाओ","<!DOCTYPE html><html><head><title>Photo Gallery</title><style>.gallery{display:grid; grid-template-columns: repeat(auto-fit, minmax(150px, 1fr)); gap:10px;}</style></head><body><h1>My Gallery</h1><div class='gallery'><img src='1.jpg' alt='Image 1' style='width:100%;'><img src='2.jpg' alt='Image 2' style='width:100%;'><img src='3.jpg' alt='Image 3' style='width:100%;'></div></body></html>"
"एक FAQ पेज का ढाँचा बनाओ जिसमें 'details' टैग का उपयोग हो","<!DOCTYPE html><html><head><title>FAQ</title></head><body><h2>Frequently Asked Questions</h2><details><summary>What is an AI?</summary><p>Artificial intelligence is intelligence demonstrated by machines.</p></details><details><summary>What is HTML?</summary><p>HyperText Markup Language is the standard markup language for documents designed to be displayed in a web browser.</p></details></body></html>"
"एक टीम मेंबर्स पेज का फ्लेक्सबॉक्स-बेस्ड ढाँचा बनाओ","<!DOCTYPE html><html><body><h2 style='text-align:center;'>Our Team</h2><div class='team-container' style='display:flex; justify-content:space-around; flex-wrap:wrap;'><div class='member' style='text-align:center; margin:10px;'><img src='member1.jpg' alt='Team Member 1' style='width:100px; border-radius:50%;'><h4>Member One</h4><p>CEO</p></div><div class='member' style='text-align:center; margin:10px;'><img src='member2.jpg' alt='Team Member 2' style='width:100px; border-radius:50%;'><h4>Member Two</h4><p>Developer</p></div></div></body></html>"
"एक लॉगइन पेज बनाओ जो स्क्रीन के सेंटर में हो","<!DOCTYPE html><html><head><title>Login</title><style>body,html{height:100%; margin:0; display:flex; justify-content:center; align-items:center; background:#f1f1f1;}</style></head><body><form style='padding:20px; border:1px solid #ccc; background:white;'><h3>Login</h3><input placeholder='Username'><br><br><input placeholder='Password'><br><br><button>Log In</button></form></body></html>"
"एक सिंपल सर्च रिजल्ट्स पेज का UI बनाओ","<!DOCTYPE html><html><body><header><h1>Search Results</h1><p>Showing results for: <strong>AI</strong></p></header><div class='result'><a href='#'><h3>Artificial Intelligence - Wikipedia</h3></a><p>A description of the search result goes here...</p></div><div class='result'><a href='#'><h3>What is AI?</h3></a><p>Another description goes here...</p></div></body></html>"
"एक 'Under Construction' पेज बनाओ","<!DOCTYPE html><html><head><title>Coming Soon</title></head><body style='text-align:center; padding-top:50px; font-family:sans-serif;'><h1>🚧 Coming Soon 🚧</h1><p>Our website is currently under construction. We'll be here soon!</p></body></html>"
"एक टेस्टीमोनियल सेक्शन का लेआउट बनाओ","<section style='background:#f0f0f0; padding:20px;'><h2 style='text-align:center;'>What Our Users Say</h2><div style='display:flex; gap:20px;'><blockquote style='flex:1; border-left:3px solid #ccc; padding-left:10px;'>'This is an amazing product!'<cite>- User A</cite></blockquote><blockquote style='flex:1; border-left:3px solid #ccc; padding-left:10px;'>'I love it! Highly recommend.'<cite>- User B</cite></blockquote></div></section>"
"पेज के अंदर एक सेक्शन पर जाने वाला लिंक बनाओ","<!DOCTYPE html><html><body><nav><a href='#section-b'>Go to Section B</a></nav><div style='height:800px;'><h2 id='section-a'>Section A</h2><p>This is the first section.</p></div><div style='height:800px;'><h2 id='section-b'>Section B</h2><p>You have arrived at section B.</p></div></body></html>"
"HTML कोड में कमेंट्स के साथ एक डॉक्यूमेंट बनाओ","<!DOCTYPE html><html lang='en'><head><title>Page with Comments</title></head><body><h1>My Title</h1></body></html>"
"एक पूरा HTML पेज बनाओ जो 'main.css' और 'app.js' से लिंक्ड हो","<!DOCTYPE html><html lang='en'><head><meta charset='UTF-8'><title>My Web App</title><link rel='stylesheet' href='main.css'></head><body><main><h1>Welcome</h1></main><script src='app.js'></script></body></html>"
"एक वेबपेज का ढाँचा बनाओ जिसमें एक iframe हो जो YouTube वीडियो दिखाए","<!DOCTYPE html><html><body><h2>Embedding a YouTube Video</h2><iframe width='560' height='315' src='https://www.youtube.com/embed/dQw4w9WgXcQ' title='YouTube video player' frameborder='0' allowfullscreen></iframe></body></html>"
"एक सिंपल वेबपेज बनाओ जिसमें ऑडियो और वीडियो दोनों हों","<!DOCTYPE html><html><body><h1>Media Page</h1><h2>Audio</h2><audio controls src='sound.mp3'></audio><h2>Video</h2><video controls width='300' src='movie.mp4'></video></body></html>"
"एक खाली HTML5 पेज का पूरा ढाँचा बनाओ","<!DOCTYPE html><html lang='en'><head><meta charset='UTF-8'><meta name='viewport' content='width=device-width, initial-scale=1.0'><title>Page Title</title></head><body><h1>My First Heading</h1><p>My first paragraph.</p></body></html>"
"एक एक्सटर्नल CSS फाइल 'style.css' को लिंक करो","<link rel='stylesheet' href='style.css'>"
"एक एक्सटर्नल JS फाइल 'script.js' को body के अंत में लिंक करो","<script src='script.js'></script>"
"हेड के अंदर इंटरनल CSS का उपयोग करके body का बैकग्राउंड ग्रे करो","<head><style>body { background-color: #f0f0f0; }</style></head>"
"body के अंत में इंटरनल जावास्क्रिप्ट का उपयोग करके एक अलर्ट दिखाओ","<body><script>alert('Page Loaded!');</script></body>"
"एक हेडर, मेन और फुटर सेक्शन वाला एक पूरा पेज बनाओ","<!DOCTYPE html><html><body><header><h1>Welcome to my Website</h1></header><main><p>This is the main content.</p></main><footer><p>Copyright 2025</p></footer></body></html>"
"Google Fonts से 'Roboto' फॉन्ट को इम्पोर्ट करो","<link rel='preconnect' href='https://fonts.googleapis.com'><link rel='preconnect' href='https://fonts.gstatic.com' crossorigin><link href='https://fonts.googleapis.com/css2?family=Roboto&display=swap' rel='stylesheet'>"
"इम्पोर्ट किए गए 'Roboto' फॉन्ट को पूरी वेबसाइट पर लागू करो","<style>body { font-family: 'Roboto', sans-serif; }</style>"
"Font Awesome आइकन लाइब्रेरी को CDN से लिंक करो","<link rel='stylesheet' href='https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.2/css/all.min.css'>"
"एक Font Awesome 'user' आइकन का उपयोग करो","<i class='fas fa-user'></i>"
"एक 'About' पेज (about.html) का लिंक बनाओ","<a href='about.html'>About Us</a>"
"नेविगेशन मेन्यू के साथ एक बेसिक वेबसाइट का ढाँचा","<body><header><nav><ul><li><a href='index.html'>Home</a></li><li><a href='about.html'>About</a></li><li><a href='contact.html'>Contact</a></li></ul></nav></header><main><h1>Home Page</h1></main></body>"
"एक सर्च फॉर्म बनाओ जो GET मेथड का उपयोग करे","<form action='/search' method='get'><label for='search'>Search:</label><input name='q' id='search' type='text' placeholder='Search...'><button type='submit'>Go</button></form>"
"एक लॉगइन फॉर्म बनाओ जो POST मेथड का उपयोग करे","<form action='/login' method='post'><input name='username' placeholder='Username'><input name='password' placeholder='Password'><button type='submit'>Login</button></form>"
"SEO के लिए một मेटा डिस्क्रिप्शन टैग डालो","<meta name='description' content='This is an awesome website about AI and coding.'>"
"SEO के लिए मेटा कीवर्ड्स टैग डालो","<meta name='keywords' content='HTML, CSS, JavaScript, AI Bot, Coding Assistant'>"
"एक favicon.ico को वेबसाइट से लिंक करो","<link rel='icon' type='image/x-icon' href='/images/favicon.ico'>"
"पेज के कंटेंट को एक मेन कंटेनर div में रैप करो","<body><div class='container'><h1>Main Title</h1><p>All content goes here.</p></div></body>"
"CSS ग्रिड का उपयोग करके एक 2-कॉलम ब्लॉग लेआउट का ढाँचा बनाओ","<style>.grid-container{display:grid; grid-template-columns: 70% 30%; gap: 20px;}</style><div class='grid-container'><main>Article content...</main><aside>Sidebar...</aside></div>"
"एक पूरा HTML पेज बनाओ जो 'style.css' और 'script.js' से लिंक्ड हो","<!DOCTYPE html><html lang='en'><head><title>Complete Page</title><link rel='stylesheet' href='style.css'></head><body><h1>Hello World</h1><script src='script.js'></script></body></html>"
"जावास्क्रिप्ट का उपयोग करके एक ईमेल को वैलिडेट करो","<input type='email' id='emailInput' placeholder='test@example.com'><button onclick=""var email = document.getElementById('emailInput').value; var pattern = /\\S+@\\S+\\.\\S+/; alert('Is valid email: ' + pattern.test(email));"">Validate Email</button>"
"एक टेक्स्टएरिया बनाओ जो कैरेक्टर लिमिट पहुंचने पर वार्निंग दिखाए","<textarea maxlength='100' oninput=""var remaining = 100 - this.value.length; document.getElementById('warningMsg').style.display = remaining < 20 ? 'block' : 'none';""></textarea><p id='warningMsg' style='display:none; color:red;'>Warning: Approaching character limit!</p>"
"एक बटन बनाओ जो एक बार क्लिक होने के बाद डिसेबल हो जाए","<button onclick=""this.disabled=true; this.innerText='Processing...';"">Submit Once</button>"
"CSS का उपयोग करके एक सिंपल पाई चार्ट बनाओ","<div style='width: 100px; height: 100px; border-radius: 50%; background-image: conic-gradient(dodgerblue 0% 70%, lightgrey 70% 100%);'></div>"
"`fetch` API का उपयोग करो और एरर को हैंडल करो","<script>fetch('https://invalid-url.xyz/data').then(response => {if(!response.ok){throw new Error('Network response was not ok');}}).catch(error => console.error('Fetch error:', error));</script>"
"HTML5 `draggable` एट्रिब्यूट का उपयोग करके एक ड्रैग करने योग्य एलिमेंट बनाओ","<p draggable='true' style='border:1px solid; padding:5px; width:100px;'>Drag me</p>"
"यूज़र के ऑनलाइन या ऑफलाइन स्टेटस का पता लगाओ","<p>Your Status: <span id='status'></span></p><script>window.addEventListener('online', () => document.getElementById('status').innerText = 'Online'); window.addEventListener('offline', () => document.getElementById('status').innerText = 'Offline'); document.getElementById('status').innerText = navigator.onLine ? 'Online' : 'Offline';</script>"
"यूज़र की जियोलोकेशन (latitude, longitude) प्राप्त करो","<button onclick=""navigator.geolocation.getCurrentPosition(pos => alert('Your Latitude is: ' + pos.coords.latitude));"">Get My Location</button>"
"एक ऑडियो विज़ुअलाइज़ेशन का UI बनाओ","<canvas width='200' height='50' style='border:1px solid;'></canvas><p>Audio Visualization Canvas</p>"
"एक बटन बनाओ जो पेज को प्रिंट करे","<button onclick='window.print()'>Print this Page</button>"
"एक बटन बनाओ जो टेक्स्ट को बोले (Text-to-Speech)","<input id='speechText' value='Hello world'><button onclick=""var msg = new SpeechSynthesisUtterance(document.getElementById('speechText').value); window.speechSynthesis.speak(msg);"">Speak Text</button>"
"आइकन वाला एक अकॉर्डियन बनाओ जो खुलने/बंद होने पर बदले","<div onclick=""var icon=this.querySelector('span'); var content=this.nextElementSibling; icon.innerText=icon.innerText==='+'?'-':'+'; content.style.display=content.style.display==='block'?'none':'block';"" style='cursor:pointer;'><span style='font-weight:bold;'>+</span> Section Title</div><div style='display:none; padding-left:20px;'><p>Hidden content.</p></div>"
"एक नंबर के लिए प्लस/माइनस बटन वाला इनपुट बनाओ","<button onclick=""document.getElementById('stepper').stepDown()"">-</button><input id='stepper' type='number' value='0' style='width:40px; text-align:center;' readonly><button onclick=""document.getElementById('stepper').stepUp()"">+</button>"
"एक ब्रेडक्रंब (breadcrumb) नेविगेशन बनाओ","<div class='breadcrumbs' style='font-size:14px;'><a href='#'>Home</a> &gt; <a href='#'>Category</a> &gt; <span>Current Page</span></div>"
"एक स्टार रेटिंग बनाओ जिसमें होवर इफ़ेक्ट हो","<style>.stars span:hover, .stars span:hover ~ span {color:grey;}</style><div class='stars' style='font-size:24px; cursor:pointer; color:orange;'><span>★</span><span>★</span><span>★</span><span>★</span><span>★</span></div>"
"आज की तारीख को 'DD-MM-YYYY' फॉर्मेट में दिखाओ","<p id='formattedDate'></p><script>var d = new Date(); var dd = String(d.getDate()).padStart(2, '0'); var mm = String(d.getMonth() + 1).padStart(2, '0'); var yyyy = d.getFullYear(); document.getElementById('formattedDate').innerText = dd + '-' + mm + '-' + yyyy;</script>"
"जावास्क्रिप्ट से एक CSS वेरिएबल का मान स्लाइडर से कंट्रोल करो","<style>:root{--blur-amount: 2px;}</style><img src='image.jpg' width='200' style='filter:blur(var(--blur-amount));'><br><label>Blur:</label><input type='range' min='0' max='10' value='2' oninput=""document.documentElement.style.setProperty('--blur-amount', this.value + 'px')"">"
"मोबाइल पर नेटिव शेयर डायलॉग खोलने के लिए एक बटन बनाओ","<button onclick=""if(navigator.share){navigator.share({title: 'Web Page', text: 'Check this out!', url: window.location.href})}else{alert('Share not supported')}"">Share</button>"
"एक इमेज एडिटर का UI बनाओ जिसमें फ़िल्टर बटन्स हों","<img id='editImg' src='image.jpg' width='200' style='transition: filter 0.3s;'><br><button onclick=""document.getElementById('editImg').style.filter='grayscale(100%)'"">Grayscale</button><button onclick=""document.getElementById('editImg').style.filter='blur(2px)'"">Blur</button><button onclick=""document.getElementById('editImg').style.filter='none'"">Reset</button>"
"एक धन्यवाद मैसेज वाला कॉम्पोनेन्ट बनाओ","<div style='text-align:center; padding:20px; border: 1px solid green; background-color:#e8f5e9; border-radius:5px; font-family:sans-serif;'><h2>Thank You!</h2><p>Your submission has been received.</p></div>"
"CSS से एक कस्टम टूलटिप बनाओ","<style>.tooltip{position:relative; display:inline-block; border-bottom:1px dotted;}.tooltip .tooltiptext{visibility:hidden; width:120px; background-color:black; color:#fff; text-align:center; border-radius:6px; padding:5px; position:absolute; z-index:1; bottom:125%; left:50%; margin-left:-60px; opacity:0; transition:opacity 0.3s;}.tooltip:hover .tooltiptext{visibility:visible; opacity:1;}</style><div class='tooltip'>Hover over me<span class='tooltiptext'>This is a tooltip!</span></div>"
"एक स्नैकबार (toast) नोटिफिकेशन बनाओ जो बटन क्लिक पर दिखे","<style>#snackbar{visibility:hidden; min-width:250px; background-color:#333; color:#fff; text-align:center; border-radius:2px; padding:16px; position:fixed; z-index:1; left:50%; bottom:30px; transform:translateX(-50%);}</style><button onclick=""var x=document.getElementById('snackbar'); x.style.visibility='visible'; setTimeout(function(){ x.style.visibility='hidden';}, 3000);"">Show Snackbar</button><div id='snackbar'>This is a notification message.</div>"
"एक इमेज बनाओ जिस पर होवर करने पर एक ओवरले दिखे","<style>.container{position:relative; width:200px;}.overlay{position:absolute; top:0; bottom:0; left:0; right:0; height:100%; width:100%; opacity:0; transition:.5s ease; background-color:rgba(0,140,186,0.7);}.container:hover .overlay{opacity:1;}</style><div class='container'><img src='image.jpg' alt='Avatar' width='200'><div class='overlay'></div></div>"
"पेज पर राइट-क्लिक करने पर एक कस्टम मेन्यू दिखाओ","<style>#customMenu{display:none; position:absolute; border:1px solid #ccc; background:white; padding:5px; box-shadow: 2px 2px 5px #eee;} #customMenu div{padding: 5px; cursor:pointer;} #customMenu div:hover{background:#f0f0f0;}</style><div id='customMenu'><div>Copy</div><div>Paste</div></div><script>document.oncontextmenu=function(e){e.preventDefault(); var menu=document.getElementById('customMenu'); menu.style.display='block'; menu.style.left=e.pageX+'px'; menu.style.top=e.pageY+'px';}; document.onclick=function(){document.getElementById('customMenu').style.display='none';};</script>"
"एक 'before/after' इमेज स्लाइडर का UI बनाओ","<div style='position:relative; width:300px; height:200px;'><img src='before.jpg' width='300' height='200'><div style='position:absolute; top:0; left:0; width:50%; height:100%; overflow:hidden; border-right:2px solid white;'><img src='after.jpg' width='300' height='200'></div></div>"
"एक स्लाइडर बनाओ जिसे ड्रैग करके वैल्यू बदली जा सके","<input type='range' min='1' max='100' value='50' oninput=""this.nextElementSibling.innerText=this.value""><span>50</span>"
"एक नेविगेशन बार बनाओ जो स्क्रॉल करने के बाद टॉप पर चिपक जाए","<style>.sticky{position:fixed; top:0; width:100%;}</style><div id='navbar' style='padding:10px; background:#333; color:white;'>Navbar</div><div style='height:1000px; padding:10px;'>Scroll down...</div><script>var navbar=document.getElementById('navbar'); var sticky=navbar.offsetTop; window.onscroll=function(){if(window.pageYOffset>=sticky){navbar.classList.add('sticky')}else{navbar.classList.remove('sticky')}};</script>"
"बटन्स का उपयोग करके एक फिल्टर करने वाली गैलरी बनाओ","<div><button>All</button><button>Cars</button><button>Animals</button></div><div class='item cars'>A Car</div><div class='item animals'>An Animal</div>"
"स्किल दिखाने के लिए एनिमेटेड प्रोग्रेस बार बनाओ","<style>.skill-bar{width:100%; background-color:#ddd;}.skill-level{width:1%; height:20px; background-color:green; transition:width 2s;}</style><div class='skill-bar'><div class='skill-level' style='width:80%;'></div></div><p>(Animates on load)</p>"
"एक रैंडम पासवर्ड जेनरेट करने वाला ऐप बनाओ","<input id='pass-output' readonly style='width:150px;'><button onclick=""document.getElementById('pass-output').value = Math.random().toString(36).substring(2, 10);"">Generate Password</button>"
"एक ट्री-व्यू (tree view) मेन्यू बनाओ","<style>.tree-view ul{display:none; margin-left:20px;}.tree-view span{cursor:pointer;}</style><ul class='tree-view' style='list-style-type:none;'><li><span onclick=""this.parentElement.querySelector('ul').style.display = this.parentElement.querySelector('ul').style.display==='block'?'none':'block';"">▶ Parent</span><ul><li>Child 1</li><li>Child 2</li></ul></li></ul>"
"CSS का उपयोग करके पेज पर स्मूथ स्क्रॉलिंग इनेबल करो","<style>html { scroll-behavior: smooth; }</style><a href='#section1'>Go to Section 1</a><div style='height:800px;'></div><h2 id='section1'>This is Section 1</h2>"
"एक बटन बनाओ जो फुल-स्क्रीन नेविगेशन मेन्यू खोले","<style>.overlay{height:0; width:100%; position:fixed; z-index:1; top:0; left:0; background-color:rgba(0,0,0, 0.9); overflow-y:hidden; transition:0.5s;}.overlay-content{position:relative; top:25%; width:100%; text-align:center;}</style><span style='font-size:30px;cursor:pointer' onclick=""document.getElementById('myNav').style.height='100%'"">&#9776; Open</span><div id='myNav' class='overlay'><a href='javascript:void(0)' style='position:absolute;top:20px;right:45px;font-size:60px;color:white;' onclick=""document.getElementById('myNav').style.height='0%'"">&times;</a><div class='overlay-content'><a href='#' style='color:white;'>About</a></div></div>"
"एक टेक्स्टएरिया बनाओ जो कैरेक्टर लिमिट पहुंचने पर लाल हो जाए","<style>.limit{color:red; font-weight:bold;}</style><textarea maxlength='50' oninput=""var rem=50-this.value.length; document.getElementById('remChar').innerText=rem; document.getElementById('remChar').className = rem < 10 ? 'limit' : '';""></textarea><p><span id='remChar'>50</span> characters remaining.</p>"
"एक सिंपल पोल (poll) कॉम्पोनेन्ट का UI बनाओ","<h3>Which is your favorite color?</h3><div><input type='radio' name='poll'> Red</div><div><input type='radio' name='poll'> Green</div><button>Vote</button>"
"एक क्रेडिट कार्ड इनपुट का UI बनाओ","<div style='padding:10px; border:1px solid #ccc; width:250px;'><label>Card Number:</label><input placeholder='0000 0000 0000 0000' style='width:95%;'><div style='display:flex;'><div style='width:50%;'><label>Expiry:</label><input placeholder='MM/YY'></div><div style='width:50%;'><label>CVV:</label><input placeholder='123'></div></div></div>"
"एक कैलेंडर का सिंपल UI बनाओ","<div style='width:220px; border:1px solid #ccc; font-family:sans-serif;'><div style='background:#333; color:white; text-align:center; padding:5px;'>September 2025</div><div style='display:grid; grid-template-columns:repeat(7,1fr); text-align:center;'><div>Mo</div><div>Tu</div><div>We</div><div>Th</div><div>Fr</div><div>Sa</div><div>Su</div><div>1</div><div>2</div>...</div></div>"
"तीन प्लान वाला एक प्राइसिंग टेबल बनाओ","<div style='display:flex; text-align:center;'><div style='border:1px solid; padding:10px; margin:5px; flex:1;'><h3>Basic</h3><p>$10 / month</p><button>Sign Up</button></div><div style='border:2px solid blue; padding:10px; margin:5px; flex:1;'><h3>Pro</h3><p>$25 / month</p><button>Sign Up</button></div><div style='border:1px solid; padding:10px; margin:5px; flex:1;'><h3>Enterprise</h3><p>$50 / month</p><button>Sign Up</button></div></div>"
"एक कुकी कंसेंट बैनर बनाओ जो नीचे दिखे","<div id='cookie-banner' style='position:fixed; bottom:0; left:0; width:100%; background:#333; color:white; padding:15px; text-align:center;'>This website uses cookies to ensure you get the best experience. <button onclick=""document.getElementById('cookie-banner').style.display='none'"" style='margin-left:10px;'>Accept</button></div>"
"एक टेक्स्ट बनाओ जो धीरे-धीरे टाइप होता हुआ दिखे (टाइपराइटर इफ़ेक्ट)","<p id='typewriter'></p><script>var i=0; var txt='This is a typewriter effect.'; function type(){if(i<txt.length){document.getElementById('typewriter').innerHTML+=txt.charAt(i);i++;setTimeout(type, 50);}} type();</script>"
"जावास्क्रिप्ट एरे से एक डायनामिक टेबल बनाओ","<table id='myTable' border='1'><tr><th>Name</th><th>City</th></tr></table><script>const users=[{name:'Amit', city:'Lucknow'},{name:'Ria', city:'Delhi'}]; users.forEach(user => { let row = document.getElementById('myTable').insertRow(); row.insertCell(0).innerHTML = user.name; row.insertCell(1).innerHTML = user.city; });</script>"
"एक लिस्ट के लिए सिंपल पेजिंग (pagination) UI बनाओ","<style>.pagination a{padding: 8px 16px; text-decoration: none; border: 1px solid #ddd;}.pagination a.active{background-color: dodgerblue; color: white;}</style><div class='pagination'><a href='#'>&laquo;</a><a href='#'>1</a><a href='#' class='active'>2</a><a href='#'>3</a><a href='#'>&raquo;</a></div>"
"एक एनालॉग क्लॉक का सिंपल UI बनाओ","<div style='width:150px; height:150px; border-radius:50%; border:4px solid black; position:relative;'><div style='position:absolute; top:50%; left:50%; width:2px; height:60px; background:black; transform-origin:bottom; transform:rotate(30deg);'></div><div style='position:absolute; top:50%; left:50%; width:2px; height:40px; background:grey; transform-origin:bottom; transform:rotate(-45deg);'></div></div>"
"एक ऑडियो रिकॉर्डर का UI (स्टार्ट/स्टॉप बटन) बनाओ","<button>Start Recording</button><button disabled>Stop Recording</button><br><br><audio controls></audio>"
"एक टेक्स्ट बनाओ जिस पर क्लिक करने पर वह क्लिपबोर्ड पर कॉपी हो जाए","<p onclick=""navigator.clipboard.writeText(this.innerText); alert('Text Copied!')"" style='cursor:pointer; border:1px solid; padding:5px;'>Click me to copy this text.</p>"
"फाइलों के लिए एक ड्रैग एंड ड्रॉप ज़ोन का UI बनाओ","<div id='dropzone' style='border: 2px dashed #ccc; padding: 25px; margin:10px; text-align:center; color: #aaa;'>Drag & Drop Files Here</div>"
"एक थीम स्विचर (लाइट/डार्क) बनाओ जो CSS क्लास बदले","<style>.dark-theme{background:#222; color:white;}</style><body id='myBody'><button onclick=""document.getElementById('myBody').classList.toggle('dark-theme')"">Switch Theme</button><p>Some content here.</p></body>"
"एक SVG सर्किल बनाओ जो क्लिक करने पर रंग बदले","<svg width='100' height='100'><circle id='myCircle' cx='50' cy='50' r='40' stroke='black' stroke-width='3' fill='red' onclick=""this.setAttribute('fill', this.getAttribute('fill') === 'red' ? 'blue' : 'red')"" style='cursor:pointer;' /></svg>"
"CSS का उपयोग करके एक सिंपल बार चार्ट बनाओ","<style>.bar-chart{display:flex; align-items:flex-end; height:100px; border-left:2px solid; border-bottom:2px solid;}.bar{width:30px; background:dodgerblue; margin: 0 5px;}</style><div class='bar-chart'><div class='bar' style='height:50%;'></div><div class='bar' style='height:80%;'></div><div class='bar' style='height:30%;'></div></div>"
"एक टेक्स्ट बनाओ जिसमें टाइपिंग इफ़ेक्ट हो","<p id='typing-effect' style='font-family:monospace; font-size:18px;'></p><script>var text='Hello, this is a typing effect.'; var i=0; function typeWriter(){if(i<text.length){document.getElementById('typing-effect').innerHTML+=text.charAt(i); i++; setTimeout(typeWriter, 100);}} typeWriter();</script>"
"एक टेक्स्टएरिया बनाओ जो बताए कि कितने कैरेक्टर बचे हैं","<textarea maxlength='100' oninput=""document.getElementById('charsLeft').innerText = 100 - this.value.length;"" style='width:200px; height:60px;'></textarea><p><span id='charsLeft'>100</span> characters remaining.</p>"
"एक 'Select All' चेकबॉक्स बनाओ जो बाकी सभी चेकबॉक्स को सिलेक्ट करे","<input type='checkbox' onclick=""var checkboxes=document.querySelectorAll('input[name=\'option\']'); for(var c of checkboxes){c.checked=this.checked;}"">Select All<br><hr><input type='checkbox' name='option'>Option 1<br><input type='checkbox' name='option'>Option 2<br><input type='checkbox' name='option'>Option 3"
"एक वेदर ऐप का UI बनाओ (शहर का नाम, तापमान, आइकन)","<div style='border:1px solid #ddd; border-radius:8px; padding:15px; width:150px; text-align:center; font-family:sans-serif;'><h3 style='margin:0;'>Lucknow</h3><p style='font-size:32px; margin:5px;'>☀️ 32°C</p><p style='margin:0;'>Clear Sky</p></div>"
"नए साल तक का काउंटडाउन टाइमर बनाओ","<h3 id='countdownTimer'></h3><script>var targetDate = new Date('Jan 1, 2026').getTime(); var x = setInterval(() => {var now=new Date().getTime(); var distance=targetDate-now; var days=Math.floor(distance/(1000*60*60*24)); document.getElementById('countdownTimer').innerText=days + ' days until New Year!'; if(distance<0){clearInterval(x); document.getElementById('countdownTimer').innerText='Happy New Year!';}},1000)</script>"
"एक म्यूजिक प्लेलिस्ट का UI बनाओ","<ul style='list-style-type:none; padding:0; width:200px;'><li style='padding:8px; border-bottom:1px solid #eee;'>▶️ Song 1 - Artist A</li><li style='padding:8px; border-bottom:1px solid #eee;'>▶️ Song 2 - Artist B</li><li style='padding:8px;'>▶️ Song 3 - Artist C</li></ul>"
"एक मूवी टिकट बुकिंग के लिए सीट सिलेक्टर का UI बनाओ","<style>.seat{width:20px; height:20px; background:grey; margin:3px; display:inline-block; cursor:pointer;}.seat.selected{background:limegreen;}</style><div><div class='seat' onclick=""this.classList.toggle('selected')""></div><div class='seat' onclick=""this.classList.toggle('selected')""></div><div class='seat' onclick=""this.classList.toggle('selected')""></div></div><p>Selected seats: ...</p>"
"एक टेक्स्ट एडिटर के लिए बोल्ड और इटैलिक बटन बनाओ","<div id='editor' contenteditable='true' style='border:1px solid; height:100px; padding:5px;'>Type here...</div><button onclick=""document.execCommand('bold')""><b>Bold</b></button><button onclick=""document.execCommand('italic')""><i>Italic</i></button>"
"एक करेंसी कनवर्टर का UI बनाओ","<div><input type='number' value='1'> USD = <input type='number' value='83.50'> INR</div>"
"एक रेसिपी कार्ड बनाओ जिसमें इमेज और सामग्री की लिस्ट हो","<div style='border:1px solid #ddd; border-radius:5px; width:250px;'><img src='food.jpg' alt='dish' width='100%'><div style='padding:10px;'><h3>Dish Name</h3><ul><li>Ingredient 1</li><li>Ingredient 2</li><li>Ingredient 3</li></ul></div></div>"
"एक GitHub प्रोफाइल कार्ड का UI बनाओ","<div style='display:flex; align-items:center; padding:10px; border:1px solid #ccc; border-radius:5px; font-family:sans-serif;'><img src='avatar.png' alt='avatar' width='50' height='50' style='border-radius:50%;'><div style='margin-left:10px;'><h4>Username</h4><p style='font-size:14px; margin:0;'>User bio goes here...</p></div></div>"
"दो नंबरों को जोड़ने वाला एक सिंपल कैलकुलेटर","<input id='n1' type='number' value='5' style='width:50px;'> + <input id='n2' type='number' value='10' style='width:50px;'><button onclick=""document.getElementById('res').innerText = parseInt(document.getElementById('n1').value) + parseInt(document.getElementById('n2').value)"">Calculate</button><p>Result: <span id='res'></span></p>"
"एक कलर पिकर बनाओ जो h1 का टेक्स्ट कलर बदले","<h1 id='colorH1'>Change my color!</h1><label>Choose a color:</label><input type='color' oninput=""document.getElementById('colorH1').style.color=this.value"">"
"एक टेक्स्ट का फॉन्ट साइज़ बदलने के लिए स्लाइडर बनाओ","<p id='fontSliderText' style='font-size:16px;'>Adjust my font size</p><input type='range' min='10' max='50' value='16' oninput=""document.getElementById('fontSliderText').style.fontSize = this.value + 'px'"">"
"एक क्विज बनाओ जो सही या गलत जवाब का फीडबैक दे","<p>What is the capital of France?</p><button onclick=""alert('Wrong!')"">Berlin</button><button onclick=""alert('Correct!')"">Paris</button><button onclick=""alert('Wrong!')"">Rome</button>"
"एक स्टॉपवॉच का यूजर इंटरफ़ेस बनाओ","<h2 style='font-family:monospace;'>00:00:00</h2><button>Start</button><button>Stop</button><button>Reset</button>"
"एक इमेज हिंडोला (carousel) बनाओ जो हर 3 सेकंड में इमेज बदले","<img id='carousel' src='img1.jpg' width='200' alt='carousel'><script>const images=['img1.jpg','img2.jpg','img3.jpg']; let i=0; setInterval(()=>{ i=(i+1)%images.length; document.getElementById('carousel').src=images[i]; }, 3000);</script>"
"एक इनपुट फील्ड बनाओ जो टाइप करते ही नीचे वेलकम मैसेज अपडेट करे","<label>Your Name:</label><input onkeyup=""document.getElementById('welcome_msg').innerText = 'Welcome, ' + this.value""><h3 id='welcome_msg'></h3>"
"पेज पर माउस की X और Y पोजीशन ट्रैक करो","<p id='mousePos' style='border:1px solid; padding:10px;'>Mouse Position:</p><script>document.onmousemove = function(event){ document.getElementById('mousePos').innerText = `X: ${event.clientX}, Y: ${event.clientY}`; };</script>"
"एक बटन बनाओ जो 1 से 6 के बीच एक रैंडम नंबर (जैसे डाइस रोल) दिखाए","<p>Dice Roll: <span id='dice' style='font-size:24px; font-weight:bold;'>0</span></p><button onclick=""document.getElementById('dice').innerText = Math.floor(Math.random() * 6) + 1"">Roll Dice</button>"
"एक टेक्स्टएरिया बनाओ जो शब्दों की गिनती लाइव दिखाए","<textarea oninput=""document.getElementById('wc').innerText = this.value.trim().split(/\s+/).filter(Boolean).length;"" rows='4'></textarea><p>Word Count: <span id='wc'>0</span></p>"
"एक इनपुट फील्ड बनाओ जो टाइप किए गए टेक्स्ट को तुरंत अपरकेस में बदले","<label>Type here to convert to uppercase:</label><input oninput=""this.value=this.value.toUpperCase()"">"
"10 से 0 तक का एक सिंपल काउंटडाउन टाइमर बनाओ","<h2 id='countdown'>10</h2><button onclick=""var c=10; var t=setInterval(()=>{ c--; document.getElementById('countdown').innerText=c; if(c<=0) clearInterval(t); }, 1000);"">Start Countdown</button>"
"एक टेक्स्टएरिया बनाओ जो टेक्स्ट को ब्राउज़र की लोकल मेमोरी में सेव करे","<h3>My Sticky Note:</h3><textarea oninput=""localStorage.setItem('myNote', this.value);"" style='width:200px; height:100px;'></textarea><script>document.querySelector('textarea').value = localStorage.getItem('myNote');</script>"
"जन्म का साल डालकर उम्र कैलकुलेट करने वाला ऐप बनाओ","<input id='birthYear' type='number' placeholder='Year of Birth (e.g., 1990)'><button onclick=""document.getElementById('age').innerText = new Date().getFullYear() - document.getElementById('birthYear').value;"">Calculate Age</button><h3>Your age is: <span id='age'></span></h3>"
"एक ऑडियो के लिए प्ले और पॉज बटन बनाओ","<audio id='player' src='song.mp3'></audio><button onclick=""document.getElementById('player').play()"">Play</button><button onclick=""document.getElementById('player').pause()"">Pause</button>"
"एक बेसिक BMI कैलकुलेटर बनाओ","<input id='h' placeholder='Height (m)'><input id='w' placeholder='Weight (kg)'><button onclick=""var h=document.getElementById('h').value; var w=document.getElementById('w').value; document.getElementById('bmi').innerText = (w/(h*h)).toFixed(2);"">Calc BMI</button><p>Your BMI: <span id='bmi'></span></p>"
"सेल्सियस को फारेनहाइट में बदलने वाला कनवर्टर बनाओ","<input type='number' id='c' placeholder='Celsius' oninput=""document.getElementById('f').innerText = (this.value * 9/5) + 32;""><p>Fahrenheit: <span id='f'></span></p>"
"एक पासवर्ड फील्ड और एक बटन बनाओ जो पासवर्ड को दिखाए/छिपाए","<input id='pw' type='password' value='secret'><button onmousedown=""document.getElementById('pw').type='text'"" onmouseup=""document.getElementById('pw').type='password'"">Show/Hide</button>"
"एक बटन बनाओ जो क्लिक करने पर एक रैंडम कोट दिखाए","<p id='q_text' style='border-left: 3px solid #ccc; padding-left: 10px; font-style: italic;'>Your quote will appear here.</p><script>const quotes=['The only way to do great work is to love what you do.','That which does not kill us makes us stronger.','The journey of a thousand miles begins with a single step.'];</script><button onclick=""document.getElementById('q_text').innerText = quotes[Math.floor(Math.random() * quotes.length)];"">New Quote</button>"
"पेज के टॉप पर एक स्क्रॉल प्रोग्रेस बार बनाओ","<div style='position:fixed;top:0;left:0;height:5px;background:green;width:0%;' id='pBar'></div><script>window.onscroll=function(){var winScroll=document.body.scrollTop||document.documentElement.scrollTop;var height=document.documentElement.scrollHeight-document.documentElement.clientHeight;var scrolled=(winScroll/height)*100;document.getElementById('pBar').style.width=scrolled+'%';};</script><div style='height:2000px; padding:20px;'><h1>Scroll down this page to see the progress bar.</h1></div>"
"एक लाइट/डार्क मोड टॉगल बटन बनाओ","<style>body{transition: background-color 0.3s;}</style><button onclick=""document.body.style.backgroundColor = document.body.style.backgroundColor === 'black' ? 'white' : 'black'; document.body.style.color = document.body.style.backgroundColor === 'black' ? 'white' : 'black';"">Toggle Dark Mode</button>"
"एक काउंटर ऐप बनाओ जिसमें प्लस और माइनस बटन हों","<h3>Count: <span id='counterVal'>0</span></h3><button onclick=""document.getElementById('counterVal').innerText--;"">-1</button><button onclick=""document.getElementById('counterVal').innerText++;"">+1</button>"
"एक सिंपल लॉगइन फॉर्म बनाओ","<form style='border: 1px solid #ccc; padding: 20px; width: 200px; border-radius: 5px;'><label for='user'>Username:</label><br><input type='text' id='user' style='width: 95%;'><br><br><label for='pass'>Password:</label><br><input type='password' id='pass' style='width: 95%;'><br><br><button type='submit'>Login</button></form>"
"एक टेक्स्टएरिया बनाओ जो बताए कि कितने कैरेक्टर लिखे गए हैं","<textarea id='myTextarea' oninput=""document.getElementById('charCount').innerText = this.value.length;"" maxlength='100'></textarea><p>Characters: <span id='charCount'>0</span>/100</p>"
"एक अकॉर्डियन बनाओ जो क्लिक करने पर कंटेंट दिखाए/छिपाए","<style>.accordion-content{display:none; padding:10px; border:1px solid #ddd;}</style><h3 onclick=""this.nextElementSibling.style.display = this.nextElementSibling.style.display === 'block' ? 'none' : 'block';"" style='cursor:pointer; background:#eee; padding:10px; margin:0;'>Click to Toggle Section</h3><div class='accordion-content'><p>This is the hidden content.</p></div>"
"एक सिंपल इमेज गैलरी बनाओ जिसमें नेक्स्ट और प्रीवियस बटन हों","<img id='galleryImg' src='img1.jpg' width='200'><br><button onclick=""document.getElementById('galleryImg').src='img1.jpg'"">Image 1</button><button onclick=""document.getElementById('galleryImg').src='img2.jpg'"">Image 2</button><button onclick=""document.getElementById('galleryImg').src='img3.jpg'"">Image 3</button>"
"एक कांटेक्ट फॉर्म बनाओ जिसमें ईमेल फील्ड खाली होने पर एरर आए","<form onsubmit=""if(document.getElementById('email').value === ''){alert('Email field is required!'); return false;}""><label>Your Email:</label><input id='email' type='email'><input type='submit'></form>"
"एक सिंपल टू-डू लिस्ट बनाओ","<ul id='todoList'><li>First Item</li></ul><input id='todoInput' type='text' placeholder='New item...'><button onclick=""var li=document.createElement('li'); li.innerText=document.getElementById('todoInput').value; document.getElementById('todoList').appendChild(li); document.getElementById('todoInput').value='';"">Add</button>"
"एक बटन बनाओ जो क्लिक करने पर एक मोडल (popup) खोले","<style>.modal{display:none; position:fixed; z-index:1; left:0; top:0; width:100%; height:100%; background-color:rgba(0,0,0,0.5);}</style><button onclick=""document.getElementById('myModal').style.display='block'"">Open Modal</button><div id='myModal' class='modal'><div style='background-color: #fefefe; margin: 15% auto; padding: 20px; border: 1px solid #888; width: 80%;'><span onclick=""document.getElementById('myModal').style.display='none'"" style='float:right; cursor:pointer;'>&times;</span><p>This is a modal popup.</p></div></div>"
"एक टैब वाला इंटरफ़ेस बनाओ","<style>.tabcontent{display:none;}</style><button onclick=""openTab('Tab1')"">Tab 1</button><button onclick=""openTab('Tab2')"">Tab 2</button><div id='Tab1' class='tabcontent'><h3>Tab 1</h3><p>Content for Tab 1.</p></div><div id='Tab2' class='tabcontent'><h3>Tab 2</h3><p>Content for Tab 2.</p></div><script>function openTab(tabName){var i, tabs; tabs=document.getElementsByClassName('tabcontent'); for(i=0;i<tabs.length;i++){tabs[i].style.display='none';} document.getElementById(tabName).style.display='block';}</script>"
"एक 5-स्टार रेटिंग कॉम्पोनेन्ट बनाओ","<style>.star{cursor:pointer; font-size:24px; color:grey;}.star:hover{color:orange;}</style><span class='star' onclick=""alert('Rated 1 star')"">★</span><span class='star' onclick=""alert('Rated 2 stars')"">★</span><span class='star' onclick=""alert('Rated 3 stars')"">★</span><span class='star' onclick=""alert('Rated 4 stars')"">★</span><span class='star' onclick=""alert('Rated 5 stars')"">★</span>"
"एक पासवर्ड स्ट्रेंथ चेकर बनाओ","<label>Password:</label><input type='password' oninput=""document.getElementById('strength').innerText = this.value.length > 8 ? 'Strong' : 'Weak';""><p>Password Strength: <span id='strength'></span></p>"
"एक डिजिटल क्लॉक बनाओ जो हर सेकंड अपडेट हो","<div id='clockDiv' style='font-size:20px; font-family:monospace;'></div><script>setInterval(() => document.getElementById('clockDiv').innerText = new Date().toLocaleTimeString(), 1000);</script>"
"एक सर्च बार बनाओ जो एक लिस्ट को फ़िल्टर करे","<input id='searchInput' onkeyup='filterList()' placeholder='Search for names..'><ul id='namesList'><li>Amit</li><li>Ajay</li><li>Bhavna</li><li>Bharat</li></ul><script>function filterList(){var input = document.getElementById('searchInput'); var filter = input.value.toUpperCase(); var ul = document.getElementById('namesList'); var li = ul.getElementsByTagName('li'); for(var i=0; i<li.length; i++){if(li[i].innerHTML.toUpperCase().indexOf(filter) > -1){li[i].style.display='';}else{li[i].style.display='none';}}}</script>"
"एक रिस्पॉन्सिव नेविगेशन बार बनाओ जिसमें हैमबर्गर मेन्यू हो","<style>.nav-links{display:none;} .nav-links.show{display:block;}</style><nav style='background:#333; color:white; padding:10px;'><div class='hamburger' onclick=""document.querySelector('.nav-links').classList.toggle('show')"" style='cursor:pointer;'>☰ Menu</div><div class='nav-links' style='margin-top:10px;'><a href='#' style='color:white; display:block;'>Home</a><a href='#' style='color:white; display:block;'>About</a></div></nav>"
"एक 'Scroll to Top' बटन बनाओ","<button onclick=""window.scrollTo(0, 0)"" style='position:fixed; bottom:20px; right:20px;'>Go to Top</button>"
"एक डायनामिक प्रोग्रेस बार बनाओ","<div style='width:100%; background-color: #ddd;'><div id='myBar' style='width: 10%; height: 20px; background-color: #4CAF50;'></div></div><button onclick=""document.getElementById('myBar').style.width = '100%'"">Complete</button>"
"एक कस्टम अलर्ट बॉक्स बनाओ","<div id='customAlert' style='display:none; position:fixed; top:10px; left:10%; width:80%; background:lightyellow; border:1px solid gold; padding:10px;'>Custom Alert!</div><button onclick=""document.getElementById('customAlert').style.display='block'"">Show Custom Alert</button>"
"एक 'Copy to Clipboard' बटन बनाओ","<input id='copyText' value='Text to be copied' readonly><button onclick=""document.getElementById('copyText').select(); document.execCommand('copy'); alert('Copied!')"">Copy Text</button>"
"एक ड्रॉपडाउन मेन्यू बनाओ जो होवर करने पर खुले","<style>.dropdown-content{display:none; position:absolute; background:#f9f9f9;}.dropdown:hover .dropdown-content{display:block;}</style><div class='dropdown' style='position:relative; display:inline-block;'><button>Hover Me</button><div class='dropdown-content'><a href='#' style='display:block; padding:5px;'>Link 1</a><a href='#' style='display:block; padding:5px;'>Link 2</a></div></div>"
"एक फॉर्म बनाओ जो सबमिट करने पर चेक करे कि इनपुट फील्ड खाली है या नहीं","<form onsubmit=""if(document.getElementById('fname').value === ''){ alert('Name must be filled out'); return false; }""><label>Name:</label><input id='fname' type='text'><input type='submit'></form>"
"एक पासवर्ड फील्ड बनाओ जो 6 कैरेक्टर से कम होने पर एरर दे","<form onsubmit=""if(document.getElementById('pwd').value.length < 6){ alert('Password must be at least 6 characters'); return false; }""><label>Password:</label><input id='pwd' type='password'><input type='submit'></form>"
"`setTimeout` का उपयोग करके 2 सेकंड बाद एक फंक्शन कॉल करो","<script>function delayedAlert() { alert('This message appeared after 2 seconds.'); } setTimeout(delayedAlert, 2000);</script>"
"एक काउंटर शुरू करो जो हर सेकंड बढ़े और एक बटन से बंद हो जाए","<p id='counter'>0</p><button onclick=""clearInterval(myInterval)"">Stop Counter</button><script>var c=0; var myInterval = setInterval(function(){ c++; document.getElementById('counter').innerText = c; }, 1000);</script>"
"एक जावास्क्रिप्ट ऑब्जेक्ट को JSON स्ट्रिंग में बदलो","<script>var user = {name:'Amit', age:25}; var jsonString = JSON.stringify(user); console.log(jsonString);</script>"
"एक JSON स्ट्रिंग को वापस जावास्क्रिप्ट ऑब्जेक्ट में बदलो","<script>var jsonString = '{\""name\"":\""Amit\"", \""age\"":25}'; var userObject = JSON.parse(jsonString); console.log(userObject.name);</script>"
"`window.location.href` से वर्तमान पेज का URL पता करो","<script>alert('The current URL is: ' + window.location.href);</script>"
"एक बटन बनाओ जो क्लिक करने पर गूगल पर रीडायरेक्ट करे","<button onclick=""window.location.href='https://google.com'"">Go to Google</button>"
"जावास्क्रिप्ट से एक सिंपल कुकी (cookie) सेट करो","<script>document.cookie = 'username=Amit; expires=Fri, 31 Dec 2026 23:59:59 GMT; path=/'; alert('Cookie set!');</script>"
"जावास्क्रिप्ट से बनाई गई कुकी को पढ़ो","<script>alert('Cookies for this page: ' + document.cookie);</script>"
"`localStorage` में एक की-वैल्यू पेयर सेव करो","<script>localStorage.setItem('theme', 'dark');</script>"
"`localStorage` से एक वैल्यू प्राप्त करो","<script>var theme = localStorage.getItem('theme'); alert('Saved theme is: ' + theme);</script>"
"`sessionStorage` में डेटा सेव करो जो टैब बंद होने पर डिलीट हो जाए","<script>sessionStorage.setItem('session_status', 'active');</script>"
"एक एरो (arrow) फंक्शन बनाओ","<script>const greet = () => { return 'Hello from an arrow function!'; }; console.log(greet());</script>"
"टेम्पलेट लिटरल का उपयोग करके एक स्ट्रिंग बनाओ","<script>var name='Amit'; var str = `Hello, my name is ${name}!`; console.log(str);</script>"
"`for...of` लूप का उपयोग करके एक एरे के आइटम्स को प्रिंट करो","<script>const colors = ['red', 'green', 'blue']; for (const color of colors) { console.log(color); }</script>"
"`for...in` लूप का उपयोग करके एक ऑब्जेक्ट की प्रॉपर्टीज को प्रिंट करो","<script>const person = {fname:'Amit', lname:'Saka', age:25}; for (const key in person) { console.log(key + ': ' + person[key]); }</script>"
"`try...catch` ब्लॉक का उपयोग करके जावास्क्रिप्ट एरर को हैंडल करो","<script>try { nonExistentFunction(); } catch(err) { console.log('An error occurred: ' + err.message); }</script>"
"जावास्क्रिप्ट से एक CSS वेरिएबल का मान बदलो","<style>:root{--bg-color: lightblue;}</style><div id='varDiv' style='padding:10px; background-color: var(--bg-color);'>Click button to change my color.</div><button onclick=""document.documentElement.style.setProperty('--bg-color', 'lightgreen')"">Change Color</button>"
"`fetch` का उपयोग करके एक API से डेटा प्राप्त करो","<script>fetch('https://jsonplaceholder.typicode.com/todos/1').then(response => response.json()).then(data => console.log(data));</script>"
"जावास्क्रिप्ट से एक नया पैराग्राफ एलिमेंट बनाओ","<script>var newParagraph = document.createElement('p'); newParagraph.textContent = 'I was created by JS.'; document.body.appendChild(newParagraph);</script>"
"एक div के अंदर एक नया h3 एलिमेंट जोड़ो","<div id='parentDiv' style='border: 1px solid;'></div><script>var newHeading = document.createElement('h3'); newHeading.innerHTML = 'Appended Heading'; document.getElementById('parentDiv').appendChild(newHeading);</script>"
"एक div के अंदर से एक चाइल्ड एलिमेंट को हटाओ","<div id='parentDiv2'><p id='childPara'>Remove me</p></div><script>var child = document.getElementById('childPara'); document.getElementById('parentDiv2').removeChild(child);</script>"
"एक एलिमेंट को दूसरे एलिमेंट से बदलो","<div id='parentDiv3'><p id='oldChild'>I am old.</p></div><script>var newChild = document.createElement('h3'); newChild.innerHTML='I am new.'; document.getElementById('parentDiv3').replaceChild(newChild, document.getElementById('oldChild'));</script>"
"किसी एलिमेंट के पैरेंट नोड का टैग नाम पता करो","<div id='parent'><span id='child'>Child</span></div><script>var parentTag = document.getElementById('child').parentNode.tagName; alert(parentTag);</script>"
"किसी एलिमेंट के सभी चाइल्ड नोड्स को सिलेक्ट करो","<div id='parentWithChildren' style='border:1px solid'><p>Child 1</p><span>Child 2</span></div><script>var children = document.getElementById('parentWithChildren').childNodes;</script>"
"किसी एलिमेंट के पहले और आखिरी चाइल्ड को सिलेक्ट करो","<div id='p4'><p>First</p><p>Middle</p><p>Last</p></div><script>var first = document.getElementById('p4').firstElementChild; var last = document.getElementById('p4').lastElementChild;</script>"
"किसी एलिमेंट के अगले सिबलिंग (sibling) को सिलेक्ट करो","<ul><li id='item1'>One</li><li id='item2'>Two</li></ul><script>var nextElement = document.getElementById('item1').nextElementSibling;</script>"
"जावास्क्रिप्ट से एक एलिमेंट में 'blue' क्लास जोड़ो","<style>.blue { color: blue; }</style><p id='addClassP'>Add class to me.</p><script>document.getElementById('addClassP').classList.add('blue');</script>"
"जावास्क्रिप्ट से एक एलिमेंट से 'red' क्लास हटाओ","<style>.red { color: red; }</style><p id='removeClassP' class='red'>Remove class from me.</p><script>document.getElementById('removeClassP').classList.remove('red');</script>"
"चेक करो कि एक एलिमेंट में कोई खास CSS क्लास है या नहीं","<div id='hasClassDiv' class='box'></div><script>var hasBoxClass = document.getElementById('hasClassDiv').classList.contains('box'); alert('Has ""box"" class: ' + hasBoxClass);</script>"
"सभी पैराग्राफ का रंग एक साथ बदलने के लिए लूप चलाओ","<p>Paragraph 1</p><p>Paragraph 2</p><script>var allParas = document.getElementsByTagName('p'); for(var i=0; i<allParas.length; i++){ allParas[i].style.color='green'; }</script>"
"एक ड्रॉपडाउन से सिलेक्टेड वैल्यू को अलर्ट में दिखाओ","<select id='mySelect' onchange=""alert('You selected: ' + this.value)""><option value='A'>Option A</option><option value='B'>Option B</option></select>"
"कौन सा रेडियो बटन चेक्ड है, उसकी वैल्यू पता करो","<input type='radio' name='opt' value='One' checked>1 <input type='radio' name='opt' value='Two'>2 <button onclick=""alert(document.querySelector('input[name=\'opt\']:checked').value)"">Get Checked Value</button>"
"एक बटन बनाओ जो क्लिक करने पर एक 400x400 की नई विंडो खोले","<button onclick=""window.open('https://google.com', '_blank', 'width=400,height=400')"">Open Small Window</button>"
"एक बटन बनाओ जो वर्तमान विंडो को बंद कर दे","<button onclick='window.close()'>Close This Window</button>"
"यूज़र की स्क्रीन की चौड़ाई और ऊंचाई पता करो","<button onclick=""alert('Screen Width: ' + screen.width + ', Screen Height: ' + screen.height);"">Show Screen Size</button>"
"यूज़र का ब्राउज़र ऐप नाम पता करो","<button onclick=""alert('Browser AppName: ' + navigator.appName);"">Show Browser Name</button>"
"ब्राउज़र हिस्ट्री में एक पेज वापस जाने के लिए एक बटन बनाओ","<a href='javascript:history.back()'>Go Back</a>"
"पेज के टाइटल को जावास्क्रिप्ट से बदलो","<script>document.title = 'New Page Title';</script>"
"`addEventListener` का उपयोग करके एक क्लिक इवेंट लगाओ","<button id='btn1'>Click Me</button><script>document.getElementById('btn1').addEventListener('click', function() { alert('Event Listener Clicked!'); });</script>"
"`mouseover` इवेंट लगाओ जो माउस ले जाने पर टेक्स्ट बदले","<p id='p_mouse'>Hover over me.</p><script>document.getElementById('p_mouse').addEventListener('mouseover', function() { this.innerHTML = 'Mouse is over!'; });</script>"
"`mouseout` इवेंट लगाओ जो माउस हटाने पर टेक्स्ट वापस बदल दे","<p id='p_mouse_out' onmouseover=""this.style.color='red'"" onmouseout=""this.style.color='black'"">Hover to change my color.</p>"
"जावास्क्रिप्ट से सभी पैराग्राफ (`p`) एलिमेंट्स को सिलेक्ट करो","<p>Paragraph 1</p><p>Paragraph 2</p><script>var allParagraphs = document.getElementsByTagName('p'); console.log('Found ' + allParagraphs.length + ' paragraphs.');</script>"
"जावास्क्रिप्ट से 'test' क्लास वाले सभी एलिमेंट्स को सिलेक्ट करो","<div class='test'>Div 1</div><p class='test'>Para 1</p><script>var allTestElements = document.getElementsByClassName('test');</script>"
"`querySelector` का उपयोग करके पहले 'item' क्लास वाले एलिमेंट को सिलेक्ट करो","<div class='item'>First</div><div class='item'>Second</div><script>var firstItem = document.querySelector('.item'); firstItem.style.color = 'green';</script>"
"`querySelectorAll` का उपयोग करके सभी 'item' क्लास वाले एलिमेंट्स को सिलेक्ट करो","<ul><li class='item'>A</li><li class='item'>B</li></ul><script>var allItems = document.querySelectorAll('.item');</script>"
"एक बटन बनाओ जो चेक करे कि एक नंबर 10 से बड़ा है या नहीं","<script>function checkNumber() { var x = 15; if (x > 10) { alert('Greater than 10'); } else { alert('Not greater than 10'); } }</script><button onclick='checkNumber()'>Check Number</button>"
"एक div पर क्लिक करके 'active' क्लास को टॉगल (जोड़ें/हटाएँ) करो","<style>.active{background:yellow; font-weight:bold;}</style><div id='div_toggle' onclick=""this.classList.toggle('active')"">Click to toggle the 'active' class.</div>"
"एक इनपुट फील्ड बनाओ जो कोई भी की (key) दबाने पर अलर्ट दिखाए","<input type='text' onkeydown=""alert('You pressed a key inside the input!')"" placeholder='Type here'>"
"एक तस्वीर बनाओ जो होवर करने पर बदल जाए","<img src='pic1.jpg' width='100' onmouseover=""this.src='pic2.jpg'"" onmouseout=""this.src='pic1.jpg'"">"
"जावास्क्रिप्ट से एक लिंक का `href` एट्रिब्यूट सेट करो","<a id='myLink' href='#'>Old Link</a><script>document.getElementById('myLink').setAttribute('href', 'https://www.newlink.com');</script>"
"एक कन्फर्मेशन बॉक्स दिखाओ और यूज़र का जवाब अलर्ट करो","<button onclick=""var result = confirm('Are you sure?'); alert('You pressed: ' + result);"">Show Confirm Box</button>"
"एक प्रॉम्प्ट बॉक्स से यूज़र का नाम पूछो और उसे ग्रीट करो","<button onclick=""var name = prompt('Please enter your name', 'Harry'); if (name != null) { alert('Hello, ' + name); }"">Ask for Name</button>"
"तीन फलों का एक जावास्क्रिप्ट एरे (array) बनाओ","<script>var fruits = ['Apple', 'Banana', 'Mango']; console.log(fruits[0]);</script>"
"एक एरे के सभी आइटम्स को कंसोल में प्रिंट करने के लिए लूप चलाओ","<script>var colors = ['Red', 'Green', 'Blue']; for (var i = 0; i < colors.length; i++) { console.log(colors[i]); }</script>"
"`innerHTML` और `innerText` के बीच का अंतर दिखाओ","<p id='demo_p'></p><script>document.getElementById('demo_p').innerText = '<b>This is bold text.</b>'; /* innerText renders tags as text */</script>"
"3 सेकंड के बाद एक अलर्ट दिखाओ","<button onclick=""setTimeout(function(){ alert('Hello after 3 seconds!'); }, 3000)"">Click and wait 3 seconds</button>"
"हर 1 सेकंड में समय अपडेट करने वाला डिजिटल क्लॉक बनाओ","<p id='clock'></p><script>setInterval(function(){ document.getElementById('clock').innerHTML = new Date().toLocaleTimeString(); }, 1000);</script>"
"एक बटन बनाओ जो क्लिक करने पर एक लिस्ट में नया आइटम जोड़े","<ul id='myList'><li>First item</li></ul><button onclick=""var node = document.createElement('li'); node.appendChild(document.createTextNode('New item')); document.getElementById('myList').appendChild(node);"">Add New Item</button>"
"एक 'Hello, World!' का अलर्ट दिखाओ","<script>alert('Hello, World!');</script>"
"ब्राउज़र कंसोल में 'Test Message' लिखो","<script>console.log('Test Message');</script>"
"जावास्क्रिप्ट से 'demo' आईडी वाले एलिमेंट को सिलेक्ट करो","<p id='demo'></p><script>var element = document.getElementById('demo');</script>"
"एक पैराग्राफ का टेक्स्ट जावास्क्रिप्ट से बदलो","<p id='p1'>Old Text</p><script>document.getElementById('p1').innerHTML = 'New Text';</script>"
"एक बटन बनाओ जो क्लिक करने पर अलर्ट दिखाए","<button onclick=""alert('Button Clicked!')"">Click Me</button>"
"एक div बनाओ जिस पर क्लिक करने पर उसका टेक्स्ट बदल जाए","<div id='div1' onclick=""this.innerHTML='You clicked me!'"">Click this div.</div>"
"एक जावास्क्रिप्ट फंक्शन बनाओ जो 'hello' अलर्ट करे","<script>function sayHello() { alert('hello'); }</script>"
"एक बटन बनाओ जो क्लिक करने पर 'sayHello' फंक्शन को कॉल करे","<script>function sayHello() { alert('hello'); }</script><button onclick='sayHello()'>Call Function</button>"
"जावास्क्रिप्ट से एक इमेज का सोर्स (src) बदलो","<img id='myImage' src='image1.jpg' width='100'><script>document.getElementById('myImage').src = 'image2.jpg';</script>"
"जावास्क्रिप्ट से एक टेक्स्ट का रंग नीला करो","<p id='p2'>Change my color.</p><script>document.getElementById('p2').style.color = 'blue';</script>"
"जावास्क्रिप्ट से एक टेक्स्ट का फॉन्ट साइज़ 30px करो","<p id='p3'>Make me big.</p><script>document.getElementById('p3').style.fontSize = '30px';</script>"
"एक वेरिएबल 'x' बनाओ और उसका मान 5 रखो","<script>var x = 5; console.log(x);</script>"
"एक वेरिएबल की वैल्यू को एक पैराग्राफ में दिखाओ","<p id='p4'></p><script>var name = 'Amit'; document.getElementById('p4').innerHTML = name;</script>"
"दो नंबरों को जोड़कर उसका परिणाम एक पैराग्राफ में दिखाओ","<p id='p5'></p><script>var a = 5; var b = 10; document.getElementById('p5').innerHTML = a + b;</script>"
"जावास्क्रिप्ट से एक एलिमेंट को छिपाओ","<h1 id='h1_hide'>Hide Me</h1><script>document.getElementById('h1_hide').style.display = 'none';</script>"
"एक छिपे हुए एलिमेंट को जावास्क्रिप्ट से दिखाओ","<p id='p_show' style='display:none;'>I am hidden.</p><script>document.getElementById('p_show').style.display = 'block';</script>"
"`this` कीवर्ड का उपयोग करके क्लिक किए गए एलिमेंट का टेक्स्ट बदलो","<button onclick=""this.innerHTML='I was clicked!'"">Click me</button>"
"एक इनपुट फील्ड की वैल्यू को अलर्ट में दिखाओ","<input type='text' id='nameInput' value='Saka'><button onclick=""alert(document.getElementById('nameInput').value)"">Show Value</button>"
"आज की तारीख और समय को एक पैराग्राफ में दिखाओ","<p id='time'></p><script>document.getElementById('time').innerHTML = Date();</script>"
"`document.write()` का उपयोग करके पेज पर कुछ लिखो","<p>This is a paragraph.</p><script>document.write('<h1>This text overwrites the page content.</h1>');</script>"
"CSS में một 'main-color' नाम का वेरिएबल बनाओ","<style>:root { --main-color: #3498db; }</style><p>Variable is set.</p>"
"`main-color` CSS वेरिएबल का उपयोग करके टेक्स्ट का रंग सेट करो","<style>:root { --main-color: #3498db; } p { color: var(--main-color); }</style><p>This text uses the CSS variable for its color.</p>"
"एक मीडिया क्वेरी बनाओ जो 600px से बड़ी स्क्रीन पर बैकग्राउंड बदले","<style>body { background-color: lightblue; } @media (min-width: 600px) { body { background-color: lightgreen; } }</style><div>Resize the browser window to see the effect.</div>"
"फ्लेक्सबॉक्स में मीडिया क्वेरी का उपयोग करके मोबाइल पर आइटम्स का क्रम बदलो","<style>.container{display:flex;} .item1{order:1;} .item2{order:2;} @media (max-width: 600px){.item1{order:2;}.item2{order:1;}}</style><div class='container'><div class='item1'>First item</div><div class='item2'>Second item (will show first on mobile)</div></div>"
"ग्रिड लेआउट को मोबाइल पर एक कॉलम का बनाओ","<style>.grid{display:grid; grid-template-columns: 1fr 1fr 1fr; gap:10px;} @media (max-width: 600px){.grid{grid-template-columns: 1fr;}}</style><div class='grid'><div style='background:lightgrey'>1</div><div style='background:lightgrey'>2</div><div style='background:lightgrey'>3</div></div>"
"एक div बनाओ जिसकी चौड़ाई और ऊंचाई viewport के 50% हो","<div style='width: 50vw; height: 50vh; background: coral;'>This div is 50% of your viewport width and height.</div>"
"`rem` यूनिट का उपयोग करके फॉन्ट साइज़ सेट करो","<p style='font-size: 1.5rem;'>This font size is relative to the root element (1.5rem).</p>"
"`em` यूनिट का उपयोग करके नेस्टेड फॉन्ट साइज़ सेट करो","<div style='font-size: 20px;'><p style='font-size: 1.5em;'>This text's size (30px) is 1.5 times its parent's font size (20px).</p></div>"
"`display: inline-block` का उपयोग करके आइटम्स को एक लाइन में रखो","<div style='display: inline-block; width: 100px; height: 50px; border: 1px solid; background: lightblue;'>A</div><div style='display: inline-block; width: 100px; height: 50px; border: 1px solid; background: lightgreen;'>B</div><p>They are in a line but have width/height.</p>"
"`float: left` का उपयोग करके इमेज के चारों ओर टेक्स्ट को रैप करो","<div><img src='image.jpg' alt='float' style='width: 50px; float: left; margin-right: 10px;'>This text will wrap around the image on the right side. This is a classic layout technique.</div>"
"`float` को क्लियर करने के लिए clearfix हैक का उपयोग करो","<style>.clearfix::after { content: ''; display: block; clear: both; }</style><div class='clearfix' style='border:1px solid'><div style='float: left;'>Floating Box</div></div><p>This text is below the float, not next to it.</p>"
"`position: sticky` का उपयोग करके एक एलिमेंट बनाओ जो स्क्रॉल करने पर चिपका रहे","<div style='height: 300px; border: 1px solid'><div style='position: sticky; top: 0; padding: 5px; background: lightyellow; border-bottom: 1px solid #ccc;'>I am sticky!</div><p style='margin-top:20px'>Scroll down to see the sticky effect.</p></div>"
"एक इमेज पर ब्लर (blur) इफ़ेक्ट लगाओ","<img src='image.jpg' alt='blur' style='filter: blur(2px);'>"
"एक इमेज को ग्रेस्केल (grayscale) करो","<img src='image.jpg' alt='grayscale' style='filter: grayscale(100%);'>"
"एक div को 45 डिग्री घुमाओ","<div style='width: 50px; height: 50px; margin: 20px; background: coral; transform: rotate(45deg);'></div>"
"एक div को होवर करने पर उसका साइज़ दोगुना करो","<style>.scaler:hover{transform:scale(2);}</style><div class='scaler' style='width:50px; height:50px; background:lightblue; transition:transform 0.3s; margin:20px;'>Scale me on hover</div>"
"एक div को उसकी जगह से 20px दाईं ओर खिसकाओ","<div style='width: 50px; height: 50px; background: lightgreen; transform: translate(20px, 0);'></div>"
"एक div को 20 डिग्री तिरछा (skew) करो","<div style='width: 50px; height: 50px; background: violet; transform: skewX(20deg);'></div>"
"एक div को रोटेट और स्केल दोनों करो","<div style='width: 50px; height: 50px; background: orange; transform: rotate(20deg) scale(1.2);'></div>"
"`display: contents` का उपयोग करके एक कंटेनर को लेआउट से हटाओ","<div style='display:flex; border: 1px solid red;'><div style='display:contents;'><p style='flex:1; border: 1px solid blue;'>Child 1</p><p style='flex:1; border: 1px solid blue;'>Child 2</p></div></div>"
"फ्लेक्सबॉक्स का उपयोग करके एक इमेज, टाइटल और टेक्स्ट वाला कार्ड बनाओ","<div style='display: flex; flex-direction: column; width: 200px; border: 1px solid grey; border-radius: 5px; box-shadow: 2px 2px 5px #ccc;'><img src='image.jpg' alt='card image' style='width: 100%;'><div style='padding: 10px;'><h3>Card Title</h3><p>Some card text here to describe.</p></div></div>"
"ग्रिड का उपयोग करके तीन कॉलम वाला एक कार्ड लेआउट बनाओ","<div style='display: grid; grid-template-columns: repeat(3, 1fr); gap: 15px;'><div style='border: 1px solid #ddd; padding: 10px;'>Card 1</div><div style='border: 1px solid #ddd; padding: 10px;'>Card 2</div><div style='border: 1px solid #ddd; padding: 10px;'>Card 3</div></div>"
"ग्रिड से एक 'होली ग्रेल' लेआउट (हेडर, फुटर, साइडबार, मेन कंटेंट) बनाओ","<style>.hg-wrapper{display:grid; grid-template-areas: 'header header header' 'nav main aside' 'footer footer footer'; gap: 5px; height: 200px;}</style><div class='hg-wrapper'><header style='grid-area:header; background:lightgrey;'>Header</header><nav style='grid-area:nav; background:lightblue;'>Nav</nav><main style='grid-area:main; background:lightyellow;'>Main</main><aside style='grid-area:aside; background:lightgreen;'>Aside</aside><footer style='grid-area:footer; background:lightgrey;'>Footer</footer></div>"
"फ्लेक्सबॉक्स से एक लॉगइन फॉर्म को पेज के बीचों-बीच रखो","<div style='display: flex; justify-content: center; align-items: center; height: 200px; background: #f0f0f0;'><form style='padding: 20px; border: 1px solid black;'><h2>Login</h2><input type='text' placeholder='Username'><br><br><input type='password' placeholder='Password'><br><br><button>Submit</button></form></div>"
"एक फॉर्म को लेबल और इनपुट के लिए दो कॉलम वाले ग्रिड में व्यवस्थित करो","<form style='display: grid; grid-template-columns: auto 1fr; gap: 10px; align-items: center;'><label for='name'>Name:</label><input type='text' id='name'><label for='email'>Email:</label><input type='email' id='email'></form>"
"`auto-fit` का उपयोग करके एक रिस्पॉन्सिव ग्रिड बनाओ","<div style='display: grid; grid-template-columns: repeat(auto-fit, minmax(100px, 1fr)); gap: 10px;'><div style='background:lightblue; padding:10px;'>1</div><div style='background:lightblue; padding:10px;'>2</div><div style='background:lightblue; padding:10px;'>3</div><div style='background:lightblue; padding:10px;'>4</div></div>"
"`auto-fill` का उपयोग करके एक रिस्पॉन्सिव ग्रिड बनाओ","<div style='display: grid; grid-template-columns: repeat(auto-fill, minmax(100px, 1fr)); gap: 10px;'><div style='background:lightcoral; padding:10px;'>1</div><div style='background:lightcoral; padding:10px;'>2</div><div style='background:lightcoral; padding:10px;'>3</div><div style='background:lightcoral; padding:10px;'>4</div></div>"
"एक div में आइटम को दाईं ओर और वर्टिकली सेंटर में रखो","<div style='display: flex; justify-content: flex-end; align-items: center; height: 100px; border: 1px solid;'>Item at Right & Middle</div>"
"ग्रिड में रो और कॉलम के लिए अलग-अलग गैप सेट करो","<div style='display: grid; grid-template-columns: 1fr 1fr; row-gap: 20px; column-gap: 5px;'><div style='background:lightgrey;'>1</div><div style='background:lightgrey;'>2</div><div style='background:lightgrey;'>3</div><div style='background:lightgrey;'>4</div></div>"
"कई लाइनों वाले फ्लेक्स कंटेनर में कंटेंट को सेंटर करो","<div style='display: flex; flex-wrap: wrap; height: 150px; align-content: center; border: 1px solid;'><div style='width: 50px; height: 30px; background: lightblue; margin: 5px;'>1</div><div style='width: 50px; height: 30px; background: lightblue; margin: 5px;'>2</div><div style='width: 50px; height: 30px; background: lightblue; margin: 5px;'>3</div><div style='width: 50px; height: 30px; background: lightblue; margin: 5px;'>4</div></div>"
"ग्रिड कंटेनर में कंटेंट को 'space-between' से व्यवस्थित करो","<div style='display: grid; height: 200px; grid-template-columns: 1fr 1fr; align-content: space-between; border: 1px solid;'><div style='background:lightblue;'>1</div><div style='background:lightblue;'>2</div><div style='background:lightblue;'>3</div><div style='background:lightblue;'>4</div></div>"
"फ्लेक्सबॉक्स से एक वर्टिकल नेविगेशन मेन्यू बनाओ","<nav style='display: flex; flex-direction: column; width: 100px; border: 1px solid;'><a href='#' style='padding: 10px; border-bottom: 1px solid #ddd;'>Home</a><a href='#' style='padding: 10px; border-bottom: 1px solid #ddd;'>About</a><a href='#' style='padding: 10px;'>Contact</a></nav>"
"ग्रिड का उपयोग करके आइटम्स को एक दूसरे के ऊपर ओवरलैप करो","<div style='display: grid; grid-template-columns: repeat(2, 1fr); grid-template-rows: repeat(2, 50px);'><div style='grid-column: 1 / 3; grid-row: 1 / 3; background: lightblue; opacity: 0.7;'>Back Layer</div><div style='grid-column: 2 / 3; grid-row: 2 / 3; background: coral;'>Front Layer</div></div>"
"एक इमेज को बिना खींचे div में फिट करो","<div style='width: 150px; height: 100px; border: 1px solid;'><img src='image.jpg' alt='fit image' style='width: 100%; height: 100%; object-fit: cover;'></div>"
"फ्लेक्सबॉक्स से एक फुटर बनाओ जिसमें तीन कॉलम हों","<footer style='display: flex; justify-content: space-around; background: #333; color: white; padding: 20px;'><div><h3>Column 1</h3><p>Info 1</p></div><div><h3>Column 2</h3><p>Info 2</p></div><div><h3>Column 3</h3><p>Info 3</p></div></footer>"
"`calc()` का उपयोग करके एक फ्लेक्सिबल साइडबार लेआउट बनाओ","<div style='display: flex;'><div style='flex-basis: 150px; background: lightgrey;'>Sidebar</div><div style='flex-basis: calc(100% - 150px); background: lightyellow;'>Main Content</div></div>"
"`auto-flow: dense` का उपयोग करके ग्रिड के खाली स्थानों को भरो","<style>.dense-grid{display:grid; grid-template-columns: repeat(auto-fit, minmax(60px, 1fr)); grid-auto-rows: 40px; grid-auto-flow: dense; gap: 5px;}</style><div class='dense-grid'><div style='grid-column: span 2; background: lightblue;'>1</div><div style='background: lightblue;'>2</div><div style='background: lightblue;'>3</div><div style='grid-column: span 2; background: lightblue;'>4</div></div>"
"एक div बनाओ जिसका आस्पेक्ट रेश्यो 16/9 हो","<div style='width: 50%; aspect-ratio: 16 / 9; background: lightgrey;'><p style='text-align:center; padding-top: 20%;'>16:9 Aspect Ratio</p></div>"
"`clamp()` का उपयोग करके एक रिस्पॉन्सिव फॉन्ट साइज़ बनाओ","<h1 style='font-size: clamp(1.5rem, 5vw, 3rem);'>This is a Fluid Responsive Title</h1>"
"ग्रिड लेआउट के अंदर फ्लेक्सबॉक्स का उपयोग करो","<div style='display: grid; grid-template-columns: 1fr 1fr; gap:10px;'><div style='display: flex; justify-content: center; align-items: center; background: lightblue;'>Flexbox Inside Grid</div><div style='background: lightcoral;'>Grid Cell 2</div></div>"
"एक div को ग्रिड कंटेनर बनाओ","<div style='display: grid; border: 1px solid; min-height: 50px; padding: 5px;'>Grid Container</div>"
"तीन बराबर चौड़ाई वाले कॉलम का ग्रिड बनाओ","<div style='display: grid; grid-template-columns: 1fr 1fr 1fr; gap: 10px;'><div style='background: lightblue; padding: 5px;'>1</div><div style='background: lightblue; padding: 5px;'>2</div><div style='background: lightblue; padding: 5px;'>3</div></div>"
"दो कॉलम का ग्रिड बनाओ, पहला 100px और दूसरा 200px चौड़ा","<div style='display: grid; grid-template-columns: 100px 200px; gap: 10px;'><div style='background: lightcoral; padding: 5px;'>100px</div><div style='background: lightcoral; padding: 5px;'>200px</div></div>"
"दो रो का ग्रिड बनाओ, पहली 50px और दूसरी 100px ऊंची","<div style='display: grid; grid-template-rows: 50px 100px; gap: 10px;'><div style='background: lightgreen;'>50px tall</div><div style='background: lightgreen;'>100px tall</div></div>"
"ग्रिड आइटम्स के बीच 20px का गैप डालो","<div style='display: grid; grid-template-columns: 1fr 1fr; gap: 20px;'><div style='background: lightgrey;'>1</div><div style='background: lightgrey;'>2</div><div style='background: lightgrey;'>3</div><div style='background: lightgrey;'>4</div></div>"
"एक आइटम को पहले कॉलम से शुरू करके तीसरे कॉलम तक फैलाओ","<div style='display: grid; grid-template-columns: 1fr 1fr 1fr; gap: 10px;'><div style='grid-column-start: 1; grid-column-end: 3; background: lightblue;'>Spans first two columns</div><div style='background: lightgrey;'>3</div></div>"
"एक आइटम को पहली रो से शुरू करके तीसरी रो तक फैलाओ","<div style='display: grid; grid-template-columns: 1fr 1fr; grid-template-rows: 50px 50px 50px; gap: 10px;'><div style='grid-row-start: 1; grid-row-end: 3; background: lightcoral;'>Spans first two rows</div><div style='background: lightgrey;'>B</div><div style='background: lightgrey;'>C</div><div style='background: lightgrey;'>D</div></div>"
"ग्रिड कॉलम शॉर्टहैंड का उपयोग करके एक आइटम को 2 कॉलम तक फैलाओ","<div style='display: grid; grid-template-columns: repeat(3, 1fr); gap: 10px;'><div style='grid-column: 1 / 3; background: lightgreen;'>Spans from line 1 to 3</div><div style='background: lightgrey;'>3</div></div>"
"ग्रिड रो शॉर्टहैंड का उपयोग करके एक आइटम को 2 रो तक फैलाओ","<div style='display: grid; grid-template-columns: 1fr 1fr; grid-template-rows: repeat(3, 50px); gap: 10px;'><div style='grid-row: 1 / 3; background: lightgoldenrodyellow;'>Spans from row line 1 to 3</div><div style='background: lightgrey;'>B</div><div style='background: lightgrey;'>C</div><div style='background: lightgrey;'>D</div></div>"
"एक आइटम को दूसरी रो और तीसरे कॉलम में रखो","<div style='display: grid; grid-template-columns: repeat(3, 1fr); grid-template-rows: repeat(2, 50px); gap: 5px;'><div style='grid-row: 2; grid-column: 3; background: violet; color: white;'>Item at 2/3</div></div>"
"ग्रिड एरिया का उपयोग करके एक हेडर, मेन और फुटर लेआउट बनाओ","<style>.wrapper{display:grid; grid-template-areas: 'header' 'main' 'footer'; gap: 5px;}.h{grid-area:header; background:lightgrey;}.m{grid-area:main;}.f{grid-area:footer; background:lightgrey;}</style><div class='wrapper'><header class='h'>Header</header><main class='m'>Main Content</main><footer class='f'>Footer</footer></div>"
"ग्रिड में ऑटोमेटिकली बनने वाली रो की ऊंचाई 100px सेट करो","<div style='display: grid; grid-template-columns: 1fr 1fr; grid-auto-rows: 100px; gap: 10px;'><div style='background: lightblue;'>1</div><div style='background: lightblue;'>2</div><div style='background: lightblue;'>3 (new row, 100px tall)</div></div>"
"ग्रिड में ऑटोमेटिकली बनने वाले कॉलम की चौड़ाई 100px सेट करो","<div style='display: grid; grid-auto-flow: column; grid-auto-columns: 100px; gap: 10px;'><div style='background: lightcoral;'>1</div><div style='background: lightcoral;'>2</div></div>"
"repeat फंक्शन का उपयोग करके बराबर चौड़ाई वाले 4 कॉलम का ग्रिड बनाओ","<div style='display: grid; grid-template-columns: repeat(4, 1fr); gap: 10px;'><div style='background: lightgrey;'>1</div><div style='background: lightgrey;'>2</div><div style='background: lightgrey;'>3</div><div style='background: lightgrey;'>4</div></div>"
"minmax फंक्शन से एक फ्लेक्सिबल ग्रिड कॉलम बनाओ जो 100px से छोटा न हो","<div style='display: grid; grid-template-columns: minmax(100px, 25%) 1fr; gap: 10px;'><div style='background: lightgreen;'>At least 100px</div><div style='background: lightgrey;'>Flexible</div></div>"
"ग्रिड सेल के अंदर आइटम्स को हॉरिजॉन्टली सेंटर करो","<div style='display: grid; grid-template-columns: 150px; justify-items: center; border: 1px solid;'><div style='background: lightblue;'>Centered</div></div>"
"ग्रिड सेल के अंदर आइटम्स को वर्टिकली सेंटर करो","<div style='display: grid; grid-template-rows: 100px; align-items: center; border: 1px solid;'><div style='background: lightcoral;'>Middle</div></div>"
"ग्रिड सेल के अंदर आइटम्स को पूरी तरह से सेंटर करो","<div style='display: grid; grid-template-rows: 100px; place-items: center; border: 1px solid;'><div style='background: lightgreen;'>Center & Middle</div></div>"
"नाम वाली ग्रिड लाइन्स का उपयोग करके एक आइटम को रखो","<style>.grid-container{display:grid; grid-template-columns: [col1-start] 1fr [col2-start] 1fr [col2-end];}</style><div class='grid-container'><div style='grid-column: col1-start / col2-end;'>Spans across named lines</div></div>"
"एक ग्रिड के अंदर दूसरा ग्रिड बनाओ (नेस्टेड ग्रिड)","<div style='display: grid; grid-template-columns: 1fr 1fr; gap: 10px;'><div style='background: lightgrey; padding:5px;'>A</div><div style='display: grid; grid-template-columns: 1fr 1fr; gap: 5px; background: lightblue; padding:5px;'><div style='background: navy; color: white;'>B1</div><div style='background: navy; color: white;'>B2</div></div></div>"
"एक div को फ्लेक्स कंटेनर बनाओ","<div style='display: flex; border: 1px solid; min-height: 50px;'></div>"
"एक फ्लेक्स कंटेनर बनाओ जिसमें आइटम एक रो में हों","<div style='display: flex; border: 1px solid;'><div style='padding: 10px;'>One</div><div style='padding: 10px;'>Two</div><div style='padding: 10px;'>Three</div></div>"
"एक फ्लेक्स कंटेनर बनाओ जिसमें आइटम एक कॉलम में हों","<div style='display: flex; flex-direction: column; border: 1px solid;'><div style='padding: 10px;'>One</div><div style='padding: 10px;'>Two</div></div>"
"फ्लेक्स आइटम्स को हॉरिजॉन्टली सेंटर करो","<div style='display: flex; justify-content: center; border: 1px solid;'><div style='padding: 10px;'>Centered</div></div>"
"फ्लेक्स आइटम्स को हॉरिजॉन्टली दाईं ओर रखो","<div style='display: flex; justify-content: flex-end; border: 1px solid;'><div style='padding: 10px;'>Right Side</div></div>"
"फ्लेक्स आइटम्स के बीच में बराबर जगह डालो","<div style='display: flex; justify-content: space-between; border: 1px solid; padding: 5px;'><div style='background: lightblue;'>Left</div><div style='background: lightgreen;'>Right</div></div>"
"फ्लेक्स आइटम्स के चारों ओर बराबर जगह डालो","<div style='display: flex; justify-content: space-around; border: 1px solid; padding: 5px;'><div style='background: lightblue;'>One</div><div style='background: lightgreen;'>Two</div></div>"
"फ्लेक्स आइटम्स को वर्टिकली सेंटर करो","<div style='display: flex; align-items: center; height: 100px; border: 1px solid;'><div style='padding: 10px;'>Middle</div></div>"
"फ्लेक्स आइटम्स को वर्टिकली टॉप पर रखो","<div style='display: flex; align-items: flex-start; height: 100px; border: 1px solid;'><div style='padding: 10px;'>Top</div></div>"
"फ्लेक्स आइटम्स को वर्टिकली बॉटम पर रखो","<div style='display: flex; align-items: flex-end; height: 100px; border: 1px solid;'><div style='padding: 10px;'>Bottom</div></div>"
"एक आइटम को हॉरिजॉन्टली और वर्टिकली, दोनों तरह से सेंटर करो","<div style='display: flex; justify-content: center; align-items: center; height: 100px; border: 1px solid;'><div style='padding: 10px;'>Perfectly Centered</div></div>"
"फ्लेक्स आइटम्स को रैप (wrap) करो ताकि वे छोटी स्क्रीन पर अगली लाइन में चले जाएँ","<div style='display: flex; flex-wrap: wrap; border: 1px solid;'><div style='padding: 10px; width: 100px;'>Item 1</div><div style='padding: 10px; width: 100px;'>Item 2</div><div style='padding: 10px; width: 100px;'>Item 3</div></div>"
"फ्लेक्स आइटम्स के बीच 10px का गैप डालो","<div style='display: flex; gap: 10px; border: 1px solid;'><div style='background: lightblue; padding: 10px;'>One</div><div style='background: lightgreen; padding: 10px;'>Two</div></div>"
"एक फ्लेक्स आइटम बनाओ जो बची हुई सारी जगह ले ले","<div style='display: flex; border: 1px solid;'><div style='padding: 10px;'>Fixed</div><div style='padding: 10px; flex-grow: 1; background: lightgrey;'>This item grows to fill remaining space</div></div>"
"एक फ्लेक्स आइटम की शुरुआती चौड़ाई 150px सेट करो","<div style='display: flex; border: 1px solid;'><div style='flex-basis: 150px; background: lightblue;'>I am 150px wide</div><div style='flex-grow: 1; background: lightgrey;'>I take the rest</div></div>"
"फ्लेक्स शॉर्टहैंड का उपयोग करके एक फ्लेक्सिबल आइटम बनाओ","<div style='display: flex; border: 1px solid;'><div style='flex: 1 1 150px; padding: 10px;'>Flexible Item</div><div style='flex: 1 1 150px; padding: 10px;'>Another Flexible Item</div></div>"
"फ्लेक्स आइटम्स का क्रम बदलो, दूसरे को पहले दिखाओ","<div style='display: flex; border: 1px solid;'><div style='padding: 10px; order: 2;'>Item One (but shows second)</div><div style='padding: 10px; order: 1;'>Item Two (but shows first)</div></div>"
"सिर्फ एक आइटम को वर्टिकली बॉटम में रखो, बाकी को टॉप पर","<div style='display: flex; align-items: flex-start; height: 100px; border: 1px solid;'><div style='padding: 10px;'>Top 1</div><div style='padding: 10px; align-self: flex-end;'>Bottom</div><div style='padding: 10px;'>Top 2</div></div>"
"फ्लेक्सबॉक्स का उपयोग करके एक साधारण नेविगेशन बार बनाओ","<nav style='display: flex; justify-content: space-between; background: #333; padding: 10px;'><a href='#' style='color: white;'>Logo</a><div><a href='#' style='color: white; margin-left: 15px;'>Home</a><a href='#' style='color: white; margin-left: 15px;'>About</a></div></nav>"
"फ्लेक्स आइटम्स को उल्टे क्रम में (रो में) दिखाओ","<div style='display: flex; flex-direction: row-reverse; border: 1px solid;'><div style='padding: 10px;'>First</div><div style='padding: 10px;'>Second</div><div style='padding: 10px;'>Third</div></div>"

"CSS से एक div के अंदर सिर्फ पैराग्राफ को स्टाइल करो","<style>div > p { color: blue; }</style><div><p>This is blue.</p><span><p>This is not blue.</p></span></div>"
"एक लिंक बनाओ जो होवर करने पर लाल हो जाए","<style>a:hover { color: red; }</style><a href='#'>Hover over me</a>"
"एक बटन बनाओ जो क्लिक करते समय हरा हो जाए","<style>button:active { background-color: green; }</style><button>Click me</button>"
"एक div बनाओ जिसकी पोजीशन रिलेटिव हो","<div style='position: relative; left: 20px; border: 1px solid;'>Relative Position</div>"
"एक div के अंदर दूसरे div को टॉप-लेफ्ट कोने से 10px दूर रखो","<div style='position: relative; width: 100px; height: 100px; border: 1px solid;'><div style='position: absolute; top: 10px; left: 10px; background: red;'>Absolute</div></div>"
"एक हेडर बनाओ जो स्क्रॉल करने पर भी टॉप पर फिक्स रहे","<div style='position: fixed; top: 0; left: 0; width: 100%; padding: 5px; background: lightgrey;'>Fixed Header</div>"
"दो div बनाओ जिसमें लाल वाला div नीले वाले के ऊपर दिखे","<div style='position: absolute; top: 10px; left: 10px; width: 50px; height: 50px; background: blue; z-index: 1;'></div><div style='position: absolute; top: 20px; left: 20px; width: 50px; height: 50px; background: red; z-index: 2;'></div>"
"एक छोटे div के अंदर ज़्यादा टेक्स्ट डालो ताकि स्क्रॉलबार दिखे","<div style='width: 100px; height: 50px; overflow: scroll; border: 1px solid;'>This is a lot of text inside a small div that will cause a scrollbar to appear.</div>"
"एक छोटे div के अंदर ज़्यादा टेक्स्ट डालो और जो बाहर निकले उसे छिपा दो","<div style='width: 100px; height: 50px; overflow: hidden; border: 1px solid;'>This is a lot of text inside a small div but you will only see a part of it.</div>"
"!important का उपयोग करके एक स्टाइल को ओवरराइड करो","<style>.blue {color: blue !important;}</style><p class='blue' style='color: red;'>This text will be blue.</p>"
"h1 और h2 दोनों को एक साथ लाल रंग का करो","<style>h1, h2 { color: red; }</style><h1>Red H1</h1><h2>Red H2</h2><p>Normal text.</p>"
"एक div बनाओ जिस पर होवर करने पर 'help' कर्सर दिखे","<div style='cursor: help; border: 1px solid;'>Hover here to see the help cursor</div>"
"दो span एलिमेंट्स बनाओ जो एक ही लाइन में दिखें","<span style='border: 1px solid; padding: 2px;'>Hello</span> <span style='border: 1px solid; padding: 2px;'>World</span>"
"दो span एलिमेंट्स बनाओ जो अलग-अलग लाइन में दिखें","<span style='display: block; border: 1px solid;'>Hello</span><span style='display: block; border: 1px solid;'>World</span>"
"एक पैराग्राफ बनाओ जो दिखाई न दे","<p style='display: none;'>You cannot see me.</p>"
"एक पैराग्राफ बनाओ जो दिखाई न दे लेकिन अपनी जगह घेरे","<p style='visibility: hidden;'>I am hidden but still take up space.</p>"
"CSS कोड के अंदर एक कमेंट लिखो","<style>/* This is a single-line CSS comment */ p { color: green; }</style>"
"एक लिंक बनाओ जो visit करने के बाद हरा हो जाए","<style>a:visited { color: green; }</style><a href='#'>Click this link and I will turn green</a>"
"एक 50px का लाल स्क्वायर बनाओ जो स्क्रीन के बॉटम-राइट कोने में हो","<div style='position: fixed; bottom: 10px; right: 10px; width: 50px; height: 50px; background: red;'></div>"
"एक इनपुट फील्ड बनाओ जिस पर फोकस करने पर उसका बॉर्डर पीला हो जाए","<style>input:focus { border: 2px solid yellow; }</style><input type='text' placeholder='Click on me'>"
"एक div बनाओ जिसमें चारों तरफ से 20px की पैडिंग हो","<div style='padding: 20px; border: 1px solid;'>Content with 20px padding.</div>"
"एक div बनाओ जिसमें ऊपर-नीचे 10px और दाएं-बाएं 30px की पैडिंग हो","<div style='padding: 10px 30px; border: 1px solid;'>Padding top/bottom 10px, left/right 30px.</div>"
"एक div बनाओ जिसमें सिर्फ टॉप से 25px की पैडिंग हो","<div style='padding-top: 25px; border: 1px solid;'>Content with only top padding.</div>"
"एक div बनाओ जिसके चारों तरफ 20px का मार्जिन हो","<div style='margin: 20px; border: 1px solid; background: lightgrey;'>This div has 20px margin around it.</div>"
"एक 50% चौड़ाई वाले div को पेज के सेंटर में करो","<div style='width: 50%; margin: auto; border: 1px solid;'>This div is centered.</div>"
"एक div बनाओ जिसके सिर्फ बाईं ओर 40px का मार्जिन हो","<div style='margin-left: 40px; border: 1px solid;'>This div has a left margin of 40px.</div>"
"एक 3px मोटा, सॉलिड, नीला बॉर्डर बनाओ","<div style='border: 3px solid blue; padding: 10px;'>This div has a solid blue border.</div>"
"एक div बनाओ जिसके सभी कोने 10px तक गोल हों","<div style='border: 1px solid black; border-radius: 10px; padding: 10px;'>Rounded Corners</div>"
"एक 100px का स्क्वायर div बनाओ जो पूरी तरह से गोल दिखे","<div style='width: 100px; height: 100px; border-radius: 50%; background-color: coral;'></div>"
"एक 100px चौड़ा div बनाओ जिसमें 20px की पैडिंग और 5px का बॉर्डर शामिल हो","<div style='width: 100px; padding: 20px; border: 5px solid black; box-sizing: border-box;'>Box Sizing Example</div>"
"एक CSS क्लास '.highlight' बनाओ जिसका बैकग्राउंड पीला हो","<style>.highlight { background-color: yellow; }</style>"
"एक पैराग्राफ बनाओ जिस पर 'highlight' क्लास लगी हो","<style>.highlight { background-color: yellow; }</style><p class='highlight'>This paragraph is highlighted using a class.</p>"
"एक div बनाओ जिस पर 'box' और 'blue-text' दो क्लास लगी हों","<style>.box { border: 1px solid; } .blue-text { color: blue; }</style><div class='box blue-text'>Multiple classes example</div>"
"एक div बनाओ जो स्क्रीन की 80% चौड़ाई ले","<div style='width: 80%; border: 1px solid; margin:auto;'>This div has 80% width.</div>"
"एक div बनाओ जिसकी अधिकतम चौड़ाई 500px हो","<div style='max-width: 500px; margin: auto; border: 1px solid;'>This div's max-width is 500px.</div>"
"एक div बनाओ जिसकी न्यूनतम ऊंचाई 100px हो","<div style='min-height: 100px; border: 1px solid;'>This div's min-height is 100px.</div>"
"एक बटन बनाओ जिसके चारों ओर 2px की नीली आउटलाइन हो","<button style='outline: 2px dotted blue; border: 1px solid;'>Button with Outline</button>"
"एक div बनाओ जिसके नीचे परछाई (box shadow) हो","<div style='padding: 10px; box-shadow: 0 4px 8px 0 rgba(0,0,0,0.2); border: 1px solid #ddd;'>Box with Shadow</div>"
"एक 200px चौड़ा div बनाओ जिसमें 15px पैडिंग और 10px मार्जिन हो","<div style='width: 200px; padding: 15px; margin: 10px; border: 1px solid red; box-sizing: border-box;'>All in one box</div>"
"एक h1 बनाओ जिसकी आईडी 'main-title' हो और CSS से उसका रंग मैजेंटा करो","<style>#main-title { color: magenta; }</style><h1 id='main-title'>Main Title Styled with ID</h1>"

"एक पैराग्राफ बनाओ जिसका टेक्स्ट लाल रंग का हो","<p style='color: red;'>This is red text.</p>"
"एक h1 बनाओ जिसका बैकग्राउंड पीला हो","<h1 style='background-color: yellow;'>Yellow Background Heading</h1>"
"एक पैराग्राफ बनाओ जिसका फॉन्ट साइज़ 20 पिक्सल हो","<p style='font-size: 20px;'>This text is 20 pixels high.</p>"
"एक पैराग्राफ बनाओ जिसका फॉन्ट 'Arial' हो","<p style='font-family: Arial, sans-serif;'>This paragraph is in Arial font.</p>"
"एक h2 हेडिंग बनाओ जो सेंटर में अलाइन हो","<h2 style='text-align: center;'>Centered Heading</h2>"
"एक पैराग्राफ बनाओ जो दाईं ओर अलाइन हो","<p style='text-align: right;'>This text is right-aligned.</p>"
"एक टेक्स्ट बनाओ जिसे CSS से अंडरलाइन किया गया हो","<p style='text-decoration: underline;'>Underlined with CSS.</p>"
"एक टेक्स्ट बनाओ जिसे बीच से काटा गया हो (line-through)","<p style='text-decoration: line-through;'>Strikethrough text.</p>"
"एक पैराग्राफ बनाओ जो नीला हो और सेंटर में हो","<p style='color: blue; text-align: center;'>Blue and centered text.</p>"
"CSS का उपयोग करके टेक्स्ट को बोल्ड करो","<p style='font-weight: bold;'>This text is bold using CSS.</p>"
"CSS का उपयोग करके टेक्स्ट को इटैलिक करो","<p style='font-style: italic;'>This text is italic using CSS.</p>"
"एक 100 पिक्सल चौड़ा और 50 पिक्सल ऊँचा div बनाओ","<div style='width: 100px; height: 50px; border: 1px solid black;'></div>"
"एक टेक्स्ट बनाओ जिसके अक्षरों के बीच में ज़्यादा जगह हो","<p style='letter-spacing: 3px;'>Wide letter spacing.</p>"
"एक टेक्स्ट बनाओ जिसके शब्दों के बीच में ज़्यादा जगह हो","<p style='word-spacing: 10px;'>Wide word spacing.</p>"
"एक टेक्स्ट बनाओ जो पूरा अपरकेस में हो","<p style='text-transform: uppercase;'>this will be uppercase.</p>"
"एक टेक्स्ट बनाओ जिसका हर शब्द कैपिटल हो","<p style='text-transform: capitalize;'>each word is capitalized.</p>"
"एक div बनाओ जिसका बैकग्राउंड हल्का नीला हो और अंदर 15px की पैडिंग हो","<div style='background-color: lightblue; padding: 15px;'>This div has padding.</div>"
"एक div बनाओ जिसका बॉर्डर डॉटेड (dotted) हो","<div style='border: 2px dotted red; padding: 5px;'>Dotted Border</div>"
"एक div बनाओ जिसका बॉर्डर डैशेड (dashed) हो","<div style='border: 2px dashed blue; padding: 5px;'>Dashed Border</div>"
"एक h1 बनाओ जो 50% पारदर्शी (transparent) हो","<h1 style='opacity: 0.5;'>Faded Heading</h1>"

"एक नीला बटन बनाओ जिस पर 'Click Here' लिखा हो","<button style='background-color: blue; color: white;'>Click Here</button>"
"एक पैराग्राफ जिसमें 'Hello World' लिखा हो","<p>Hello World</p>"
"एक तस्वीर लगाओ जो 'cat.jpg' दिखाती हो","<img src='cat.jpg' alt='A cat picture'>"
"एक h2 हेडिंग जिसका रंग हरा हो","<h2 style='color: green;'>Green Heading</h2>"
"तीन आइटम वाली एक नंबर वाली लिस्ट बनाओ","<ol><li>First</li><li>Second</li><li>Third</li></ol>"
"एक बड़ा पैराग्राफ बनाओ जिसका फॉन्ट साइज़ 18px हो","<p style='font-size: 18px;'>This is a larger paragraph.</p>"
"एक टेक्स्ट इनपुट फील्ड बनाओ जिसमें पहले से 'Enter your name' लिखा हो","<input type='text' placeholder='Enter your name'>"
"एक चेकबॉक्स बनाओ जो पहले से चेक्ड हो","<input type='checkbox' checked>"
"एक लाल रंग का डिवाइडर (horizontal line) बनाओ","<hr style='border-color: red;'>"
"एक टेबल बनाओ जिसमें दो हेडिंग 'Name' और 'Age' हों","<table><tr><th>Name</th><th>Age</th></tr></table>"
"एक ड्रॉपडाउन मेन्यू बनाओ जिसमें 'Car', 'Bike', 'Bus' के ऑप्शन हों","<select><option>Car</option><option>Bike</option><option>Bus</option></select>"
"एक पासवर्ड इनपुट फील्ड बनाओ","<input type='password' placeholder='Enter password'>"
"एक div बनाओ जिसका बैकग्राउंड हल्का ग्रे हो","<div style='background-color: #f0f0f0; padding: 10px;'>This is a grey div.</div>"
"एक बटन बनाओ जिस पर क्लिक करने पर एक अलर्ट आए","<button onclick=""alert('Hello!')"">Click for Alert</button>"
"टेक्स्ट को इटैलिक (तिरछा) करो","<i>This text is italic.</i>"
"एक नंबर इनपुट फील्ड बनाओ","<input type='number'>"
"एक ईमेल इनपुट फील्ड बनाओ","<input type='email' placeholder='your@email.com'>"
"एक div बनाओ जिसके कोने गोल (rounded corners) हों","<div style='border: 1px solid black; border-radius: 8px; padding: 10px;'>Rounded corners</div>"
"एक पैराग्राफ बनाओ जिसका टेक्स्ट सेंटर में हो","<p style='text-align: center;'>This text is centered.</p>"
"एक सबमिट बटन बनाओ जिसका बैकग्राउंड हरा हो","<input type='submit' style='background-color: green; color: white;'>"
"एक बड़ा टेक्स्ट एरिया बनाओ जिसमें यूज़र कई लाइनें लिख सके","<textarea rows='4' cols='50'></textarea>"
"एक लिंक बनाओ जो एक नए टैब में खुले","<a href='https://google.com' target='_blank'>Open Google in New Tab</a>"
"टेक्स्ट को अंडरलाइन करो","<u>This is underlined text.</u>"
"एक जावास्क्रिप्ट कोड लिखो जो आज की तारीख दिखाए","<p id='date'></p><script>document.getElementById('date').innerHTML = new Date();</script>"
"एक div बनाओ जिस पर माउस ले जाने पर उसका रंग लाल हो जाए","<style>#hoverDiv:hover { color: red; }</style><div id='hoverDiv'>Hover over me!</div>"
"तीन ऑप्शन वाले रेडियो बटन बनाओ","<input type='radio' name='gender' value='male'> Male <input type='radio' name='gender' value='female'> Female <input type='radio' name='gender' value='other'> Other"
"एक तारीख चुनने वाला इनपुट फील्ड बनाओ","<input type='date'>"
"एक नेविगेशन सेक्शन के लिए HTML टैग बनाओ","<nav><ul><li>Home</li><li>About</li><li>Contact</li></ul></nav>"
"वेबसाइट के लिए एक फुटर बनाओ","<footer><p>Copyright © 2025 My Website</p></footer>"
"एक div बनाओ जिसके चारों ओर बॉक्स-शैडो हो","<div style='padding: 15px; box-shadow: 5px 5px 10px #888888;'>This is a shadow box.</div>"
"एक div बनाओ जिसका बैकग्राउंड लाल से पीले रंग का ग्रेडिएंट हो","<div style='height: 100px; background-image: linear-gradient(red, yellow);'></div>"
"एक बटन बनाओ जो होवर करने पर धीरे-धीरे बड़ा हो","<style>.g-btn:hover { transform: scale(1.1); } .g-btn { transition: transform 0.2s; }</style><button class='g-btn'>Grow Button</button>"
"एक इनपुट और बटन बनाओ जो इनपुट की वैल्यू का अलर्ट दिखाए","<input id='myText' type='text' value='Hello'><button onclick=""alert(document.getElementById('myText').value)"">Show Value</button>"
"एक पैराग्राफ और बटन बनाओ जो पैराग्राफ का रंग बदल दे","<p id='myPara'>Some text here.</p><button onclick=""document.getElementById('myPara').style.color='blue'"">Change Color</button>"
"एक 'Details' टैग बनाओ जिसे खोला और बंद किया जा सके","<details><summary>Show More</summary><p>This is the hidden information.</p></details>"
"एक आधी पारदर्शी (semi-transparent) तस्वीर बनाओ","<img src='my_image.png' alt='transparent image' style='opacity: 0.5;'>"
"एक वीडियो प्लेयर बनाओ जिसके कंट्रोल दिखें","<video width='320' height='240' controls><source src='movie.mp4' type='video/mp4'></video>"
"CSS का इस्तेमाल करके टेक्स्ट को मोटा (bold) करो","<p style='font-weight: bold;'>This text is bold.</p>"
"एक h1 और बटन बनाओ जो h1 को छिपा दे","<h1 id='textToHide'>Hide this text</h1><button onclick=""document.getElementById('textToHide').style.display='none'"">Hide</button>"
"एक छिपा हुआ टेक्स्ट और बटन बनाओ जो टेक्स्ट को दिखाए","<p id='textToShow' style='display:none;'>Hidden text.</p><button onclick=""document.getElementById('textToShow').style.display='block'"">Show</button>"
"एक कोटेशन के लिए blockquote टैग का इस्तेमाल करो","<blockquote>This is a long quotation block. It is often indented.</blockquote>"
"एक div बनाओ जिस पर माउस ले जाने पर कर्सर पॉइंटर बन जाए","<div style='cursor: pointer; border: 1px solid black;'>Hover here to see pointer</div>"
"एक फॉर्म के लिए 'रीसेट' बटन बनाओ","<form><input type='text' value='some text'><input type='reset'></form>"
"जावास्क्रिप्ट में एक फंक्शन बनाओ जो एक नाम लेकर ग्रीटिंग मैसेज लौटाए","<script>function greet(name) { return 'Hello, ' + name; }</script>"
"एक पैराग्राफ बनाओ जिसके सभी अक्षर बड़े (UPPERCASE) हों","<p style='text-transform: uppercase;'>This text will be in uppercase.</p>"
"एक टेबल बनाओ जिसमें एक हेडर दो कॉलम तक फैला हो","<table><tr><th colspan='2'>Name</th></tr><tr><td>Amit</td><td>Saka</td></tr></table>"
"एक रेंज स्लाइडर बनाओ जो 0 से 100 तक जाए","<input type='range' min='0' max='100'>"
"CSS से उन सभी इनपुट को स्टाइल करो जिनका type 'text' हो","<style>input[type='text'] { border: 2px solid blue; }</style><input type='text'><input type='password'>"
"एक बटन बनाओ जो हर क्लिक पर एक नंबर बढ़ाए","<p>Count: <span id='count'>0</span></p><button onclick=""document.getElementById('count').innerText = parseInt(document.getElementById('count').innerText) + 1"">Add 1</button>"
"एक ब्लॉग पोस्ट के लिए article टैग बनाओ","<article><h2>Blog Title</h2><p>This is the content of the blog post.</p></article>"
"एक h1 बनाओ जिसमें टेक्स्ट के नीचे परछाई (shadow) हो","<h1 style='text-shadow: 2px 2px 4px #000000;'>Shadow Text</h1>"
"एक तस्वीर और बटन बनाओ जो क्लिक करने पर तस्वीर बदल दे","<img id='myImage' src='pic_a.jpg' width='100'><button onclick=""document.getElementById('myImage').src='pic_b.jpg'"">Change Image</button>"
"एक साइडबार के लिए aside टैग का इस्तेमाल करो","<aside><h4>Related Articles</h4><p>An interesting article.</p></aside>"
"एक Flexbox कंटेनर बनाओ जिसमें आइटम्स के बीच में बराबर जगह हो","<div style='display: flex; justify-content: space-between; border: 1px solid;'><p>Left</p><p>Center</p><p>Right</p></div>"
"एक टेक्स्ट इनपुट बनाओ जिसे भरना ज़रूरी (required) हो","<form><input type='text' required><input type='submit'></form>"
"एक ऑडियो प्लेयर बनाओ जो 'song.mp3' चलाए","<audio controls><source src='song.mp3' type='audio/mpeg'></audio>"
"एक बटन बनाओ जो एक टेक्स्ट को दिखाए और छिपाए (toggle)","<p id='toggleText'>Click the button to toggle me.</p><button onclick=""var x = document.getElementById('toggleText'); x.style.display = (x.style.display === 'none' ? 'block' : 'none');"">Toggle Text</button>"
"एक div के अंदर दूसरे div को टॉप-राइट कोने में रखो","<div style='position: relative; width: 200px; height: 100px; border: 1px solid;'><div style='position: absolute; top: 5px; right: 5px; background: red;'>Corner</div></div>"
"एक डिसेबल्ड बटन बनाओ जिस पर क्लिक न किया जा सके","<button disabled>You can't click me</button>"
"एक बटन बनाओ जो क्लिक करने पर वर्तमान पेज का URL बताए","<button onclick=""alert(window.location.href)"">Show Page URL</button>"
"एक लिस्ट बनाओ जिसके बुलेट्स स्क्वायर (square) हों","<ul style='list-style-type: square;'><li>Apple</li><li>Banana</li></ul>"
"मोबाइल responsive वेबसाइट के लिए viewport meta टैग","<meta name='viewport' content='width=device-width, initial-scale=1.0'>"
"जावास्क्रिप्ट से किसी एलिमेंट की CSS क्लास बदलो","<style>.blue{color:blue;}.red{color:red;}</style><p id='p_class' class='blue'>Hello</p><button onclick=""document.getElementById('p_class').className = 'red'"">Make Red</button>"
"ऑटो-सजेशन के लिए एक datalist इनपुट बनाओ","<label for='browser'>Choose a browser:</label><input list='browsers' id='browser' name='browser'><datalist id='browsers'><option value='Edge'><option value='Firefox'><option value='Chrome'></datalist>"
"CSS एनीमेशन से एक टेक्स्ट बनाओ जो धीरे-धीरे fade in हो","<style>@keyframes fadeIn { from { opacity: 0; } to { opacity: 1; } } .fade-in { animation: fadeIn 2s; }</style><h1 class='fade-in'>I faded in!</h1>"
"वेबसाइट के लिए सबसे बड़ी हेडिंग बनाओ","<h1>This is a Main Heading</h1>"
"एक h2 सब-हेडिंग बनाओ","<h2>This is a Sub-heading</h2>"
"सबसे छोटी हेडिंग के लिए टैग","<h6>This is the smallest heading</h6>"
"एक छोटा सा पैराग्राफ लिखो","<p>This is a simple paragraph of text.</p>"
"टेक्स्ट को बोल्ड करने के लिए टैग","<b>Bold Text</b>"
"टेक्स्ट को इटैलिक करने के लिए टैग","<i>Italic Text</i>"
"टेक्स्ट को अंडरलाइन करने के लिए टैग","<u>Underlined Text</u>"
"महत्वपूर्ण टेक्स्ट के लिए strong टैग का उपयोग करो","<strong>This text is important.</strong>"
"जोर देने वाले टेक्स्ट के लिए em टैग का उपयोग करो","<em>This text is emphasized.</em>"
"गूगल की वेबसाइट का लिंक बनाओ","<a href='https://www.google.com'>Go to Google</a>"
"एक लिंक बनाओ जो नए टैब में खुले","<a href='https://www.google.com' target='_blank'>Google in New Tab</a>"
"एक तस्वीर दिखाने के लिए img टैग बनाओ","<img src='image.png' alt='An example image'>"
"एक 100 पिक्सल चौड़ी तस्वीर लगाओ","<img src='photo.jpg' alt='photo' width='100'>"
"एक हॉरिजॉन्टल लाइन या डिवाइडर बनाओ","<hr>"
"टेक्स्ट के बीच में एक लाइन ब्रेक डालो","Hello<br>World"
"तीन फलों वाली एक बुलेट लिस्ट बनाओ","<ul><li>Apple</li><li>Banana</li><li>Mango</li></ul>"
"तीन शहरों वाली एक नंबर वाली लिस्ट बनाओ","<ol><li>Lucknow</li><li>Delhi</li><li>Mumbai</li></ol>"
"कंटेंट के लिए एक div कंटेनर बनाओ","<div>This is content inside a div.</div>"
"एक वाक्य के अंदर टेक्स्ट को स्टाइल करने के लिए span टैग","<p>This is a <span style='color:red;'>red</span> word.</p>"
"कोड दिखाने के लिए pre टैग का इस्तेमाल करो","<pre><code>function hello() {\n  console.log('Hello, World!');\n}</code></pre>"
"एक साधारण फॉर्म बनाओ","<form action='/submit_page.php'></form>"
"नाम के लिए एक लेबल बनाओ","<label for='name'>Name:</label>"
"फर्स्ट नेम के लिए एक लेबल और टेक्स्ट इनपुट बनाओ","<label for='fname'>First name:</label><br><input type='text' id='fname' name='fname'>"
"एक सबमिट बटन बनाओ जिसका टेक्स्ट 'Register' हो","<input type='submit' value='Register'>"
"एक साधारण टेबल का टैग बनाओ","<table></table>"
"टेबल में एक रो बनाने के लिए टैग","<tr></tr>"
"टेबल में एक हेडर सेल बनाने के लिए टैग","<th>Header Cell</th>"
"टेबल में एक डेटा सेल बनाने के लिए टैग","<td>Data Cell</td>"
"नाम और शहर के हेडर वाली एक साधारण टेबल बनाओ","<table><tr><th>Name</th><th>City</th></tr><tr><td>Amit</td><td>Lucknow</td></tr></table>"
"एक तस्वीर बनाओ जो क्लिक करने पर गूगल पर ले जाए","<a href='https://google.com'><img src='photo.jpg' alt='Google link' style='width:42px;height:42px;'></a>"
"HTML में एक कमेंट लिखो",""
"एक कोटेशन के लिए blockquote टैग बनाओ","<blockquote>This is a long quotation. It helps to show that this text is quoted from another source.</blockquote>"
"एक पैराग्राफ बनाओ जिस पर होवर करने पर 'Tooltip text' दिखे","<p title='This is the tooltip text'>Hover over this paragraph.</p>"
"एक डिसेबल्ड इनपुट फील्ड बनाओ","<input type='text' value='Cannot change this' disabled>"
"एक सिर्फ-पढ़ने-लायक (read-only) इनपुट फील्ड बनाओ","<input type='text' value='You can only read this' readonly>"
"एक नेस्टेड लिस्ट बनाओ (लिस्ट के अंदर लिस्ट)","<ul><li>Coffee</li><li>Tea<ul><li>Black Tea</li><li>Green Tea</li></ul></li></ul>"
"एक पैराग्राफ को 'intro-para' की आईडी दो","<p id='intro-para'>This is the introduction paragraph.</p>"
"दो पैराग्राफ को 'highlight' क्लास दो","<p class='highlight'>This is the first highlighted paragraph.</p><p class='highlight'>This is the second one.</p>"
"कॉपीराइट सिंबल © बनाने के लिए कोड","<p>Copyright &copy; 2025</p>"
"less-than सिंबल (<) को टेक्स्ट में दिखाने के लिए कोड","<p>The less-than sign is written as &lt;</p>"
"लिंग चुनने के लिए रेडियो बटन बनाओ","<form><input type='radio' id='male' name='gender' value='Male'><label for='male'>Male</label><br><input type='radio' id='female' name='gender' value='Female'><label for='female'>Female</label></form>"
"हॉबी चुनने के लिए चेकबॉक्स बनाओ","<input type='checkbox' id='hobby1' name='hobby1' value='Music'><label for='hobby1'>Music</label><br><input type='checkbox' id='hobby2' name='hobby2' value='Sports'><label for='hobby2'>Sports</label>"
"कमेंट लिखने के लिए एक बड़ा टेक्स्ट एरिया बनाओ","<textarea name='comment' rows='5' cols='30' placeholder='Write your comment here...'></textarea>"
"शहर चुनने के लिए एक ड्रॉपडाउन लिस्ट बनाओ","<label for='city'>Choose a city:</label><select id='city' name='city'><option value='delhi'>Delhi</option><option value='mumbai'>Mumbai</option></select>"
"जन्मदिन चुनने के लिए एक डेट इनपुट बनाओ","<label for='birthday'>Birthday:</label><input type='date' id='birthday' name='birthday'>"
"रंग चुनने के लिए एक कलर पिकर बनाओ","<label for='favcolor'>Select your favorite color:</label><input type='color' id='favcolor' name='favcolor'>"
"1 से 10 के बीच एक नंबर चुनने के लिए इनपुट बनाओ","<label for='quantity'>Quantity (between 1 and 10):</label><input type='number' id='quantity' name='quantity' min='1' max='10'>"
"फाइल अपलोड करने के लिए एक बटन बनाओ","<label for='myfile'>Select a file:</label><input type='file' id='myfile' name='myfile'>"
"एक सामान्य क्लिक करने वाला बटन बनाओ","<button type='button'>Click Me</button>"
"फॉर्म को रीसेट करने के लिए एक बटन बनाओ","<button type='reset'>Reset Form</button>"
"वेबसाइट के लिए एक हेडर सेक्शन बनाओ","<header><h1>Main Website Title</h1><p>Welcome to our website!</p></header>"
"वेबसाइट के लिए एक फुटर सेक्शन बनाओ","<footer><p>Author: Amit Saka<br><a href='mailto:email@example.com'>email@example.com</a></p></footer>"
"पेज के मुख्य कंटेंट के लिए main टैग का उपयोग करो","<main><h2>Main Content Heading</h2><p>This is the main content of the page where the primary information resides.</p></main>"
"एक 'About Us' सेक्शन बनाओ","<section><h2>About Us</h2><p>Information about our company and history.</p></section>"
"एक ब्लॉग पोस्ट के लिए article टैग का उपयोग करो","<article><h3>Blog Post Title</h3><p>This is the first paragraph of the blog post. It contains the main story.</p></article>"
"एक नेविगेशन मेन्यू के लिए nav टैग बनाओ","<nav><a href='/home'>Home</a> | <a href='/about'>About</a> | <a href='/contact'>Contact</a></nav>"
"कैप्शन के साथ एक तस्वीर दिखाने के लिए figure और figcaption टैग का उपयोग करो","<figure><img src='pic.jpg' alt='My Picture' style='width:100%'><figcaption>Fig.1 - A caption for the picture above.</figcaption></figure>"
"समय दिखाने के लिए time टैग का उपयोग करो","<p>The event starts at <time>10:00</time> in the morning.</p>"
"टेक्स्ट को हाईलाइट करने के लिए mark टैग का उपयोग करो","<p>Do not forget to buy <mark>milk</mark> today.</p>"
"एक क्लिक करके खुलने और बंद होने वाला सेक्शन बनाओ","<details><summary>Click for details</summary><p>This is the hidden detail text that appears on click.</p></details>"
